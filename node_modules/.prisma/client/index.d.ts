
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Equipamento
 * 
 */
export type Equipamento = $Result.DefaultSelection<Prisma.$EquipamentoPayload>
/**
 * Model PasswordResetToken
 * 
 */
export type PasswordResetToken = $Result.DefaultSelection<Prisma.$PasswordResetTokenPayload>
/**
 * Model Estoque
 * 
 */
export type Estoque = $Result.DefaultSelection<Prisma.$EstoquePayload>
/**
 * Model UsuarioEstoque
 * 
 */
export type UsuarioEstoque = $Result.DefaultSelection<Prisma.$UsuarioEstoquePayload>
/**
 * Model Transferencia
 * 
 */
export type Transferencia = $Result.DefaultSelection<Prisma.$TransferenciaPayload>
/**
 * Model EstoqueItem
 * 
 */
export type EstoqueItem = $Result.DefaultSelection<Prisma.$EstoqueItemPayload>
/**
 * Model Permissao
 * 
 */
export type Permissao = $Result.DefaultSelection<Prisma.$PermissaoPayload>
/**
 * Model UsuarioPermissao
 * 
 */
export type UsuarioPermissao = $Result.DefaultSelection<Prisma.$UsuarioPermissaoPayload>
/**
 * Model Route
 * 
 */
export type Route = $Result.DefaultSelection<Prisma.$RoutePayload>
/**
 * Model PermissaoOnRoute
 * 
 */
export type PermissaoOnRoute = $Result.DefaultSelection<Prisma.$PermissaoOnRoutePayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.equipamento`: Exposes CRUD operations for the **Equipamento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Equipamentos
    * const equipamentos = await prisma.equipamento.findMany()
    * ```
    */
  get equipamento(): Prisma.EquipamentoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.passwordResetToken`: Exposes CRUD operations for the **PasswordResetToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PasswordResetTokens
    * const passwordResetTokens = await prisma.passwordResetToken.findMany()
    * ```
    */
  get passwordResetToken(): Prisma.PasswordResetTokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estoque`: Exposes CRUD operations for the **Estoque** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Estoques
    * const estoques = await prisma.estoque.findMany()
    * ```
    */
  get estoque(): Prisma.EstoqueDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuarioEstoque`: Exposes CRUD operations for the **UsuarioEstoque** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UsuarioEstoques
    * const usuarioEstoques = await prisma.usuarioEstoque.findMany()
    * ```
    */
  get usuarioEstoque(): Prisma.UsuarioEstoqueDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transferencia`: Exposes CRUD operations for the **Transferencia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transferencias
    * const transferencias = await prisma.transferencia.findMany()
    * ```
    */
  get transferencia(): Prisma.TransferenciaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estoqueItem`: Exposes CRUD operations for the **EstoqueItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EstoqueItems
    * const estoqueItems = await prisma.estoqueItem.findMany()
    * ```
    */
  get estoqueItem(): Prisma.EstoqueItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permissao`: Exposes CRUD operations for the **Permissao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permissaos
    * const permissaos = await prisma.permissao.findMany()
    * ```
    */
  get permissao(): Prisma.PermissaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuarioPermissao`: Exposes CRUD operations for the **UsuarioPermissao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UsuarioPermissaos
    * const usuarioPermissaos = await prisma.usuarioPermissao.findMany()
    * ```
    */
  get usuarioPermissao(): Prisma.UsuarioPermissaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.route`: Exposes CRUD operations for the **Route** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Routes
    * const routes = await prisma.route.findMany()
    * ```
    */
  get route(): Prisma.RouteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permissaoOnRoute`: Exposes CRUD operations for the **PermissaoOnRoute** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PermissaoOnRoutes
    * const permissaoOnRoutes = await prisma.permissaoOnRoute.findMany()
    * ```
    */
  get permissaoOnRoute(): Prisma.PermissaoOnRouteDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.13.0
   * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuario: 'Usuario',
    Equipamento: 'Equipamento',
    PasswordResetToken: 'PasswordResetToken',
    Estoque: 'Estoque',
    UsuarioEstoque: 'UsuarioEstoque',
    Transferencia: 'Transferencia',
    EstoqueItem: 'EstoqueItem',
    Permissao: 'Permissao',
    UsuarioPermissao: 'UsuarioPermissao',
    Route: 'Route',
    PermissaoOnRoute: 'PermissaoOnRoute'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "usuario" | "equipamento" | "passwordResetToken" | "estoque" | "usuarioEstoque" | "transferencia" | "estoqueItem" | "permissao" | "usuarioPermissao" | "route" | "permissaoOnRoute"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Equipamento: {
        payload: Prisma.$EquipamentoPayload<ExtArgs>
        fields: Prisma.EquipamentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EquipamentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipamentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EquipamentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipamentoPayload>
          }
          findFirst: {
            args: Prisma.EquipamentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipamentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EquipamentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipamentoPayload>
          }
          findMany: {
            args: Prisma.EquipamentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipamentoPayload>[]
          }
          create: {
            args: Prisma.EquipamentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipamentoPayload>
          }
          createMany: {
            args: Prisma.EquipamentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EquipamentoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipamentoPayload>[]
          }
          delete: {
            args: Prisma.EquipamentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipamentoPayload>
          }
          update: {
            args: Prisma.EquipamentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipamentoPayload>
          }
          deleteMany: {
            args: Prisma.EquipamentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EquipamentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EquipamentoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipamentoPayload>[]
          }
          upsert: {
            args: Prisma.EquipamentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipamentoPayload>
          }
          aggregate: {
            args: Prisma.EquipamentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEquipamento>
          }
          groupBy: {
            args: Prisma.EquipamentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EquipamentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EquipamentoCountArgs<ExtArgs>
            result: $Utils.Optional<EquipamentoCountAggregateOutputType> | number
          }
        }
      }
      PasswordResetToken: {
        payload: Prisma.$PasswordResetTokenPayload<ExtArgs>
        fields: Prisma.PasswordResetTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PasswordResetTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PasswordResetTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          findFirst: {
            args: Prisma.PasswordResetTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PasswordResetTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          findMany: {
            args: Prisma.PasswordResetTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>[]
          }
          create: {
            args: Prisma.PasswordResetTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          createMany: {
            args: Prisma.PasswordResetTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PasswordResetTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>[]
          }
          delete: {
            args: Prisma.PasswordResetTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          update: {
            args: Prisma.PasswordResetTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          deleteMany: {
            args: Prisma.PasswordResetTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PasswordResetTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PasswordResetTokenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>[]
          }
          upsert: {
            args: Prisma.PasswordResetTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          aggregate: {
            args: Prisma.PasswordResetTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePasswordResetToken>
          }
          groupBy: {
            args: Prisma.PasswordResetTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<PasswordResetTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.PasswordResetTokenCountArgs<ExtArgs>
            result: $Utils.Optional<PasswordResetTokenCountAggregateOutputType> | number
          }
        }
      }
      Estoque: {
        payload: Prisma.$EstoquePayload<ExtArgs>
        fields: Prisma.EstoqueFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EstoqueFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoquePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EstoqueFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoquePayload>
          }
          findFirst: {
            args: Prisma.EstoqueFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoquePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EstoqueFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoquePayload>
          }
          findMany: {
            args: Prisma.EstoqueFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoquePayload>[]
          }
          create: {
            args: Prisma.EstoqueCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoquePayload>
          }
          createMany: {
            args: Prisma.EstoqueCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EstoqueCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoquePayload>[]
          }
          delete: {
            args: Prisma.EstoqueDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoquePayload>
          }
          update: {
            args: Prisma.EstoqueUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoquePayload>
          }
          deleteMany: {
            args: Prisma.EstoqueDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EstoqueUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EstoqueUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoquePayload>[]
          }
          upsert: {
            args: Prisma.EstoqueUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoquePayload>
          }
          aggregate: {
            args: Prisma.EstoqueAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstoque>
          }
          groupBy: {
            args: Prisma.EstoqueGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstoqueGroupByOutputType>[]
          }
          count: {
            args: Prisma.EstoqueCountArgs<ExtArgs>
            result: $Utils.Optional<EstoqueCountAggregateOutputType> | number
          }
        }
      }
      UsuarioEstoque: {
        payload: Prisma.$UsuarioEstoquePayload<ExtArgs>
        fields: Prisma.UsuarioEstoqueFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioEstoqueFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstoquePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioEstoqueFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstoquePayload>
          }
          findFirst: {
            args: Prisma.UsuarioEstoqueFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstoquePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioEstoqueFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstoquePayload>
          }
          findMany: {
            args: Prisma.UsuarioEstoqueFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstoquePayload>[]
          }
          create: {
            args: Prisma.UsuarioEstoqueCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstoquePayload>
          }
          createMany: {
            args: Prisma.UsuarioEstoqueCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioEstoqueCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstoquePayload>[]
          }
          delete: {
            args: Prisma.UsuarioEstoqueDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstoquePayload>
          }
          update: {
            args: Prisma.UsuarioEstoqueUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstoquePayload>
          }
          deleteMany: {
            args: Prisma.UsuarioEstoqueDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioEstoqueUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioEstoqueUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstoquePayload>[]
          }
          upsert: {
            args: Prisma.UsuarioEstoqueUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstoquePayload>
          }
          aggregate: {
            args: Prisma.UsuarioEstoqueAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuarioEstoque>
          }
          groupBy: {
            args: Prisma.UsuarioEstoqueGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioEstoqueGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioEstoqueCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioEstoqueCountAggregateOutputType> | number
          }
        }
      }
      Transferencia: {
        payload: Prisma.$TransferenciaPayload<ExtArgs>
        fields: Prisma.TransferenciaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransferenciaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransferenciaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaPayload>
          }
          findFirst: {
            args: Prisma.TransferenciaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransferenciaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaPayload>
          }
          findMany: {
            args: Prisma.TransferenciaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaPayload>[]
          }
          create: {
            args: Prisma.TransferenciaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaPayload>
          }
          createMany: {
            args: Prisma.TransferenciaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransferenciaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaPayload>[]
          }
          delete: {
            args: Prisma.TransferenciaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaPayload>
          }
          update: {
            args: Prisma.TransferenciaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaPayload>
          }
          deleteMany: {
            args: Prisma.TransferenciaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransferenciaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TransferenciaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaPayload>[]
          }
          upsert: {
            args: Prisma.TransferenciaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaPayload>
          }
          aggregate: {
            args: Prisma.TransferenciaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransferencia>
          }
          groupBy: {
            args: Prisma.TransferenciaGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransferenciaGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransferenciaCountArgs<ExtArgs>
            result: $Utils.Optional<TransferenciaCountAggregateOutputType> | number
          }
        }
      }
      EstoqueItem: {
        payload: Prisma.$EstoqueItemPayload<ExtArgs>
        fields: Prisma.EstoqueItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EstoqueItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoqueItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EstoqueItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoqueItemPayload>
          }
          findFirst: {
            args: Prisma.EstoqueItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoqueItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EstoqueItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoqueItemPayload>
          }
          findMany: {
            args: Prisma.EstoqueItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoqueItemPayload>[]
          }
          create: {
            args: Prisma.EstoqueItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoqueItemPayload>
          }
          createMany: {
            args: Prisma.EstoqueItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EstoqueItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoqueItemPayload>[]
          }
          delete: {
            args: Prisma.EstoqueItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoqueItemPayload>
          }
          update: {
            args: Prisma.EstoqueItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoqueItemPayload>
          }
          deleteMany: {
            args: Prisma.EstoqueItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EstoqueItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EstoqueItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoqueItemPayload>[]
          }
          upsert: {
            args: Prisma.EstoqueItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstoqueItemPayload>
          }
          aggregate: {
            args: Prisma.EstoqueItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstoqueItem>
          }
          groupBy: {
            args: Prisma.EstoqueItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstoqueItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.EstoqueItemCountArgs<ExtArgs>
            result: $Utils.Optional<EstoqueItemCountAggregateOutputType> | number
          }
        }
      }
      Permissao: {
        payload: Prisma.$PermissaoPayload<ExtArgs>
        fields: Prisma.PermissaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PermissaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PermissaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoPayload>
          }
          findFirst: {
            args: Prisma.PermissaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PermissaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoPayload>
          }
          findMany: {
            args: Prisma.PermissaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoPayload>[]
          }
          create: {
            args: Prisma.PermissaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoPayload>
          }
          createMany: {
            args: Prisma.PermissaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PermissaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoPayload>[]
          }
          delete: {
            args: Prisma.PermissaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoPayload>
          }
          update: {
            args: Prisma.PermissaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoPayload>
          }
          deleteMany: {
            args: Prisma.PermissaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PermissaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PermissaoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoPayload>[]
          }
          upsert: {
            args: Prisma.PermissaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoPayload>
          }
          aggregate: {
            args: Prisma.PermissaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermissao>
          }
          groupBy: {
            args: Prisma.PermissaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermissaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PermissaoCountArgs<ExtArgs>
            result: $Utils.Optional<PermissaoCountAggregateOutputType> | number
          }
        }
      }
      UsuarioPermissao: {
        payload: Prisma.$UsuarioPermissaoPayload<ExtArgs>
        fields: Prisma.UsuarioPermissaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioPermissaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPermissaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioPermissaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPermissaoPayload>
          }
          findFirst: {
            args: Prisma.UsuarioPermissaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPermissaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioPermissaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPermissaoPayload>
          }
          findMany: {
            args: Prisma.UsuarioPermissaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPermissaoPayload>[]
          }
          create: {
            args: Prisma.UsuarioPermissaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPermissaoPayload>
          }
          createMany: {
            args: Prisma.UsuarioPermissaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioPermissaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPermissaoPayload>[]
          }
          delete: {
            args: Prisma.UsuarioPermissaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPermissaoPayload>
          }
          update: {
            args: Prisma.UsuarioPermissaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPermissaoPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioPermissaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioPermissaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioPermissaoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPermissaoPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioPermissaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPermissaoPayload>
          }
          aggregate: {
            args: Prisma.UsuarioPermissaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuarioPermissao>
          }
          groupBy: {
            args: Prisma.UsuarioPermissaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioPermissaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioPermissaoCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioPermissaoCountAggregateOutputType> | number
          }
        }
      }
      Route: {
        payload: Prisma.$RoutePayload<ExtArgs>
        fields: Prisma.RouteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RouteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoutePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RouteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoutePayload>
          }
          findFirst: {
            args: Prisma.RouteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoutePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RouteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoutePayload>
          }
          findMany: {
            args: Prisma.RouteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoutePayload>[]
          }
          create: {
            args: Prisma.RouteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoutePayload>
          }
          createMany: {
            args: Prisma.RouteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RouteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoutePayload>[]
          }
          delete: {
            args: Prisma.RouteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoutePayload>
          }
          update: {
            args: Prisma.RouteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoutePayload>
          }
          deleteMany: {
            args: Prisma.RouteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RouteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RouteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoutePayload>[]
          }
          upsert: {
            args: Prisma.RouteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoutePayload>
          }
          aggregate: {
            args: Prisma.RouteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRoute>
          }
          groupBy: {
            args: Prisma.RouteGroupByArgs<ExtArgs>
            result: $Utils.Optional<RouteGroupByOutputType>[]
          }
          count: {
            args: Prisma.RouteCountArgs<ExtArgs>
            result: $Utils.Optional<RouteCountAggregateOutputType> | number
          }
        }
      }
      PermissaoOnRoute: {
        payload: Prisma.$PermissaoOnRoutePayload<ExtArgs>
        fields: Prisma.PermissaoOnRouteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PermissaoOnRouteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoOnRoutePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PermissaoOnRouteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoOnRoutePayload>
          }
          findFirst: {
            args: Prisma.PermissaoOnRouteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoOnRoutePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PermissaoOnRouteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoOnRoutePayload>
          }
          findMany: {
            args: Prisma.PermissaoOnRouteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoOnRoutePayload>[]
          }
          create: {
            args: Prisma.PermissaoOnRouteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoOnRoutePayload>
          }
          createMany: {
            args: Prisma.PermissaoOnRouteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PermissaoOnRouteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoOnRoutePayload>[]
          }
          delete: {
            args: Prisma.PermissaoOnRouteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoOnRoutePayload>
          }
          update: {
            args: Prisma.PermissaoOnRouteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoOnRoutePayload>
          }
          deleteMany: {
            args: Prisma.PermissaoOnRouteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PermissaoOnRouteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PermissaoOnRouteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoOnRoutePayload>[]
          }
          upsert: {
            args: Prisma.PermissaoOnRouteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissaoOnRoutePayload>
          }
          aggregate: {
            args: Prisma.PermissaoOnRouteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermissaoOnRoute>
          }
          groupBy: {
            args: Prisma.PermissaoOnRouteGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermissaoOnRouteGroupByOutputType>[]
          }
          count: {
            args: Prisma.PermissaoOnRouteCountArgs<ExtArgs>
            result: $Utils.Optional<PermissaoOnRouteCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    usuario?: UsuarioOmit
    equipamento?: EquipamentoOmit
    passwordResetToken?: PasswordResetTokenOmit
    estoque?: EstoqueOmit
    usuarioEstoque?: UsuarioEstoqueOmit
    transferencia?: TransferenciaOmit
    estoqueItem?: EstoqueItemOmit
    permissao?: PermissaoOmit
    usuarioPermissao?: UsuarioPermissaoOmit
    route?: RouteOmit
    permissaoOnRoute?: PermissaoOnRouteOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    permissoes: number
    estoques: number
    passwordResetToken: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permissoes?: boolean | UsuarioCountOutputTypeCountPermissoesArgs
    estoques?: boolean | UsuarioCountOutputTypeCountEstoquesArgs
    passwordResetToken?: boolean | UsuarioCountOutputTypeCountPasswordResetTokenArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountPermissoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioPermissaoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountEstoquesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioEstoqueWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountPasswordResetTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PasswordResetTokenWhereInput
  }


  /**
   * Count Type EquipamentoCountOutputType
   */

  export type EquipamentoCountOutputType = {
    transferencias: number
    estoqueItens: number
  }

  export type EquipamentoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transferencias?: boolean | EquipamentoCountOutputTypeCountTransferenciasArgs
    estoqueItens?: boolean | EquipamentoCountOutputTypeCountEstoqueItensArgs
  }

  // Custom InputTypes
  /**
   * EquipamentoCountOutputType without action
   */
  export type EquipamentoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipamentoCountOutputType
     */
    select?: EquipamentoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EquipamentoCountOutputType without action
   */
  export type EquipamentoCountOutputTypeCountTransferenciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransferenciaWhereInput
  }

  /**
   * EquipamentoCountOutputType without action
   */
  export type EquipamentoCountOutputTypeCountEstoqueItensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstoqueItemWhereInput
  }


  /**
   * Count Type EstoqueCountOutputType
   */

  export type EstoqueCountOutputType = {
    transferenciasDestino: number
    transferenciasOrigem: number
    itens: number
    usuarios: number
  }

  export type EstoqueCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transferenciasDestino?: boolean | EstoqueCountOutputTypeCountTransferenciasDestinoArgs
    transferenciasOrigem?: boolean | EstoqueCountOutputTypeCountTransferenciasOrigemArgs
    itens?: boolean | EstoqueCountOutputTypeCountItensArgs
    usuarios?: boolean | EstoqueCountOutputTypeCountUsuariosArgs
  }

  // Custom InputTypes
  /**
   * EstoqueCountOutputType without action
   */
  export type EstoqueCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstoqueCountOutputType
     */
    select?: EstoqueCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstoqueCountOutputType without action
   */
  export type EstoqueCountOutputTypeCountTransferenciasDestinoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransferenciaWhereInput
  }

  /**
   * EstoqueCountOutputType without action
   */
  export type EstoqueCountOutputTypeCountTransferenciasOrigemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransferenciaWhereInput
  }

  /**
   * EstoqueCountOutputType without action
   */
  export type EstoqueCountOutputTypeCountItensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstoqueItemWhereInput
  }

  /**
   * EstoqueCountOutputType without action
   */
  export type EstoqueCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioEstoqueWhereInput
  }


  /**
   * Count Type PermissaoCountOutputType
   */

  export type PermissaoCountOutputType = {
    usuarios: number
    rotasPermitidas: number
  }

  export type PermissaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | PermissaoCountOutputTypeCountUsuariosArgs
    rotasPermitidas?: boolean | PermissaoCountOutputTypeCountRotasPermitidasArgs
  }

  // Custom InputTypes
  /**
   * PermissaoCountOutputType without action
   */
  export type PermissaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissaoCountOutputType
     */
    select?: PermissaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PermissaoCountOutputType without action
   */
  export type PermissaoCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioPermissaoWhereInput
  }

  /**
   * PermissaoCountOutputType without action
   */
  export type PermissaoCountOutputTypeCountRotasPermitidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissaoOnRouteWhereInput
  }


  /**
   * Count Type RouteCountOutputType
   */

  export type RouteCountOutputType = {
    permissoes: number
  }

  export type RouteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permissoes?: boolean | RouteCountOutputTypeCountPermissoesArgs
  }

  // Custom InputTypes
  /**
   * RouteCountOutputType without action
   */
  export type RouteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RouteCountOutputType
     */
    select?: RouteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RouteCountOutputType without action
   */
  export type RouteCountOutputTypeCountPermissoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissaoOnRouteWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id: number | null
    matricula: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id: number | null
    matricula: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    matricula: number | null
    senha: string | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    matricula: number | null
    senha: string | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    nome: number
    email: number
    matricula: number
    senha: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id?: true
    matricula?: true
  }

  export type UsuarioSumAggregateInputType = {
    id?: true
    matricula?: true
  }

  export type UsuarioMinAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    matricula?: true
    senha?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    matricula?: true
    senha?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    matricula?: true
    senha?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: number
    nome: string | null
    email: string
    matricula: number | null
    senha: string | null
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    matricula?: boolean
    senha?: boolean
    permissoes?: boolean | Usuario$permissoesArgs<ExtArgs>
    estoques?: boolean | Usuario$estoquesArgs<ExtArgs>
    passwordResetToken?: boolean | Usuario$passwordResetTokenArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    matricula?: boolean
    senha?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    matricula?: boolean
    senha?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id?: boolean
    nome?: boolean
    email?: boolean
    matricula?: boolean
    senha?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "email" | "matricula" | "senha", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permissoes?: boolean | Usuario$permissoesArgs<ExtArgs>
    estoques?: boolean | Usuario$estoquesArgs<ExtArgs>
    passwordResetToken?: boolean | Usuario$passwordResetTokenArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      permissoes: Prisma.$UsuarioPermissaoPayload<ExtArgs>[]
      estoques: Prisma.$UsuarioEstoquePayload<ExtArgs>[]
      passwordResetToken: Prisma.$PasswordResetTokenPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string | null
      email: string
      matricula: number | null
      senha: string | null
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {UsuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    permissoes<T extends Usuario$permissoesArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$permissoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPermissaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    estoques<T extends Usuario$estoquesArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$estoquesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioEstoquePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    passwordResetToken<T extends Usuario$passwordResetTokenArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$passwordResetTokenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */
  interface UsuarioFieldRefs {
    readonly id: FieldRef<"Usuario", 'Int'>
    readonly nome: FieldRef<"Usuario", 'String'>
    readonly email: FieldRef<"Usuario", 'String'>
    readonly matricula: FieldRef<"Usuario", 'Int'>
    readonly senha: FieldRef<"Usuario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario updateManyAndReturn
   */
  export type UsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario.permissoes
   */
  export type Usuario$permissoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioPermissao
     */
    select?: UsuarioPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioPermissao
     */
    omit?: UsuarioPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioPermissaoInclude<ExtArgs> | null
    where?: UsuarioPermissaoWhereInput
    orderBy?: UsuarioPermissaoOrderByWithRelationInput | UsuarioPermissaoOrderByWithRelationInput[]
    cursor?: UsuarioPermissaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioPermissaoScalarFieldEnum | UsuarioPermissaoScalarFieldEnum[]
  }

  /**
   * Usuario.estoques
   */
  export type Usuario$estoquesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstoque
     */
    select?: UsuarioEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEstoque
     */
    omit?: UsuarioEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstoqueInclude<ExtArgs> | null
    where?: UsuarioEstoqueWhereInput
    orderBy?: UsuarioEstoqueOrderByWithRelationInput | UsuarioEstoqueOrderByWithRelationInput[]
    cursor?: UsuarioEstoqueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioEstoqueScalarFieldEnum | UsuarioEstoqueScalarFieldEnum[]
  }

  /**
   * Usuario.passwordResetToken
   */
  export type Usuario$passwordResetTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    where?: PasswordResetTokenWhereInput
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    cursor?: PasswordResetTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PasswordResetTokenScalarFieldEnum | PasswordResetTokenScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Equipamento
   */

  export type AggregateEquipamento = {
    _count: EquipamentoCountAggregateOutputType | null
    _avg: EquipamentoAvgAggregateOutputType | null
    _sum: EquipamentoSumAggregateOutputType | null
    _min: EquipamentoMinAggregateOutputType | null
    _max: EquipamentoMaxAggregateOutputType | null
  }

  export type EquipamentoAvgAggregateOutputType = {
    id: number | null
    quantidade: number | null
  }

  export type EquipamentoSumAggregateOutputType = {
    id: number | null
    quantidade: number | null
  }

  export type EquipamentoMinAggregateOutputType = {
    id: number | null
    nome: string | null
    quantidade: number | null
    data: Date | null
  }

  export type EquipamentoMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    quantidade: number | null
    data: Date | null
  }

  export type EquipamentoCountAggregateOutputType = {
    id: number
    nome: number
    quantidade: number
    data: number
    _all: number
  }


  export type EquipamentoAvgAggregateInputType = {
    id?: true
    quantidade?: true
  }

  export type EquipamentoSumAggregateInputType = {
    id?: true
    quantidade?: true
  }

  export type EquipamentoMinAggregateInputType = {
    id?: true
    nome?: true
    quantidade?: true
    data?: true
  }

  export type EquipamentoMaxAggregateInputType = {
    id?: true
    nome?: true
    quantidade?: true
    data?: true
  }

  export type EquipamentoCountAggregateInputType = {
    id?: true
    nome?: true
    quantidade?: true
    data?: true
    _all?: true
  }

  export type EquipamentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Equipamento to aggregate.
     */
    where?: EquipamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipamentos to fetch.
     */
    orderBy?: EquipamentoOrderByWithRelationInput | EquipamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EquipamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Equipamentos
    **/
    _count?: true | EquipamentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EquipamentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EquipamentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EquipamentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EquipamentoMaxAggregateInputType
  }

  export type GetEquipamentoAggregateType<T extends EquipamentoAggregateArgs> = {
        [P in keyof T & keyof AggregateEquipamento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEquipamento[P]>
      : GetScalarType<T[P], AggregateEquipamento[P]>
  }




  export type EquipamentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipamentoWhereInput
    orderBy?: EquipamentoOrderByWithAggregationInput | EquipamentoOrderByWithAggregationInput[]
    by: EquipamentoScalarFieldEnum[] | EquipamentoScalarFieldEnum
    having?: EquipamentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EquipamentoCountAggregateInputType | true
    _avg?: EquipamentoAvgAggregateInputType
    _sum?: EquipamentoSumAggregateInputType
    _min?: EquipamentoMinAggregateInputType
    _max?: EquipamentoMaxAggregateInputType
  }

  export type EquipamentoGroupByOutputType = {
    id: number
    nome: string | null
    quantidade: number | null
    data: Date | null
    _count: EquipamentoCountAggregateOutputType | null
    _avg: EquipamentoAvgAggregateOutputType | null
    _sum: EquipamentoSumAggregateOutputType | null
    _min: EquipamentoMinAggregateOutputType | null
    _max: EquipamentoMaxAggregateOutputType | null
  }

  type GetEquipamentoGroupByPayload<T extends EquipamentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EquipamentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EquipamentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EquipamentoGroupByOutputType[P]>
            : GetScalarType<T[P], EquipamentoGroupByOutputType[P]>
        }
      >
    >


  export type EquipamentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    quantidade?: boolean
    data?: boolean
    transferencias?: boolean | Equipamento$transferenciasArgs<ExtArgs>
    estoqueItens?: boolean | Equipamento$estoqueItensArgs<ExtArgs>
    _count?: boolean | EquipamentoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["equipamento"]>

  export type EquipamentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    quantidade?: boolean
    data?: boolean
  }, ExtArgs["result"]["equipamento"]>

  export type EquipamentoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    quantidade?: boolean
    data?: boolean
  }, ExtArgs["result"]["equipamento"]>

  export type EquipamentoSelectScalar = {
    id?: boolean
    nome?: boolean
    quantidade?: boolean
    data?: boolean
  }

  export type EquipamentoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "quantidade" | "data", ExtArgs["result"]["equipamento"]>
  export type EquipamentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transferencias?: boolean | Equipamento$transferenciasArgs<ExtArgs>
    estoqueItens?: boolean | Equipamento$estoqueItensArgs<ExtArgs>
    _count?: boolean | EquipamentoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EquipamentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type EquipamentoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EquipamentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Equipamento"
    objects: {
      transferencias: Prisma.$TransferenciaPayload<ExtArgs>[]
      estoqueItens: Prisma.$EstoqueItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string | null
      quantidade: number | null
      data: Date | null
    }, ExtArgs["result"]["equipamento"]>
    composites: {}
  }

  type EquipamentoGetPayload<S extends boolean | null | undefined | EquipamentoDefaultArgs> = $Result.GetResult<Prisma.$EquipamentoPayload, S>

  type EquipamentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EquipamentoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EquipamentoCountAggregateInputType | true
    }

  export interface EquipamentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Equipamento'], meta: { name: 'Equipamento' } }
    /**
     * Find zero or one Equipamento that matches the filter.
     * @param {EquipamentoFindUniqueArgs} args - Arguments to find a Equipamento
     * @example
     * // Get one Equipamento
     * const equipamento = await prisma.equipamento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EquipamentoFindUniqueArgs>(args: SelectSubset<T, EquipamentoFindUniqueArgs<ExtArgs>>): Prisma__EquipamentoClient<$Result.GetResult<Prisma.$EquipamentoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Equipamento that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EquipamentoFindUniqueOrThrowArgs} args - Arguments to find a Equipamento
     * @example
     * // Get one Equipamento
     * const equipamento = await prisma.equipamento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EquipamentoFindUniqueOrThrowArgs>(args: SelectSubset<T, EquipamentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EquipamentoClient<$Result.GetResult<Prisma.$EquipamentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Equipamento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipamentoFindFirstArgs} args - Arguments to find a Equipamento
     * @example
     * // Get one Equipamento
     * const equipamento = await prisma.equipamento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EquipamentoFindFirstArgs>(args?: SelectSubset<T, EquipamentoFindFirstArgs<ExtArgs>>): Prisma__EquipamentoClient<$Result.GetResult<Prisma.$EquipamentoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Equipamento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipamentoFindFirstOrThrowArgs} args - Arguments to find a Equipamento
     * @example
     * // Get one Equipamento
     * const equipamento = await prisma.equipamento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EquipamentoFindFirstOrThrowArgs>(args?: SelectSubset<T, EquipamentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EquipamentoClient<$Result.GetResult<Prisma.$EquipamentoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Equipamentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipamentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Equipamentos
     * const equipamentos = await prisma.equipamento.findMany()
     * 
     * // Get first 10 Equipamentos
     * const equipamentos = await prisma.equipamento.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const equipamentoWithIdOnly = await prisma.equipamento.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EquipamentoFindManyArgs>(args?: SelectSubset<T, EquipamentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipamentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Equipamento.
     * @param {EquipamentoCreateArgs} args - Arguments to create a Equipamento.
     * @example
     * // Create one Equipamento
     * const Equipamento = await prisma.equipamento.create({
     *   data: {
     *     // ... data to create a Equipamento
     *   }
     * })
     * 
     */
    create<T extends EquipamentoCreateArgs>(args: SelectSubset<T, EquipamentoCreateArgs<ExtArgs>>): Prisma__EquipamentoClient<$Result.GetResult<Prisma.$EquipamentoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Equipamentos.
     * @param {EquipamentoCreateManyArgs} args - Arguments to create many Equipamentos.
     * @example
     * // Create many Equipamentos
     * const equipamento = await prisma.equipamento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EquipamentoCreateManyArgs>(args?: SelectSubset<T, EquipamentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Equipamentos and returns the data saved in the database.
     * @param {EquipamentoCreateManyAndReturnArgs} args - Arguments to create many Equipamentos.
     * @example
     * // Create many Equipamentos
     * const equipamento = await prisma.equipamento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Equipamentos and only return the `id`
     * const equipamentoWithIdOnly = await prisma.equipamento.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EquipamentoCreateManyAndReturnArgs>(args?: SelectSubset<T, EquipamentoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipamentoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Equipamento.
     * @param {EquipamentoDeleteArgs} args - Arguments to delete one Equipamento.
     * @example
     * // Delete one Equipamento
     * const Equipamento = await prisma.equipamento.delete({
     *   where: {
     *     // ... filter to delete one Equipamento
     *   }
     * })
     * 
     */
    delete<T extends EquipamentoDeleteArgs>(args: SelectSubset<T, EquipamentoDeleteArgs<ExtArgs>>): Prisma__EquipamentoClient<$Result.GetResult<Prisma.$EquipamentoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Equipamento.
     * @param {EquipamentoUpdateArgs} args - Arguments to update one Equipamento.
     * @example
     * // Update one Equipamento
     * const equipamento = await prisma.equipamento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EquipamentoUpdateArgs>(args: SelectSubset<T, EquipamentoUpdateArgs<ExtArgs>>): Prisma__EquipamentoClient<$Result.GetResult<Prisma.$EquipamentoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Equipamentos.
     * @param {EquipamentoDeleteManyArgs} args - Arguments to filter Equipamentos to delete.
     * @example
     * // Delete a few Equipamentos
     * const { count } = await prisma.equipamento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EquipamentoDeleteManyArgs>(args?: SelectSubset<T, EquipamentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Equipamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipamentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Equipamentos
     * const equipamento = await prisma.equipamento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EquipamentoUpdateManyArgs>(args: SelectSubset<T, EquipamentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Equipamentos and returns the data updated in the database.
     * @param {EquipamentoUpdateManyAndReturnArgs} args - Arguments to update many Equipamentos.
     * @example
     * // Update many Equipamentos
     * const equipamento = await prisma.equipamento.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Equipamentos and only return the `id`
     * const equipamentoWithIdOnly = await prisma.equipamento.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EquipamentoUpdateManyAndReturnArgs>(args: SelectSubset<T, EquipamentoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipamentoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Equipamento.
     * @param {EquipamentoUpsertArgs} args - Arguments to update or create a Equipamento.
     * @example
     * // Update or create a Equipamento
     * const equipamento = await prisma.equipamento.upsert({
     *   create: {
     *     // ... data to create a Equipamento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Equipamento we want to update
     *   }
     * })
     */
    upsert<T extends EquipamentoUpsertArgs>(args: SelectSubset<T, EquipamentoUpsertArgs<ExtArgs>>): Prisma__EquipamentoClient<$Result.GetResult<Prisma.$EquipamentoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Equipamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipamentoCountArgs} args - Arguments to filter Equipamentos to count.
     * @example
     * // Count the number of Equipamentos
     * const count = await prisma.equipamento.count({
     *   where: {
     *     // ... the filter for the Equipamentos we want to count
     *   }
     * })
    **/
    count<T extends EquipamentoCountArgs>(
      args?: Subset<T, EquipamentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EquipamentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Equipamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipamentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EquipamentoAggregateArgs>(args: Subset<T, EquipamentoAggregateArgs>): Prisma.PrismaPromise<GetEquipamentoAggregateType<T>>

    /**
     * Group by Equipamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipamentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EquipamentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EquipamentoGroupByArgs['orderBy'] }
        : { orderBy?: EquipamentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EquipamentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipamentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Equipamento model
   */
  readonly fields: EquipamentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Equipamento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EquipamentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transferencias<T extends Equipamento$transferenciasArgs<ExtArgs> = {}>(args?: Subset<T, Equipamento$transferenciasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferenciaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    estoqueItens<T extends Equipamento$estoqueItensArgs<ExtArgs> = {}>(args?: Subset<T, Equipamento$estoqueItensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstoqueItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Equipamento model
   */
  interface EquipamentoFieldRefs {
    readonly id: FieldRef<"Equipamento", 'Int'>
    readonly nome: FieldRef<"Equipamento", 'String'>
    readonly quantidade: FieldRef<"Equipamento", 'Int'>
    readonly data: FieldRef<"Equipamento", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Equipamento findUnique
   */
  export type EquipamentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipamento
     */
    select?: EquipamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipamento
     */
    omit?: EquipamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipamentoInclude<ExtArgs> | null
    /**
     * Filter, which Equipamento to fetch.
     */
    where: EquipamentoWhereUniqueInput
  }

  /**
   * Equipamento findUniqueOrThrow
   */
  export type EquipamentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipamento
     */
    select?: EquipamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipamento
     */
    omit?: EquipamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipamentoInclude<ExtArgs> | null
    /**
     * Filter, which Equipamento to fetch.
     */
    where: EquipamentoWhereUniqueInput
  }

  /**
   * Equipamento findFirst
   */
  export type EquipamentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipamento
     */
    select?: EquipamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipamento
     */
    omit?: EquipamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipamentoInclude<ExtArgs> | null
    /**
     * Filter, which Equipamento to fetch.
     */
    where?: EquipamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipamentos to fetch.
     */
    orderBy?: EquipamentoOrderByWithRelationInput | EquipamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Equipamentos.
     */
    cursor?: EquipamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Equipamentos.
     */
    distinct?: EquipamentoScalarFieldEnum | EquipamentoScalarFieldEnum[]
  }

  /**
   * Equipamento findFirstOrThrow
   */
  export type EquipamentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipamento
     */
    select?: EquipamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipamento
     */
    omit?: EquipamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipamentoInclude<ExtArgs> | null
    /**
     * Filter, which Equipamento to fetch.
     */
    where?: EquipamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipamentos to fetch.
     */
    orderBy?: EquipamentoOrderByWithRelationInput | EquipamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Equipamentos.
     */
    cursor?: EquipamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Equipamentos.
     */
    distinct?: EquipamentoScalarFieldEnum | EquipamentoScalarFieldEnum[]
  }

  /**
   * Equipamento findMany
   */
  export type EquipamentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipamento
     */
    select?: EquipamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipamento
     */
    omit?: EquipamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipamentoInclude<ExtArgs> | null
    /**
     * Filter, which Equipamentos to fetch.
     */
    where?: EquipamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipamentos to fetch.
     */
    orderBy?: EquipamentoOrderByWithRelationInput | EquipamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Equipamentos.
     */
    cursor?: EquipamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipamentos.
     */
    skip?: number
    distinct?: EquipamentoScalarFieldEnum | EquipamentoScalarFieldEnum[]
  }

  /**
   * Equipamento create
   */
  export type EquipamentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipamento
     */
    select?: EquipamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipamento
     */
    omit?: EquipamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipamentoInclude<ExtArgs> | null
    /**
     * The data needed to create a Equipamento.
     */
    data?: XOR<EquipamentoCreateInput, EquipamentoUncheckedCreateInput>
  }

  /**
   * Equipamento createMany
   */
  export type EquipamentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Equipamentos.
     */
    data: EquipamentoCreateManyInput | EquipamentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Equipamento createManyAndReturn
   */
  export type EquipamentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipamento
     */
    select?: EquipamentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Equipamento
     */
    omit?: EquipamentoOmit<ExtArgs> | null
    /**
     * The data used to create many Equipamentos.
     */
    data: EquipamentoCreateManyInput | EquipamentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Equipamento update
   */
  export type EquipamentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipamento
     */
    select?: EquipamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipamento
     */
    omit?: EquipamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipamentoInclude<ExtArgs> | null
    /**
     * The data needed to update a Equipamento.
     */
    data: XOR<EquipamentoUpdateInput, EquipamentoUncheckedUpdateInput>
    /**
     * Choose, which Equipamento to update.
     */
    where: EquipamentoWhereUniqueInput
  }

  /**
   * Equipamento updateMany
   */
  export type EquipamentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Equipamentos.
     */
    data: XOR<EquipamentoUpdateManyMutationInput, EquipamentoUncheckedUpdateManyInput>
    /**
     * Filter which Equipamentos to update
     */
    where?: EquipamentoWhereInput
    /**
     * Limit how many Equipamentos to update.
     */
    limit?: number
  }

  /**
   * Equipamento updateManyAndReturn
   */
  export type EquipamentoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipamento
     */
    select?: EquipamentoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Equipamento
     */
    omit?: EquipamentoOmit<ExtArgs> | null
    /**
     * The data used to update Equipamentos.
     */
    data: XOR<EquipamentoUpdateManyMutationInput, EquipamentoUncheckedUpdateManyInput>
    /**
     * Filter which Equipamentos to update
     */
    where?: EquipamentoWhereInput
    /**
     * Limit how many Equipamentos to update.
     */
    limit?: number
  }

  /**
   * Equipamento upsert
   */
  export type EquipamentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipamento
     */
    select?: EquipamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipamento
     */
    omit?: EquipamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipamentoInclude<ExtArgs> | null
    /**
     * The filter to search for the Equipamento to update in case it exists.
     */
    where: EquipamentoWhereUniqueInput
    /**
     * In case the Equipamento found by the `where` argument doesn't exist, create a new Equipamento with this data.
     */
    create: XOR<EquipamentoCreateInput, EquipamentoUncheckedCreateInput>
    /**
     * In case the Equipamento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EquipamentoUpdateInput, EquipamentoUncheckedUpdateInput>
  }

  /**
   * Equipamento delete
   */
  export type EquipamentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipamento
     */
    select?: EquipamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipamento
     */
    omit?: EquipamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipamentoInclude<ExtArgs> | null
    /**
     * Filter which Equipamento to delete.
     */
    where: EquipamentoWhereUniqueInput
  }

  /**
   * Equipamento deleteMany
   */
  export type EquipamentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Equipamentos to delete
     */
    where?: EquipamentoWhereInput
    /**
     * Limit how many Equipamentos to delete.
     */
    limit?: number
  }

  /**
   * Equipamento.transferencias
   */
  export type Equipamento$transferenciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transferencia
     */
    select?: TransferenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transferencia
     */
    omit?: TransferenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaInclude<ExtArgs> | null
    where?: TransferenciaWhereInput
    orderBy?: TransferenciaOrderByWithRelationInput | TransferenciaOrderByWithRelationInput[]
    cursor?: TransferenciaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransferenciaScalarFieldEnum | TransferenciaScalarFieldEnum[]
  }

  /**
   * Equipamento.estoqueItens
   */
  export type Equipamento$estoqueItensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstoqueItem
     */
    select?: EstoqueItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstoqueItem
     */
    omit?: EstoqueItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueItemInclude<ExtArgs> | null
    where?: EstoqueItemWhereInput
    orderBy?: EstoqueItemOrderByWithRelationInput | EstoqueItemOrderByWithRelationInput[]
    cursor?: EstoqueItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EstoqueItemScalarFieldEnum | EstoqueItemScalarFieldEnum[]
  }

  /**
   * Equipamento without action
   */
  export type EquipamentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Equipamento
     */
    select?: EquipamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Equipamento
     */
    omit?: EquipamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipamentoInclude<ExtArgs> | null
  }


  /**
   * Model PasswordResetToken
   */

  export type AggregatePasswordResetToken = {
    _count: PasswordResetTokenCountAggregateOutputType | null
    _avg: PasswordResetTokenAvgAggregateOutputType | null
    _sum: PasswordResetTokenSumAggregateOutputType | null
    _min: PasswordResetTokenMinAggregateOutputType | null
    _max: PasswordResetTokenMaxAggregateOutputType | null
  }

  export type PasswordResetTokenAvgAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type PasswordResetTokenSumAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type PasswordResetTokenMinAggregateOutputType = {
    id: number | null
    userId: number | null
    tokenHash: string | null
    expiresAt: Date | null
    usedAt: Date | null
    createdAt: Date | null
  }

  export type PasswordResetTokenMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    tokenHash: string | null
    expiresAt: Date | null
    usedAt: Date | null
    createdAt: Date | null
  }

  export type PasswordResetTokenCountAggregateOutputType = {
    id: number
    userId: number
    tokenHash: number
    expiresAt: number
    usedAt: number
    createdAt: number
    _all: number
  }


  export type PasswordResetTokenAvgAggregateInputType = {
    id?: true
    userId?: true
  }

  export type PasswordResetTokenSumAggregateInputType = {
    id?: true
    userId?: true
  }

  export type PasswordResetTokenMinAggregateInputType = {
    id?: true
    userId?: true
    tokenHash?: true
    expiresAt?: true
    usedAt?: true
    createdAt?: true
  }

  export type PasswordResetTokenMaxAggregateInputType = {
    id?: true
    userId?: true
    tokenHash?: true
    expiresAt?: true
    usedAt?: true
    createdAt?: true
  }

  export type PasswordResetTokenCountAggregateInputType = {
    id?: true
    userId?: true
    tokenHash?: true
    expiresAt?: true
    usedAt?: true
    createdAt?: true
    _all?: true
  }

  export type PasswordResetTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PasswordResetToken to aggregate.
     */
    where?: PasswordResetTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PasswordResetTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PasswordResetTokens
    **/
    _count?: true | PasswordResetTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PasswordResetTokenAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PasswordResetTokenSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PasswordResetTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PasswordResetTokenMaxAggregateInputType
  }

  export type GetPasswordResetTokenAggregateType<T extends PasswordResetTokenAggregateArgs> = {
        [P in keyof T & keyof AggregatePasswordResetToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePasswordResetToken[P]>
      : GetScalarType<T[P], AggregatePasswordResetToken[P]>
  }




  export type PasswordResetTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PasswordResetTokenWhereInput
    orderBy?: PasswordResetTokenOrderByWithAggregationInput | PasswordResetTokenOrderByWithAggregationInput[]
    by: PasswordResetTokenScalarFieldEnum[] | PasswordResetTokenScalarFieldEnum
    having?: PasswordResetTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PasswordResetTokenCountAggregateInputType | true
    _avg?: PasswordResetTokenAvgAggregateInputType
    _sum?: PasswordResetTokenSumAggregateInputType
    _min?: PasswordResetTokenMinAggregateInputType
    _max?: PasswordResetTokenMaxAggregateInputType
  }

  export type PasswordResetTokenGroupByOutputType = {
    id: number
    userId: number
    tokenHash: string
    expiresAt: Date
    usedAt: Date | null
    createdAt: Date
    _count: PasswordResetTokenCountAggregateOutputType | null
    _avg: PasswordResetTokenAvgAggregateOutputType | null
    _sum: PasswordResetTokenSumAggregateOutputType | null
    _min: PasswordResetTokenMinAggregateOutputType | null
    _max: PasswordResetTokenMaxAggregateOutputType | null
  }

  type GetPasswordResetTokenGroupByPayload<T extends PasswordResetTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PasswordResetTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PasswordResetTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PasswordResetTokenGroupByOutputType[P]>
            : GetScalarType<T[P], PasswordResetTokenGroupByOutputType[P]>
        }
      >
    >


  export type PasswordResetTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    tokenHash?: boolean
    expiresAt?: boolean
    usedAt?: boolean
    createdAt?: boolean
    user?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["passwordResetToken"]>

  export type PasswordResetTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    tokenHash?: boolean
    expiresAt?: boolean
    usedAt?: boolean
    createdAt?: boolean
    user?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["passwordResetToken"]>

  export type PasswordResetTokenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    tokenHash?: boolean
    expiresAt?: boolean
    usedAt?: boolean
    createdAt?: boolean
    user?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["passwordResetToken"]>

  export type PasswordResetTokenSelectScalar = {
    id?: boolean
    userId?: boolean
    tokenHash?: boolean
    expiresAt?: boolean
    usedAt?: boolean
    createdAt?: boolean
  }

  export type PasswordResetTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "tokenHash" | "expiresAt" | "usedAt" | "createdAt", ExtArgs["result"]["passwordResetToken"]>
  export type PasswordResetTokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type PasswordResetTokenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type PasswordResetTokenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $PasswordResetTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PasswordResetToken"
    objects: {
      user: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      tokenHash: string
      expiresAt: Date
      usedAt: Date | null
      createdAt: Date
    }, ExtArgs["result"]["passwordResetToken"]>
    composites: {}
  }

  type PasswordResetTokenGetPayload<S extends boolean | null | undefined | PasswordResetTokenDefaultArgs> = $Result.GetResult<Prisma.$PasswordResetTokenPayload, S>

  type PasswordResetTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PasswordResetTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PasswordResetTokenCountAggregateInputType | true
    }

  export interface PasswordResetTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PasswordResetToken'], meta: { name: 'PasswordResetToken' } }
    /**
     * Find zero or one PasswordResetToken that matches the filter.
     * @param {PasswordResetTokenFindUniqueArgs} args - Arguments to find a PasswordResetToken
     * @example
     * // Get one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PasswordResetTokenFindUniqueArgs>(args: SelectSubset<T, PasswordResetTokenFindUniqueArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PasswordResetToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PasswordResetTokenFindUniqueOrThrowArgs} args - Arguments to find a PasswordResetToken
     * @example
     * // Get one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PasswordResetTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, PasswordResetTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PasswordResetToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenFindFirstArgs} args - Arguments to find a PasswordResetToken
     * @example
     * // Get one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PasswordResetTokenFindFirstArgs>(args?: SelectSubset<T, PasswordResetTokenFindFirstArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PasswordResetToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenFindFirstOrThrowArgs} args - Arguments to find a PasswordResetToken
     * @example
     * // Get one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PasswordResetTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, PasswordResetTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PasswordResetTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetToken.findMany()
     * 
     * // Get first 10 PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const passwordResetTokenWithIdOnly = await prisma.passwordResetToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PasswordResetTokenFindManyArgs>(args?: SelectSubset<T, PasswordResetTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PasswordResetToken.
     * @param {PasswordResetTokenCreateArgs} args - Arguments to create a PasswordResetToken.
     * @example
     * // Create one PasswordResetToken
     * const PasswordResetToken = await prisma.passwordResetToken.create({
     *   data: {
     *     // ... data to create a PasswordResetToken
     *   }
     * })
     * 
     */
    create<T extends PasswordResetTokenCreateArgs>(args: SelectSubset<T, PasswordResetTokenCreateArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PasswordResetTokens.
     * @param {PasswordResetTokenCreateManyArgs} args - Arguments to create many PasswordResetTokens.
     * @example
     * // Create many PasswordResetTokens
     * const passwordResetToken = await prisma.passwordResetToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PasswordResetTokenCreateManyArgs>(args?: SelectSubset<T, PasswordResetTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PasswordResetTokens and returns the data saved in the database.
     * @param {PasswordResetTokenCreateManyAndReturnArgs} args - Arguments to create many PasswordResetTokens.
     * @example
     * // Create many PasswordResetTokens
     * const passwordResetToken = await prisma.passwordResetToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PasswordResetTokens and only return the `id`
     * const passwordResetTokenWithIdOnly = await prisma.passwordResetToken.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PasswordResetTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, PasswordResetTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PasswordResetToken.
     * @param {PasswordResetTokenDeleteArgs} args - Arguments to delete one PasswordResetToken.
     * @example
     * // Delete one PasswordResetToken
     * const PasswordResetToken = await prisma.passwordResetToken.delete({
     *   where: {
     *     // ... filter to delete one PasswordResetToken
     *   }
     * })
     * 
     */
    delete<T extends PasswordResetTokenDeleteArgs>(args: SelectSubset<T, PasswordResetTokenDeleteArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PasswordResetToken.
     * @param {PasswordResetTokenUpdateArgs} args - Arguments to update one PasswordResetToken.
     * @example
     * // Update one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PasswordResetTokenUpdateArgs>(args: SelectSubset<T, PasswordResetTokenUpdateArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PasswordResetTokens.
     * @param {PasswordResetTokenDeleteManyArgs} args - Arguments to filter PasswordResetTokens to delete.
     * @example
     * // Delete a few PasswordResetTokens
     * const { count } = await prisma.passwordResetToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PasswordResetTokenDeleteManyArgs>(args?: SelectSubset<T, PasswordResetTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PasswordResetTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PasswordResetTokens
     * const passwordResetToken = await prisma.passwordResetToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PasswordResetTokenUpdateManyArgs>(args: SelectSubset<T, PasswordResetTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PasswordResetTokens and returns the data updated in the database.
     * @param {PasswordResetTokenUpdateManyAndReturnArgs} args - Arguments to update many PasswordResetTokens.
     * @example
     * // Update many PasswordResetTokens
     * const passwordResetToken = await prisma.passwordResetToken.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PasswordResetTokens and only return the `id`
     * const passwordResetTokenWithIdOnly = await prisma.passwordResetToken.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PasswordResetTokenUpdateManyAndReturnArgs>(args: SelectSubset<T, PasswordResetTokenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PasswordResetToken.
     * @param {PasswordResetTokenUpsertArgs} args - Arguments to update or create a PasswordResetToken.
     * @example
     * // Update or create a PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.upsert({
     *   create: {
     *     // ... data to create a PasswordResetToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PasswordResetToken we want to update
     *   }
     * })
     */
    upsert<T extends PasswordResetTokenUpsertArgs>(args: SelectSubset<T, PasswordResetTokenUpsertArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PasswordResetTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenCountArgs} args - Arguments to filter PasswordResetTokens to count.
     * @example
     * // Count the number of PasswordResetTokens
     * const count = await prisma.passwordResetToken.count({
     *   where: {
     *     // ... the filter for the PasswordResetTokens we want to count
     *   }
     * })
    **/
    count<T extends PasswordResetTokenCountArgs>(
      args?: Subset<T, PasswordResetTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PasswordResetTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PasswordResetToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PasswordResetTokenAggregateArgs>(args: Subset<T, PasswordResetTokenAggregateArgs>): Prisma.PrismaPromise<GetPasswordResetTokenAggregateType<T>>

    /**
     * Group by PasswordResetToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PasswordResetTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PasswordResetTokenGroupByArgs['orderBy'] }
        : { orderBy?: PasswordResetTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PasswordResetTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPasswordResetTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PasswordResetToken model
   */
  readonly fields: PasswordResetTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PasswordResetToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PasswordResetTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PasswordResetToken model
   */
  interface PasswordResetTokenFieldRefs {
    readonly id: FieldRef<"PasswordResetToken", 'Int'>
    readonly userId: FieldRef<"PasswordResetToken", 'Int'>
    readonly tokenHash: FieldRef<"PasswordResetToken", 'String'>
    readonly expiresAt: FieldRef<"PasswordResetToken", 'DateTime'>
    readonly usedAt: FieldRef<"PasswordResetToken", 'DateTime'>
    readonly createdAt: FieldRef<"PasswordResetToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PasswordResetToken findUnique
   */
  export type PasswordResetTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * Filter, which PasswordResetToken to fetch.
     */
    where: PasswordResetTokenWhereUniqueInput
  }

  /**
   * PasswordResetToken findUniqueOrThrow
   */
  export type PasswordResetTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * Filter, which PasswordResetToken to fetch.
     */
    where: PasswordResetTokenWhereUniqueInput
  }

  /**
   * PasswordResetToken findFirst
   */
  export type PasswordResetTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * Filter, which PasswordResetToken to fetch.
     */
    where?: PasswordResetTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PasswordResetTokens.
     */
    cursor?: PasswordResetTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PasswordResetTokens.
     */
    distinct?: PasswordResetTokenScalarFieldEnum | PasswordResetTokenScalarFieldEnum[]
  }

  /**
   * PasswordResetToken findFirstOrThrow
   */
  export type PasswordResetTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * Filter, which PasswordResetToken to fetch.
     */
    where?: PasswordResetTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PasswordResetTokens.
     */
    cursor?: PasswordResetTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PasswordResetTokens.
     */
    distinct?: PasswordResetTokenScalarFieldEnum | PasswordResetTokenScalarFieldEnum[]
  }

  /**
   * PasswordResetToken findMany
   */
  export type PasswordResetTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * Filter, which PasswordResetTokens to fetch.
     */
    where?: PasswordResetTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PasswordResetTokens.
     */
    cursor?: PasswordResetTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    distinct?: PasswordResetTokenScalarFieldEnum | PasswordResetTokenScalarFieldEnum[]
  }

  /**
   * PasswordResetToken create
   */
  export type PasswordResetTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * The data needed to create a PasswordResetToken.
     */
    data: XOR<PasswordResetTokenCreateInput, PasswordResetTokenUncheckedCreateInput>
  }

  /**
   * PasswordResetToken createMany
   */
  export type PasswordResetTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PasswordResetTokens.
     */
    data: PasswordResetTokenCreateManyInput | PasswordResetTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PasswordResetToken createManyAndReturn
   */
  export type PasswordResetTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * The data used to create many PasswordResetTokens.
     */
    data: PasswordResetTokenCreateManyInput | PasswordResetTokenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PasswordResetToken update
   */
  export type PasswordResetTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * The data needed to update a PasswordResetToken.
     */
    data: XOR<PasswordResetTokenUpdateInput, PasswordResetTokenUncheckedUpdateInput>
    /**
     * Choose, which PasswordResetToken to update.
     */
    where: PasswordResetTokenWhereUniqueInput
  }

  /**
   * PasswordResetToken updateMany
   */
  export type PasswordResetTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PasswordResetTokens.
     */
    data: XOR<PasswordResetTokenUpdateManyMutationInput, PasswordResetTokenUncheckedUpdateManyInput>
    /**
     * Filter which PasswordResetTokens to update
     */
    where?: PasswordResetTokenWhereInput
    /**
     * Limit how many PasswordResetTokens to update.
     */
    limit?: number
  }

  /**
   * PasswordResetToken updateManyAndReturn
   */
  export type PasswordResetTokenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * The data used to update PasswordResetTokens.
     */
    data: XOR<PasswordResetTokenUpdateManyMutationInput, PasswordResetTokenUncheckedUpdateManyInput>
    /**
     * Filter which PasswordResetTokens to update
     */
    where?: PasswordResetTokenWhereInput
    /**
     * Limit how many PasswordResetTokens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PasswordResetToken upsert
   */
  export type PasswordResetTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * The filter to search for the PasswordResetToken to update in case it exists.
     */
    where: PasswordResetTokenWhereUniqueInput
    /**
     * In case the PasswordResetToken found by the `where` argument doesn't exist, create a new PasswordResetToken with this data.
     */
    create: XOR<PasswordResetTokenCreateInput, PasswordResetTokenUncheckedCreateInput>
    /**
     * In case the PasswordResetToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PasswordResetTokenUpdateInput, PasswordResetTokenUncheckedUpdateInput>
  }

  /**
   * PasswordResetToken delete
   */
  export type PasswordResetTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * Filter which PasswordResetToken to delete.
     */
    where: PasswordResetTokenWhereUniqueInput
  }

  /**
   * PasswordResetToken deleteMany
   */
  export type PasswordResetTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PasswordResetTokens to delete
     */
    where?: PasswordResetTokenWhereInput
    /**
     * Limit how many PasswordResetTokens to delete.
     */
    limit?: number
  }

  /**
   * PasswordResetToken without action
   */
  export type PasswordResetTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
  }


  /**
   * Model Estoque
   */

  export type AggregateEstoque = {
    _count: EstoqueCountAggregateOutputType | null
    _avg: EstoqueAvgAggregateOutputType | null
    _sum: EstoqueSumAggregateOutputType | null
    _min: EstoqueMinAggregateOutputType | null
    _max: EstoqueMaxAggregateOutputType | null
  }

  export type EstoqueAvgAggregateOutputType = {
    id: number | null
  }

  export type EstoqueSumAggregateOutputType = {
    id: number | null
  }

  export type EstoqueMinAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type EstoqueMaxAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type EstoqueCountAggregateOutputType = {
    id: number
    nome: number
    _all: number
  }


  export type EstoqueAvgAggregateInputType = {
    id?: true
  }

  export type EstoqueSumAggregateInputType = {
    id?: true
  }

  export type EstoqueMinAggregateInputType = {
    id?: true
    nome?: true
  }

  export type EstoqueMaxAggregateInputType = {
    id?: true
    nome?: true
  }

  export type EstoqueCountAggregateInputType = {
    id?: true
    nome?: true
    _all?: true
  }

  export type EstoqueAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Estoque to aggregate.
     */
    where?: EstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estoques to fetch.
     */
    orderBy?: EstoqueOrderByWithRelationInput | EstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Estoques
    **/
    _count?: true | EstoqueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstoqueAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstoqueSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstoqueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstoqueMaxAggregateInputType
  }

  export type GetEstoqueAggregateType<T extends EstoqueAggregateArgs> = {
        [P in keyof T & keyof AggregateEstoque]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstoque[P]>
      : GetScalarType<T[P], AggregateEstoque[P]>
  }




  export type EstoqueGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstoqueWhereInput
    orderBy?: EstoqueOrderByWithAggregationInput | EstoqueOrderByWithAggregationInput[]
    by: EstoqueScalarFieldEnum[] | EstoqueScalarFieldEnum
    having?: EstoqueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstoqueCountAggregateInputType | true
    _avg?: EstoqueAvgAggregateInputType
    _sum?: EstoqueSumAggregateInputType
    _min?: EstoqueMinAggregateInputType
    _max?: EstoqueMaxAggregateInputType
  }

  export type EstoqueGroupByOutputType = {
    id: number
    nome: string
    _count: EstoqueCountAggregateOutputType | null
    _avg: EstoqueAvgAggregateOutputType | null
    _sum: EstoqueSumAggregateOutputType | null
    _min: EstoqueMinAggregateOutputType | null
    _max: EstoqueMaxAggregateOutputType | null
  }

  type GetEstoqueGroupByPayload<T extends EstoqueGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstoqueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstoqueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstoqueGroupByOutputType[P]>
            : GetScalarType<T[P], EstoqueGroupByOutputType[P]>
        }
      >
    >


  export type EstoqueSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    transferenciasDestino?: boolean | Estoque$transferenciasDestinoArgs<ExtArgs>
    transferenciasOrigem?: boolean | Estoque$transferenciasOrigemArgs<ExtArgs>
    itens?: boolean | Estoque$itensArgs<ExtArgs>
    usuarios?: boolean | Estoque$usuariosArgs<ExtArgs>
    _count?: boolean | EstoqueCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estoque"]>

  export type EstoqueSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
  }, ExtArgs["result"]["estoque"]>

  export type EstoqueSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
  }, ExtArgs["result"]["estoque"]>

  export type EstoqueSelectScalar = {
    id?: boolean
    nome?: boolean
  }

  export type EstoqueOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome", ExtArgs["result"]["estoque"]>
  export type EstoqueInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transferenciasDestino?: boolean | Estoque$transferenciasDestinoArgs<ExtArgs>
    transferenciasOrigem?: boolean | Estoque$transferenciasOrigemArgs<ExtArgs>
    itens?: boolean | Estoque$itensArgs<ExtArgs>
    usuarios?: boolean | Estoque$usuariosArgs<ExtArgs>
    _count?: boolean | EstoqueCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EstoqueIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type EstoqueIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EstoquePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Estoque"
    objects: {
      transferenciasDestino: Prisma.$TransferenciaPayload<ExtArgs>[]
      transferenciasOrigem: Prisma.$TransferenciaPayload<ExtArgs>[]
      itens: Prisma.$EstoqueItemPayload<ExtArgs>[]
      usuarios: Prisma.$UsuarioEstoquePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
    }, ExtArgs["result"]["estoque"]>
    composites: {}
  }

  type EstoqueGetPayload<S extends boolean | null | undefined | EstoqueDefaultArgs> = $Result.GetResult<Prisma.$EstoquePayload, S>

  type EstoqueCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EstoqueFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstoqueCountAggregateInputType | true
    }

  export interface EstoqueDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Estoque'], meta: { name: 'Estoque' } }
    /**
     * Find zero or one Estoque that matches the filter.
     * @param {EstoqueFindUniqueArgs} args - Arguments to find a Estoque
     * @example
     * // Get one Estoque
     * const estoque = await prisma.estoque.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EstoqueFindUniqueArgs>(args: SelectSubset<T, EstoqueFindUniqueArgs<ExtArgs>>): Prisma__EstoqueClient<$Result.GetResult<Prisma.$EstoquePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Estoque that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EstoqueFindUniqueOrThrowArgs} args - Arguments to find a Estoque
     * @example
     * // Get one Estoque
     * const estoque = await prisma.estoque.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EstoqueFindUniqueOrThrowArgs>(args: SelectSubset<T, EstoqueFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EstoqueClient<$Result.GetResult<Prisma.$EstoquePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estoque that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstoqueFindFirstArgs} args - Arguments to find a Estoque
     * @example
     * // Get one Estoque
     * const estoque = await prisma.estoque.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EstoqueFindFirstArgs>(args?: SelectSubset<T, EstoqueFindFirstArgs<ExtArgs>>): Prisma__EstoqueClient<$Result.GetResult<Prisma.$EstoquePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estoque that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstoqueFindFirstOrThrowArgs} args - Arguments to find a Estoque
     * @example
     * // Get one Estoque
     * const estoque = await prisma.estoque.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EstoqueFindFirstOrThrowArgs>(args?: SelectSubset<T, EstoqueFindFirstOrThrowArgs<ExtArgs>>): Prisma__EstoqueClient<$Result.GetResult<Prisma.$EstoquePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Estoques that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstoqueFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Estoques
     * const estoques = await prisma.estoque.findMany()
     * 
     * // Get first 10 Estoques
     * const estoques = await prisma.estoque.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const estoqueWithIdOnly = await prisma.estoque.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EstoqueFindManyArgs>(args?: SelectSubset<T, EstoqueFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstoquePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Estoque.
     * @param {EstoqueCreateArgs} args - Arguments to create a Estoque.
     * @example
     * // Create one Estoque
     * const Estoque = await prisma.estoque.create({
     *   data: {
     *     // ... data to create a Estoque
     *   }
     * })
     * 
     */
    create<T extends EstoqueCreateArgs>(args: SelectSubset<T, EstoqueCreateArgs<ExtArgs>>): Prisma__EstoqueClient<$Result.GetResult<Prisma.$EstoquePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Estoques.
     * @param {EstoqueCreateManyArgs} args - Arguments to create many Estoques.
     * @example
     * // Create many Estoques
     * const estoque = await prisma.estoque.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EstoqueCreateManyArgs>(args?: SelectSubset<T, EstoqueCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Estoques and returns the data saved in the database.
     * @param {EstoqueCreateManyAndReturnArgs} args - Arguments to create many Estoques.
     * @example
     * // Create many Estoques
     * const estoque = await prisma.estoque.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Estoques and only return the `id`
     * const estoqueWithIdOnly = await prisma.estoque.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EstoqueCreateManyAndReturnArgs>(args?: SelectSubset<T, EstoqueCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstoquePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Estoque.
     * @param {EstoqueDeleteArgs} args - Arguments to delete one Estoque.
     * @example
     * // Delete one Estoque
     * const Estoque = await prisma.estoque.delete({
     *   where: {
     *     // ... filter to delete one Estoque
     *   }
     * })
     * 
     */
    delete<T extends EstoqueDeleteArgs>(args: SelectSubset<T, EstoqueDeleteArgs<ExtArgs>>): Prisma__EstoqueClient<$Result.GetResult<Prisma.$EstoquePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Estoque.
     * @param {EstoqueUpdateArgs} args - Arguments to update one Estoque.
     * @example
     * // Update one Estoque
     * const estoque = await prisma.estoque.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EstoqueUpdateArgs>(args: SelectSubset<T, EstoqueUpdateArgs<ExtArgs>>): Prisma__EstoqueClient<$Result.GetResult<Prisma.$EstoquePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Estoques.
     * @param {EstoqueDeleteManyArgs} args - Arguments to filter Estoques to delete.
     * @example
     * // Delete a few Estoques
     * const { count } = await prisma.estoque.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EstoqueDeleteManyArgs>(args?: SelectSubset<T, EstoqueDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstoqueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Estoques
     * const estoque = await prisma.estoque.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EstoqueUpdateManyArgs>(args: SelectSubset<T, EstoqueUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estoques and returns the data updated in the database.
     * @param {EstoqueUpdateManyAndReturnArgs} args - Arguments to update many Estoques.
     * @example
     * // Update many Estoques
     * const estoque = await prisma.estoque.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Estoques and only return the `id`
     * const estoqueWithIdOnly = await prisma.estoque.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EstoqueUpdateManyAndReturnArgs>(args: SelectSubset<T, EstoqueUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstoquePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Estoque.
     * @param {EstoqueUpsertArgs} args - Arguments to update or create a Estoque.
     * @example
     * // Update or create a Estoque
     * const estoque = await prisma.estoque.upsert({
     *   create: {
     *     // ... data to create a Estoque
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Estoque we want to update
     *   }
     * })
     */
    upsert<T extends EstoqueUpsertArgs>(args: SelectSubset<T, EstoqueUpsertArgs<ExtArgs>>): Prisma__EstoqueClient<$Result.GetResult<Prisma.$EstoquePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Estoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstoqueCountArgs} args - Arguments to filter Estoques to count.
     * @example
     * // Count the number of Estoques
     * const count = await prisma.estoque.count({
     *   where: {
     *     // ... the filter for the Estoques we want to count
     *   }
     * })
    **/
    count<T extends EstoqueCountArgs>(
      args?: Subset<T, EstoqueCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstoqueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Estoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstoqueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstoqueAggregateArgs>(args: Subset<T, EstoqueAggregateArgs>): Prisma.PrismaPromise<GetEstoqueAggregateType<T>>

    /**
     * Group by Estoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstoqueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EstoqueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EstoqueGroupByArgs['orderBy'] }
        : { orderBy?: EstoqueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EstoqueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstoqueGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Estoque model
   */
  readonly fields: EstoqueFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Estoque.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EstoqueClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transferenciasDestino<T extends Estoque$transferenciasDestinoArgs<ExtArgs> = {}>(args?: Subset<T, Estoque$transferenciasDestinoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferenciaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transferenciasOrigem<T extends Estoque$transferenciasOrigemArgs<ExtArgs> = {}>(args?: Subset<T, Estoque$transferenciasOrigemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferenciaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    itens<T extends Estoque$itensArgs<ExtArgs> = {}>(args?: Subset<T, Estoque$itensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstoqueItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    usuarios<T extends Estoque$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Estoque$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioEstoquePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Estoque model
   */
  interface EstoqueFieldRefs {
    readonly id: FieldRef<"Estoque", 'Int'>
    readonly nome: FieldRef<"Estoque", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Estoque findUnique
   */
  export type EstoqueFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque
     */
    select?: EstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estoque
     */
    omit?: EstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueInclude<ExtArgs> | null
    /**
     * Filter, which Estoque to fetch.
     */
    where: EstoqueWhereUniqueInput
  }

  /**
   * Estoque findUniqueOrThrow
   */
  export type EstoqueFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque
     */
    select?: EstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estoque
     */
    omit?: EstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueInclude<ExtArgs> | null
    /**
     * Filter, which Estoque to fetch.
     */
    where: EstoqueWhereUniqueInput
  }

  /**
   * Estoque findFirst
   */
  export type EstoqueFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque
     */
    select?: EstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estoque
     */
    omit?: EstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueInclude<ExtArgs> | null
    /**
     * Filter, which Estoque to fetch.
     */
    where?: EstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estoques to fetch.
     */
    orderBy?: EstoqueOrderByWithRelationInput | EstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Estoques.
     */
    cursor?: EstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Estoques.
     */
    distinct?: EstoqueScalarFieldEnum | EstoqueScalarFieldEnum[]
  }

  /**
   * Estoque findFirstOrThrow
   */
  export type EstoqueFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque
     */
    select?: EstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estoque
     */
    omit?: EstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueInclude<ExtArgs> | null
    /**
     * Filter, which Estoque to fetch.
     */
    where?: EstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estoques to fetch.
     */
    orderBy?: EstoqueOrderByWithRelationInput | EstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Estoques.
     */
    cursor?: EstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Estoques.
     */
    distinct?: EstoqueScalarFieldEnum | EstoqueScalarFieldEnum[]
  }

  /**
   * Estoque findMany
   */
  export type EstoqueFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque
     */
    select?: EstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estoque
     */
    omit?: EstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueInclude<ExtArgs> | null
    /**
     * Filter, which Estoques to fetch.
     */
    where?: EstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estoques to fetch.
     */
    orderBy?: EstoqueOrderByWithRelationInput | EstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Estoques.
     */
    cursor?: EstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estoques.
     */
    skip?: number
    distinct?: EstoqueScalarFieldEnum | EstoqueScalarFieldEnum[]
  }

  /**
   * Estoque create
   */
  export type EstoqueCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque
     */
    select?: EstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estoque
     */
    omit?: EstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueInclude<ExtArgs> | null
    /**
     * The data needed to create a Estoque.
     */
    data: XOR<EstoqueCreateInput, EstoqueUncheckedCreateInput>
  }

  /**
   * Estoque createMany
   */
  export type EstoqueCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Estoques.
     */
    data: EstoqueCreateManyInput | EstoqueCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Estoque createManyAndReturn
   */
  export type EstoqueCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque
     */
    select?: EstoqueSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Estoque
     */
    omit?: EstoqueOmit<ExtArgs> | null
    /**
     * The data used to create many Estoques.
     */
    data: EstoqueCreateManyInput | EstoqueCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Estoque update
   */
  export type EstoqueUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque
     */
    select?: EstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estoque
     */
    omit?: EstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueInclude<ExtArgs> | null
    /**
     * The data needed to update a Estoque.
     */
    data: XOR<EstoqueUpdateInput, EstoqueUncheckedUpdateInput>
    /**
     * Choose, which Estoque to update.
     */
    where: EstoqueWhereUniqueInput
  }

  /**
   * Estoque updateMany
   */
  export type EstoqueUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Estoques.
     */
    data: XOR<EstoqueUpdateManyMutationInput, EstoqueUncheckedUpdateManyInput>
    /**
     * Filter which Estoques to update
     */
    where?: EstoqueWhereInput
    /**
     * Limit how many Estoques to update.
     */
    limit?: number
  }

  /**
   * Estoque updateManyAndReturn
   */
  export type EstoqueUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque
     */
    select?: EstoqueSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Estoque
     */
    omit?: EstoqueOmit<ExtArgs> | null
    /**
     * The data used to update Estoques.
     */
    data: XOR<EstoqueUpdateManyMutationInput, EstoqueUncheckedUpdateManyInput>
    /**
     * Filter which Estoques to update
     */
    where?: EstoqueWhereInput
    /**
     * Limit how many Estoques to update.
     */
    limit?: number
  }

  /**
   * Estoque upsert
   */
  export type EstoqueUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque
     */
    select?: EstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estoque
     */
    omit?: EstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueInclude<ExtArgs> | null
    /**
     * The filter to search for the Estoque to update in case it exists.
     */
    where: EstoqueWhereUniqueInput
    /**
     * In case the Estoque found by the `where` argument doesn't exist, create a new Estoque with this data.
     */
    create: XOR<EstoqueCreateInput, EstoqueUncheckedCreateInput>
    /**
     * In case the Estoque was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EstoqueUpdateInput, EstoqueUncheckedUpdateInput>
  }

  /**
   * Estoque delete
   */
  export type EstoqueDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque
     */
    select?: EstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estoque
     */
    omit?: EstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueInclude<ExtArgs> | null
    /**
     * Filter which Estoque to delete.
     */
    where: EstoqueWhereUniqueInput
  }

  /**
   * Estoque deleteMany
   */
  export type EstoqueDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Estoques to delete
     */
    where?: EstoqueWhereInput
    /**
     * Limit how many Estoques to delete.
     */
    limit?: number
  }

  /**
   * Estoque.transferenciasDestino
   */
  export type Estoque$transferenciasDestinoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transferencia
     */
    select?: TransferenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transferencia
     */
    omit?: TransferenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaInclude<ExtArgs> | null
    where?: TransferenciaWhereInput
    orderBy?: TransferenciaOrderByWithRelationInput | TransferenciaOrderByWithRelationInput[]
    cursor?: TransferenciaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransferenciaScalarFieldEnum | TransferenciaScalarFieldEnum[]
  }

  /**
   * Estoque.transferenciasOrigem
   */
  export type Estoque$transferenciasOrigemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transferencia
     */
    select?: TransferenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transferencia
     */
    omit?: TransferenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaInclude<ExtArgs> | null
    where?: TransferenciaWhereInput
    orderBy?: TransferenciaOrderByWithRelationInput | TransferenciaOrderByWithRelationInput[]
    cursor?: TransferenciaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransferenciaScalarFieldEnum | TransferenciaScalarFieldEnum[]
  }

  /**
   * Estoque.itens
   */
  export type Estoque$itensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstoqueItem
     */
    select?: EstoqueItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstoqueItem
     */
    omit?: EstoqueItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueItemInclude<ExtArgs> | null
    where?: EstoqueItemWhereInput
    orderBy?: EstoqueItemOrderByWithRelationInput | EstoqueItemOrderByWithRelationInput[]
    cursor?: EstoqueItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EstoqueItemScalarFieldEnum | EstoqueItemScalarFieldEnum[]
  }

  /**
   * Estoque.usuarios
   */
  export type Estoque$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstoque
     */
    select?: UsuarioEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEstoque
     */
    omit?: UsuarioEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstoqueInclude<ExtArgs> | null
    where?: UsuarioEstoqueWhereInput
    orderBy?: UsuarioEstoqueOrderByWithRelationInput | UsuarioEstoqueOrderByWithRelationInput[]
    cursor?: UsuarioEstoqueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioEstoqueScalarFieldEnum | UsuarioEstoqueScalarFieldEnum[]
  }

  /**
   * Estoque without action
   */
  export type EstoqueDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque
     */
    select?: EstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estoque
     */
    omit?: EstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueInclude<ExtArgs> | null
  }


  /**
   * Model UsuarioEstoque
   */

  export type AggregateUsuarioEstoque = {
    _count: UsuarioEstoqueCountAggregateOutputType | null
    _avg: UsuarioEstoqueAvgAggregateOutputType | null
    _sum: UsuarioEstoqueSumAggregateOutputType | null
    _min: UsuarioEstoqueMinAggregateOutputType | null
    _max: UsuarioEstoqueMaxAggregateOutputType | null
  }

  export type UsuarioEstoqueAvgAggregateOutputType = {
    usuarioId: number | null
    estoqueId: number | null
  }

  export type UsuarioEstoqueSumAggregateOutputType = {
    usuarioId: number | null
    estoqueId: number | null
  }

  export type UsuarioEstoqueMinAggregateOutputType = {
    usuarioId: number | null
    estoqueId: number | null
  }

  export type UsuarioEstoqueMaxAggregateOutputType = {
    usuarioId: number | null
    estoqueId: number | null
  }

  export type UsuarioEstoqueCountAggregateOutputType = {
    usuarioId: number
    estoqueId: number
    _all: number
  }


  export type UsuarioEstoqueAvgAggregateInputType = {
    usuarioId?: true
    estoqueId?: true
  }

  export type UsuarioEstoqueSumAggregateInputType = {
    usuarioId?: true
    estoqueId?: true
  }

  export type UsuarioEstoqueMinAggregateInputType = {
    usuarioId?: true
    estoqueId?: true
  }

  export type UsuarioEstoqueMaxAggregateInputType = {
    usuarioId?: true
    estoqueId?: true
  }

  export type UsuarioEstoqueCountAggregateInputType = {
    usuarioId?: true
    estoqueId?: true
    _all?: true
  }

  export type UsuarioEstoqueAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UsuarioEstoque to aggregate.
     */
    where?: UsuarioEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioEstoques to fetch.
     */
    orderBy?: UsuarioEstoqueOrderByWithRelationInput | UsuarioEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UsuarioEstoques
    **/
    _count?: true | UsuarioEstoqueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioEstoqueAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioEstoqueSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioEstoqueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioEstoqueMaxAggregateInputType
  }

  export type GetUsuarioEstoqueAggregateType<T extends UsuarioEstoqueAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuarioEstoque]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuarioEstoque[P]>
      : GetScalarType<T[P], AggregateUsuarioEstoque[P]>
  }




  export type UsuarioEstoqueGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioEstoqueWhereInput
    orderBy?: UsuarioEstoqueOrderByWithAggregationInput | UsuarioEstoqueOrderByWithAggregationInput[]
    by: UsuarioEstoqueScalarFieldEnum[] | UsuarioEstoqueScalarFieldEnum
    having?: UsuarioEstoqueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioEstoqueCountAggregateInputType | true
    _avg?: UsuarioEstoqueAvgAggregateInputType
    _sum?: UsuarioEstoqueSumAggregateInputType
    _min?: UsuarioEstoqueMinAggregateInputType
    _max?: UsuarioEstoqueMaxAggregateInputType
  }

  export type UsuarioEstoqueGroupByOutputType = {
    usuarioId: number
    estoqueId: number
    _count: UsuarioEstoqueCountAggregateOutputType | null
    _avg: UsuarioEstoqueAvgAggregateOutputType | null
    _sum: UsuarioEstoqueSumAggregateOutputType | null
    _min: UsuarioEstoqueMinAggregateOutputType | null
    _max: UsuarioEstoqueMaxAggregateOutputType | null
  }

  type GetUsuarioEstoqueGroupByPayload<T extends UsuarioEstoqueGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioEstoqueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioEstoqueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioEstoqueGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioEstoqueGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioEstoqueSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioId?: boolean
    estoqueId?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    estoque?: boolean | EstoqueDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarioEstoque"]>

  export type UsuarioEstoqueSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioId?: boolean
    estoqueId?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    estoque?: boolean | EstoqueDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarioEstoque"]>

  export type UsuarioEstoqueSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioId?: boolean
    estoqueId?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    estoque?: boolean | EstoqueDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarioEstoque"]>

  export type UsuarioEstoqueSelectScalar = {
    usuarioId?: boolean
    estoqueId?: boolean
  }

  export type UsuarioEstoqueOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"usuarioId" | "estoqueId", ExtArgs["result"]["usuarioEstoque"]>
  export type UsuarioEstoqueInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    estoque?: boolean | EstoqueDefaultArgs<ExtArgs>
  }
  export type UsuarioEstoqueIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    estoque?: boolean | EstoqueDefaultArgs<ExtArgs>
  }
  export type UsuarioEstoqueIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    estoque?: boolean | EstoqueDefaultArgs<ExtArgs>
  }

  export type $UsuarioEstoquePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UsuarioEstoque"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      estoque: Prisma.$EstoquePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      usuarioId: number
      estoqueId: number
    }, ExtArgs["result"]["usuarioEstoque"]>
    composites: {}
  }

  type UsuarioEstoqueGetPayload<S extends boolean | null | undefined | UsuarioEstoqueDefaultArgs> = $Result.GetResult<Prisma.$UsuarioEstoquePayload, S>

  type UsuarioEstoqueCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioEstoqueFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioEstoqueCountAggregateInputType | true
    }

  export interface UsuarioEstoqueDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UsuarioEstoque'], meta: { name: 'UsuarioEstoque' } }
    /**
     * Find zero or one UsuarioEstoque that matches the filter.
     * @param {UsuarioEstoqueFindUniqueArgs} args - Arguments to find a UsuarioEstoque
     * @example
     * // Get one UsuarioEstoque
     * const usuarioEstoque = await prisma.usuarioEstoque.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioEstoqueFindUniqueArgs>(args: SelectSubset<T, UsuarioEstoqueFindUniqueArgs<ExtArgs>>): Prisma__UsuarioEstoqueClient<$Result.GetResult<Prisma.$UsuarioEstoquePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UsuarioEstoque that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioEstoqueFindUniqueOrThrowArgs} args - Arguments to find a UsuarioEstoque
     * @example
     * // Get one UsuarioEstoque
     * const usuarioEstoque = await prisma.usuarioEstoque.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioEstoqueFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioEstoqueFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioEstoqueClient<$Result.GetResult<Prisma.$UsuarioEstoquePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UsuarioEstoque that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEstoqueFindFirstArgs} args - Arguments to find a UsuarioEstoque
     * @example
     * // Get one UsuarioEstoque
     * const usuarioEstoque = await prisma.usuarioEstoque.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioEstoqueFindFirstArgs>(args?: SelectSubset<T, UsuarioEstoqueFindFirstArgs<ExtArgs>>): Prisma__UsuarioEstoqueClient<$Result.GetResult<Prisma.$UsuarioEstoquePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UsuarioEstoque that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEstoqueFindFirstOrThrowArgs} args - Arguments to find a UsuarioEstoque
     * @example
     * // Get one UsuarioEstoque
     * const usuarioEstoque = await prisma.usuarioEstoque.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioEstoqueFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioEstoqueFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioEstoqueClient<$Result.GetResult<Prisma.$UsuarioEstoquePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UsuarioEstoques that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEstoqueFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UsuarioEstoques
     * const usuarioEstoques = await prisma.usuarioEstoque.findMany()
     * 
     * // Get first 10 UsuarioEstoques
     * const usuarioEstoques = await prisma.usuarioEstoque.findMany({ take: 10 })
     * 
     * // Only select the `usuarioId`
     * const usuarioEstoqueWithUsuarioIdOnly = await prisma.usuarioEstoque.findMany({ select: { usuarioId: true } })
     * 
     */
    findMany<T extends UsuarioEstoqueFindManyArgs>(args?: SelectSubset<T, UsuarioEstoqueFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioEstoquePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UsuarioEstoque.
     * @param {UsuarioEstoqueCreateArgs} args - Arguments to create a UsuarioEstoque.
     * @example
     * // Create one UsuarioEstoque
     * const UsuarioEstoque = await prisma.usuarioEstoque.create({
     *   data: {
     *     // ... data to create a UsuarioEstoque
     *   }
     * })
     * 
     */
    create<T extends UsuarioEstoqueCreateArgs>(args: SelectSubset<T, UsuarioEstoqueCreateArgs<ExtArgs>>): Prisma__UsuarioEstoqueClient<$Result.GetResult<Prisma.$UsuarioEstoquePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UsuarioEstoques.
     * @param {UsuarioEstoqueCreateManyArgs} args - Arguments to create many UsuarioEstoques.
     * @example
     * // Create many UsuarioEstoques
     * const usuarioEstoque = await prisma.usuarioEstoque.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioEstoqueCreateManyArgs>(args?: SelectSubset<T, UsuarioEstoqueCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UsuarioEstoques and returns the data saved in the database.
     * @param {UsuarioEstoqueCreateManyAndReturnArgs} args - Arguments to create many UsuarioEstoques.
     * @example
     * // Create many UsuarioEstoques
     * const usuarioEstoque = await prisma.usuarioEstoque.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UsuarioEstoques and only return the `usuarioId`
     * const usuarioEstoqueWithUsuarioIdOnly = await prisma.usuarioEstoque.createManyAndReturn({
     *   select: { usuarioId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioEstoqueCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioEstoqueCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioEstoquePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UsuarioEstoque.
     * @param {UsuarioEstoqueDeleteArgs} args - Arguments to delete one UsuarioEstoque.
     * @example
     * // Delete one UsuarioEstoque
     * const UsuarioEstoque = await prisma.usuarioEstoque.delete({
     *   where: {
     *     // ... filter to delete one UsuarioEstoque
     *   }
     * })
     * 
     */
    delete<T extends UsuarioEstoqueDeleteArgs>(args: SelectSubset<T, UsuarioEstoqueDeleteArgs<ExtArgs>>): Prisma__UsuarioEstoqueClient<$Result.GetResult<Prisma.$UsuarioEstoquePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UsuarioEstoque.
     * @param {UsuarioEstoqueUpdateArgs} args - Arguments to update one UsuarioEstoque.
     * @example
     * // Update one UsuarioEstoque
     * const usuarioEstoque = await prisma.usuarioEstoque.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioEstoqueUpdateArgs>(args: SelectSubset<T, UsuarioEstoqueUpdateArgs<ExtArgs>>): Prisma__UsuarioEstoqueClient<$Result.GetResult<Prisma.$UsuarioEstoquePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UsuarioEstoques.
     * @param {UsuarioEstoqueDeleteManyArgs} args - Arguments to filter UsuarioEstoques to delete.
     * @example
     * // Delete a few UsuarioEstoques
     * const { count } = await prisma.usuarioEstoque.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioEstoqueDeleteManyArgs>(args?: SelectSubset<T, UsuarioEstoqueDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UsuarioEstoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEstoqueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UsuarioEstoques
     * const usuarioEstoque = await prisma.usuarioEstoque.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioEstoqueUpdateManyArgs>(args: SelectSubset<T, UsuarioEstoqueUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UsuarioEstoques and returns the data updated in the database.
     * @param {UsuarioEstoqueUpdateManyAndReturnArgs} args - Arguments to update many UsuarioEstoques.
     * @example
     * // Update many UsuarioEstoques
     * const usuarioEstoque = await prisma.usuarioEstoque.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UsuarioEstoques and only return the `usuarioId`
     * const usuarioEstoqueWithUsuarioIdOnly = await prisma.usuarioEstoque.updateManyAndReturn({
     *   select: { usuarioId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioEstoqueUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioEstoqueUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioEstoquePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UsuarioEstoque.
     * @param {UsuarioEstoqueUpsertArgs} args - Arguments to update or create a UsuarioEstoque.
     * @example
     * // Update or create a UsuarioEstoque
     * const usuarioEstoque = await prisma.usuarioEstoque.upsert({
     *   create: {
     *     // ... data to create a UsuarioEstoque
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UsuarioEstoque we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioEstoqueUpsertArgs>(args: SelectSubset<T, UsuarioEstoqueUpsertArgs<ExtArgs>>): Prisma__UsuarioEstoqueClient<$Result.GetResult<Prisma.$UsuarioEstoquePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UsuarioEstoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEstoqueCountArgs} args - Arguments to filter UsuarioEstoques to count.
     * @example
     * // Count the number of UsuarioEstoques
     * const count = await prisma.usuarioEstoque.count({
     *   where: {
     *     // ... the filter for the UsuarioEstoques we want to count
     *   }
     * })
    **/
    count<T extends UsuarioEstoqueCountArgs>(
      args?: Subset<T, UsuarioEstoqueCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioEstoqueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UsuarioEstoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEstoqueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioEstoqueAggregateArgs>(args: Subset<T, UsuarioEstoqueAggregateArgs>): Prisma.PrismaPromise<GetUsuarioEstoqueAggregateType<T>>

    /**
     * Group by UsuarioEstoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEstoqueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioEstoqueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioEstoqueGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioEstoqueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioEstoqueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioEstoqueGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UsuarioEstoque model
   */
  readonly fields: UsuarioEstoqueFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UsuarioEstoque.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioEstoqueClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    estoque<T extends EstoqueDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstoqueDefaultArgs<ExtArgs>>): Prisma__EstoqueClient<$Result.GetResult<Prisma.$EstoquePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UsuarioEstoque model
   */
  interface UsuarioEstoqueFieldRefs {
    readonly usuarioId: FieldRef<"UsuarioEstoque", 'Int'>
    readonly estoqueId: FieldRef<"UsuarioEstoque", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * UsuarioEstoque findUnique
   */
  export type UsuarioEstoqueFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstoque
     */
    select?: UsuarioEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEstoque
     */
    omit?: UsuarioEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioEstoque to fetch.
     */
    where: UsuarioEstoqueWhereUniqueInput
  }

  /**
   * UsuarioEstoque findUniqueOrThrow
   */
  export type UsuarioEstoqueFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstoque
     */
    select?: UsuarioEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEstoque
     */
    omit?: UsuarioEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioEstoque to fetch.
     */
    where: UsuarioEstoqueWhereUniqueInput
  }

  /**
   * UsuarioEstoque findFirst
   */
  export type UsuarioEstoqueFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstoque
     */
    select?: UsuarioEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEstoque
     */
    omit?: UsuarioEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioEstoque to fetch.
     */
    where?: UsuarioEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioEstoques to fetch.
     */
    orderBy?: UsuarioEstoqueOrderByWithRelationInput | UsuarioEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UsuarioEstoques.
     */
    cursor?: UsuarioEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UsuarioEstoques.
     */
    distinct?: UsuarioEstoqueScalarFieldEnum | UsuarioEstoqueScalarFieldEnum[]
  }

  /**
   * UsuarioEstoque findFirstOrThrow
   */
  export type UsuarioEstoqueFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstoque
     */
    select?: UsuarioEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEstoque
     */
    omit?: UsuarioEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioEstoque to fetch.
     */
    where?: UsuarioEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioEstoques to fetch.
     */
    orderBy?: UsuarioEstoqueOrderByWithRelationInput | UsuarioEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UsuarioEstoques.
     */
    cursor?: UsuarioEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UsuarioEstoques.
     */
    distinct?: UsuarioEstoqueScalarFieldEnum | UsuarioEstoqueScalarFieldEnum[]
  }

  /**
   * UsuarioEstoque findMany
   */
  export type UsuarioEstoqueFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstoque
     */
    select?: UsuarioEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEstoque
     */
    omit?: UsuarioEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioEstoques to fetch.
     */
    where?: UsuarioEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioEstoques to fetch.
     */
    orderBy?: UsuarioEstoqueOrderByWithRelationInput | UsuarioEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UsuarioEstoques.
     */
    cursor?: UsuarioEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioEstoques.
     */
    skip?: number
    distinct?: UsuarioEstoqueScalarFieldEnum | UsuarioEstoqueScalarFieldEnum[]
  }

  /**
   * UsuarioEstoque create
   */
  export type UsuarioEstoqueCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstoque
     */
    select?: UsuarioEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEstoque
     */
    omit?: UsuarioEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstoqueInclude<ExtArgs> | null
    /**
     * The data needed to create a UsuarioEstoque.
     */
    data: XOR<UsuarioEstoqueCreateInput, UsuarioEstoqueUncheckedCreateInput>
  }

  /**
   * UsuarioEstoque createMany
   */
  export type UsuarioEstoqueCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UsuarioEstoques.
     */
    data: UsuarioEstoqueCreateManyInput | UsuarioEstoqueCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UsuarioEstoque createManyAndReturn
   */
  export type UsuarioEstoqueCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstoque
     */
    select?: UsuarioEstoqueSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEstoque
     */
    omit?: UsuarioEstoqueOmit<ExtArgs> | null
    /**
     * The data used to create many UsuarioEstoques.
     */
    data: UsuarioEstoqueCreateManyInput | UsuarioEstoqueCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstoqueIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UsuarioEstoque update
   */
  export type UsuarioEstoqueUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstoque
     */
    select?: UsuarioEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEstoque
     */
    omit?: UsuarioEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstoqueInclude<ExtArgs> | null
    /**
     * The data needed to update a UsuarioEstoque.
     */
    data: XOR<UsuarioEstoqueUpdateInput, UsuarioEstoqueUncheckedUpdateInput>
    /**
     * Choose, which UsuarioEstoque to update.
     */
    where: UsuarioEstoqueWhereUniqueInput
  }

  /**
   * UsuarioEstoque updateMany
   */
  export type UsuarioEstoqueUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UsuarioEstoques.
     */
    data: XOR<UsuarioEstoqueUpdateManyMutationInput, UsuarioEstoqueUncheckedUpdateManyInput>
    /**
     * Filter which UsuarioEstoques to update
     */
    where?: UsuarioEstoqueWhereInput
    /**
     * Limit how many UsuarioEstoques to update.
     */
    limit?: number
  }

  /**
   * UsuarioEstoque updateManyAndReturn
   */
  export type UsuarioEstoqueUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstoque
     */
    select?: UsuarioEstoqueSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEstoque
     */
    omit?: UsuarioEstoqueOmit<ExtArgs> | null
    /**
     * The data used to update UsuarioEstoques.
     */
    data: XOR<UsuarioEstoqueUpdateManyMutationInput, UsuarioEstoqueUncheckedUpdateManyInput>
    /**
     * Filter which UsuarioEstoques to update
     */
    where?: UsuarioEstoqueWhereInput
    /**
     * Limit how many UsuarioEstoques to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstoqueIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UsuarioEstoque upsert
   */
  export type UsuarioEstoqueUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstoque
     */
    select?: UsuarioEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEstoque
     */
    omit?: UsuarioEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstoqueInclude<ExtArgs> | null
    /**
     * The filter to search for the UsuarioEstoque to update in case it exists.
     */
    where: UsuarioEstoqueWhereUniqueInput
    /**
     * In case the UsuarioEstoque found by the `where` argument doesn't exist, create a new UsuarioEstoque with this data.
     */
    create: XOR<UsuarioEstoqueCreateInput, UsuarioEstoqueUncheckedCreateInput>
    /**
     * In case the UsuarioEstoque was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioEstoqueUpdateInput, UsuarioEstoqueUncheckedUpdateInput>
  }

  /**
   * UsuarioEstoque delete
   */
  export type UsuarioEstoqueDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstoque
     */
    select?: UsuarioEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEstoque
     */
    omit?: UsuarioEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstoqueInclude<ExtArgs> | null
    /**
     * Filter which UsuarioEstoque to delete.
     */
    where: UsuarioEstoqueWhereUniqueInput
  }

  /**
   * UsuarioEstoque deleteMany
   */
  export type UsuarioEstoqueDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UsuarioEstoques to delete
     */
    where?: UsuarioEstoqueWhereInput
    /**
     * Limit how many UsuarioEstoques to delete.
     */
    limit?: number
  }

  /**
   * UsuarioEstoque without action
   */
  export type UsuarioEstoqueDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstoque
     */
    select?: UsuarioEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioEstoque
     */
    omit?: UsuarioEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstoqueInclude<ExtArgs> | null
  }


  /**
   * Model Transferencia
   */

  export type AggregateTransferencia = {
    _count: TransferenciaCountAggregateOutputType | null
    _avg: TransferenciaAvgAggregateOutputType | null
    _sum: TransferenciaSumAggregateOutputType | null
    _min: TransferenciaMinAggregateOutputType | null
    _max: TransferenciaMaxAggregateOutputType | null
  }

  export type TransferenciaAvgAggregateOutputType = {
    id: number | null
    itemId: number | null
    estoqueOrigemId: number | null
    estoqueDestinoId: number | null
    quantidade: number | null
  }

  export type TransferenciaSumAggregateOutputType = {
    id: number | null
    itemId: number | null
    estoqueOrigemId: number | null
    estoqueDestinoId: number | null
    quantidade: number | null
  }

  export type TransferenciaMinAggregateOutputType = {
    id: number | null
    itemId: number | null
    estoqueOrigemId: number | null
    estoqueDestinoId: number | null
    quantidade: number | null
    dataTransferencia: Date | null
  }

  export type TransferenciaMaxAggregateOutputType = {
    id: number | null
    itemId: number | null
    estoqueOrigemId: number | null
    estoqueDestinoId: number | null
    quantidade: number | null
    dataTransferencia: Date | null
  }

  export type TransferenciaCountAggregateOutputType = {
    id: number
    itemId: number
    estoqueOrigemId: number
    estoqueDestinoId: number
    quantidade: number
    dataTransferencia: number
    _all: number
  }


  export type TransferenciaAvgAggregateInputType = {
    id?: true
    itemId?: true
    estoqueOrigemId?: true
    estoqueDestinoId?: true
    quantidade?: true
  }

  export type TransferenciaSumAggregateInputType = {
    id?: true
    itemId?: true
    estoqueOrigemId?: true
    estoqueDestinoId?: true
    quantidade?: true
  }

  export type TransferenciaMinAggregateInputType = {
    id?: true
    itemId?: true
    estoqueOrigemId?: true
    estoqueDestinoId?: true
    quantidade?: true
    dataTransferencia?: true
  }

  export type TransferenciaMaxAggregateInputType = {
    id?: true
    itemId?: true
    estoqueOrigemId?: true
    estoqueDestinoId?: true
    quantidade?: true
    dataTransferencia?: true
  }

  export type TransferenciaCountAggregateInputType = {
    id?: true
    itemId?: true
    estoqueOrigemId?: true
    estoqueDestinoId?: true
    quantidade?: true
    dataTransferencia?: true
    _all?: true
  }

  export type TransferenciaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transferencia to aggregate.
     */
    where?: TransferenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transferencias to fetch.
     */
    orderBy?: TransferenciaOrderByWithRelationInput | TransferenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransferenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transferencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transferencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Transferencias
    **/
    _count?: true | TransferenciaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransferenciaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransferenciaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransferenciaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransferenciaMaxAggregateInputType
  }

  export type GetTransferenciaAggregateType<T extends TransferenciaAggregateArgs> = {
        [P in keyof T & keyof AggregateTransferencia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransferencia[P]>
      : GetScalarType<T[P], AggregateTransferencia[P]>
  }




  export type TransferenciaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransferenciaWhereInput
    orderBy?: TransferenciaOrderByWithAggregationInput | TransferenciaOrderByWithAggregationInput[]
    by: TransferenciaScalarFieldEnum[] | TransferenciaScalarFieldEnum
    having?: TransferenciaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransferenciaCountAggregateInputType | true
    _avg?: TransferenciaAvgAggregateInputType
    _sum?: TransferenciaSumAggregateInputType
    _min?: TransferenciaMinAggregateInputType
    _max?: TransferenciaMaxAggregateInputType
  }

  export type TransferenciaGroupByOutputType = {
    id: number
    itemId: number
    estoqueOrigemId: number
    estoqueDestinoId: number
    quantidade: number
    dataTransferencia: Date | null
    _count: TransferenciaCountAggregateOutputType | null
    _avg: TransferenciaAvgAggregateOutputType | null
    _sum: TransferenciaSumAggregateOutputType | null
    _min: TransferenciaMinAggregateOutputType | null
    _max: TransferenciaMaxAggregateOutputType | null
  }

  type GetTransferenciaGroupByPayload<T extends TransferenciaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransferenciaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransferenciaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransferenciaGroupByOutputType[P]>
            : GetScalarType<T[P], TransferenciaGroupByOutputType[P]>
        }
      >
    >


  export type TransferenciaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    itemId?: boolean
    estoqueOrigemId?: boolean
    estoqueDestinoId?: boolean
    quantidade?: boolean
    dataTransferencia?: boolean
    item?: boolean | EquipamentoDefaultArgs<ExtArgs>
    origem?: boolean | EstoqueDefaultArgs<ExtArgs>
    destino?: boolean | EstoqueDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transferencia"]>

  export type TransferenciaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    itemId?: boolean
    estoqueOrigemId?: boolean
    estoqueDestinoId?: boolean
    quantidade?: boolean
    dataTransferencia?: boolean
    item?: boolean | EquipamentoDefaultArgs<ExtArgs>
    origem?: boolean | EstoqueDefaultArgs<ExtArgs>
    destino?: boolean | EstoqueDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transferencia"]>

  export type TransferenciaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    itemId?: boolean
    estoqueOrigemId?: boolean
    estoqueDestinoId?: boolean
    quantidade?: boolean
    dataTransferencia?: boolean
    item?: boolean | EquipamentoDefaultArgs<ExtArgs>
    origem?: boolean | EstoqueDefaultArgs<ExtArgs>
    destino?: boolean | EstoqueDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transferencia"]>

  export type TransferenciaSelectScalar = {
    id?: boolean
    itemId?: boolean
    estoqueOrigemId?: boolean
    estoqueDestinoId?: boolean
    quantidade?: boolean
    dataTransferencia?: boolean
  }

  export type TransferenciaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "itemId" | "estoqueOrigemId" | "estoqueDestinoId" | "quantidade" | "dataTransferencia", ExtArgs["result"]["transferencia"]>
  export type TransferenciaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    item?: boolean | EquipamentoDefaultArgs<ExtArgs>
    origem?: boolean | EstoqueDefaultArgs<ExtArgs>
    destino?: boolean | EstoqueDefaultArgs<ExtArgs>
  }
  export type TransferenciaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    item?: boolean | EquipamentoDefaultArgs<ExtArgs>
    origem?: boolean | EstoqueDefaultArgs<ExtArgs>
    destino?: boolean | EstoqueDefaultArgs<ExtArgs>
  }
  export type TransferenciaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    item?: boolean | EquipamentoDefaultArgs<ExtArgs>
    origem?: boolean | EstoqueDefaultArgs<ExtArgs>
    destino?: boolean | EstoqueDefaultArgs<ExtArgs>
  }

  export type $TransferenciaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Transferencia"
    objects: {
      item: Prisma.$EquipamentoPayload<ExtArgs>
      origem: Prisma.$EstoquePayload<ExtArgs>
      destino: Prisma.$EstoquePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      itemId: number
      estoqueOrigemId: number
      estoqueDestinoId: number
      quantidade: number
      dataTransferencia: Date | null
    }, ExtArgs["result"]["transferencia"]>
    composites: {}
  }

  type TransferenciaGetPayload<S extends boolean | null | undefined | TransferenciaDefaultArgs> = $Result.GetResult<Prisma.$TransferenciaPayload, S>

  type TransferenciaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TransferenciaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransferenciaCountAggregateInputType | true
    }

  export interface TransferenciaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Transferencia'], meta: { name: 'Transferencia' } }
    /**
     * Find zero or one Transferencia that matches the filter.
     * @param {TransferenciaFindUniqueArgs} args - Arguments to find a Transferencia
     * @example
     * // Get one Transferencia
     * const transferencia = await prisma.transferencia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransferenciaFindUniqueArgs>(args: SelectSubset<T, TransferenciaFindUniqueArgs<ExtArgs>>): Prisma__TransferenciaClient<$Result.GetResult<Prisma.$TransferenciaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Transferencia that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TransferenciaFindUniqueOrThrowArgs} args - Arguments to find a Transferencia
     * @example
     * // Get one Transferencia
     * const transferencia = await prisma.transferencia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransferenciaFindUniqueOrThrowArgs>(args: SelectSubset<T, TransferenciaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransferenciaClient<$Result.GetResult<Prisma.$TransferenciaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transferencia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferenciaFindFirstArgs} args - Arguments to find a Transferencia
     * @example
     * // Get one Transferencia
     * const transferencia = await prisma.transferencia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransferenciaFindFirstArgs>(args?: SelectSubset<T, TransferenciaFindFirstArgs<ExtArgs>>): Prisma__TransferenciaClient<$Result.GetResult<Prisma.$TransferenciaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transferencia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferenciaFindFirstOrThrowArgs} args - Arguments to find a Transferencia
     * @example
     * // Get one Transferencia
     * const transferencia = await prisma.transferencia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransferenciaFindFirstOrThrowArgs>(args?: SelectSubset<T, TransferenciaFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransferenciaClient<$Result.GetResult<Prisma.$TransferenciaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Transferencias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferenciaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transferencias
     * const transferencias = await prisma.transferencia.findMany()
     * 
     * // Get first 10 Transferencias
     * const transferencias = await prisma.transferencia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transferenciaWithIdOnly = await prisma.transferencia.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransferenciaFindManyArgs>(args?: SelectSubset<T, TransferenciaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferenciaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Transferencia.
     * @param {TransferenciaCreateArgs} args - Arguments to create a Transferencia.
     * @example
     * // Create one Transferencia
     * const Transferencia = await prisma.transferencia.create({
     *   data: {
     *     // ... data to create a Transferencia
     *   }
     * })
     * 
     */
    create<T extends TransferenciaCreateArgs>(args: SelectSubset<T, TransferenciaCreateArgs<ExtArgs>>): Prisma__TransferenciaClient<$Result.GetResult<Prisma.$TransferenciaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Transferencias.
     * @param {TransferenciaCreateManyArgs} args - Arguments to create many Transferencias.
     * @example
     * // Create many Transferencias
     * const transferencia = await prisma.transferencia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransferenciaCreateManyArgs>(args?: SelectSubset<T, TransferenciaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transferencias and returns the data saved in the database.
     * @param {TransferenciaCreateManyAndReturnArgs} args - Arguments to create many Transferencias.
     * @example
     * // Create many Transferencias
     * const transferencia = await prisma.transferencia.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transferencias and only return the `id`
     * const transferenciaWithIdOnly = await prisma.transferencia.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransferenciaCreateManyAndReturnArgs>(args?: SelectSubset<T, TransferenciaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferenciaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Transferencia.
     * @param {TransferenciaDeleteArgs} args - Arguments to delete one Transferencia.
     * @example
     * // Delete one Transferencia
     * const Transferencia = await prisma.transferencia.delete({
     *   where: {
     *     // ... filter to delete one Transferencia
     *   }
     * })
     * 
     */
    delete<T extends TransferenciaDeleteArgs>(args: SelectSubset<T, TransferenciaDeleteArgs<ExtArgs>>): Prisma__TransferenciaClient<$Result.GetResult<Prisma.$TransferenciaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Transferencia.
     * @param {TransferenciaUpdateArgs} args - Arguments to update one Transferencia.
     * @example
     * // Update one Transferencia
     * const transferencia = await prisma.transferencia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransferenciaUpdateArgs>(args: SelectSubset<T, TransferenciaUpdateArgs<ExtArgs>>): Prisma__TransferenciaClient<$Result.GetResult<Prisma.$TransferenciaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Transferencias.
     * @param {TransferenciaDeleteManyArgs} args - Arguments to filter Transferencias to delete.
     * @example
     * // Delete a few Transferencias
     * const { count } = await prisma.transferencia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransferenciaDeleteManyArgs>(args?: SelectSubset<T, TransferenciaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transferencias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferenciaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transferencias
     * const transferencia = await prisma.transferencia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransferenciaUpdateManyArgs>(args: SelectSubset<T, TransferenciaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transferencias and returns the data updated in the database.
     * @param {TransferenciaUpdateManyAndReturnArgs} args - Arguments to update many Transferencias.
     * @example
     * // Update many Transferencias
     * const transferencia = await prisma.transferencia.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Transferencias and only return the `id`
     * const transferenciaWithIdOnly = await prisma.transferencia.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TransferenciaUpdateManyAndReturnArgs>(args: SelectSubset<T, TransferenciaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferenciaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Transferencia.
     * @param {TransferenciaUpsertArgs} args - Arguments to update or create a Transferencia.
     * @example
     * // Update or create a Transferencia
     * const transferencia = await prisma.transferencia.upsert({
     *   create: {
     *     // ... data to create a Transferencia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transferencia we want to update
     *   }
     * })
     */
    upsert<T extends TransferenciaUpsertArgs>(args: SelectSubset<T, TransferenciaUpsertArgs<ExtArgs>>): Prisma__TransferenciaClient<$Result.GetResult<Prisma.$TransferenciaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Transferencias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferenciaCountArgs} args - Arguments to filter Transferencias to count.
     * @example
     * // Count the number of Transferencias
     * const count = await prisma.transferencia.count({
     *   where: {
     *     // ... the filter for the Transferencias we want to count
     *   }
     * })
    **/
    count<T extends TransferenciaCountArgs>(
      args?: Subset<T, TransferenciaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransferenciaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transferencia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferenciaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransferenciaAggregateArgs>(args: Subset<T, TransferenciaAggregateArgs>): Prisma.PrismaPromise<GetTransferenciaAggregateType<T>>

    /**
     * Group by Transferencia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferenciaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransferenciaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransferenciaGroupByArgs['orderBy'] }
        : { orderBy?: TransferenciaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransferenciaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransferenciaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Transferencia model
   */
  readonly fields: TransferenciaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Transferencia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransferenciaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    item<T extends EquipamentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EquipamentoDefaultArgs<ExtArgs>>): Prisma__EquipamentoClient<$Result.GetResult<Prisma.$EquipamentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    origem<T extends EstoqueDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstoqueDefaultArgs<ExtArgs>>): Prisma__EstoqueClient<$Result.GetResult<Prisma.$EstoquePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    destino<T extends EstoqueDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstoqueDefaultArgs<ExtArgs>>): Prisma__EstoqueClient<$Result.GetResult<Prisma.$EstoquePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Transferencia model
   */
  interface TransferenciaFieldRefs {
    readonly id: FieldRef<"Transferencia", 'Int'>
    readonly itemId: FieldRef<"Transferencia", 'Int'>
    readonly estoqueOrigemId: FieldRef<"Transferencia", 'Int'>
    readonly estoqueDestinoId: FieldRef<"Transferencia", 'Int'>
    readonly quantidade: FieldRef<"Transferencia", 'Int'>
    readonly dataTransferencia: FieldRef<"Transferencia", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Transferencia findUnique
   */
  export type TransferenciaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transferencia
     */
    select?: TransferenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transferencia
     */
    omit?: TransferenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaInclude<ExtArgs> | null
    /**
     * Filter, which Transferencia to fetch.
     */
    where: TransferenciaWhereUniqueInput
  }

  /**
   * Transferencia findUniqueOrThrow
   */
  export type TransferenciaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transferencia
     */
    select?: TransferenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transferencia
     */
    omit?: TransferenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaInclude<ExtArgs> | null
    /**
     * Filter, which Transferencia to fetch.
     */
    where: TransferenciaWhereUniqueInput
  }

  /**
   * Transferencia findFirst
   */
  export type TransferenciaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transferencia
     */
    select?: TransferenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transferencia
     */
    omit?: TransferenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaInclude<ExtArgs> | null
    /**
     * Filter, which Transferencia to fetch.
     */
    where?: TransferenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transferencias to fetch.
     */
    orderBy?: TransferenciaOrderByWithRelationInput | TransferenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transferencias.
     */
    cursor?: TransferenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transferencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transferencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transferencias.
     */
    distinct?: TransferenciaScalarFieldEnum | TransferenciaScalarFieldEnum[]
  }

  /**
   * Transferencia findFirstOrThrow
   */
  export type TransferenciaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transferencia
     */
    select?: TransferenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transferencia
     */
    omit?: TransferenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaInclude<ExtArgs> | null
    /**
     * Filter, which Transferencia to fetch.
     */
    where?: TransferenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transferencias to fetch.
     */
    orderBy?: TransferenciaOrderByWithRelationInput | TransferenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transferencias.
     */
    cursor?: TransferenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transferencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transferencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transferencias.
     */
    distinct?: TransferenciaScalarFieldEnum | TransferenciaScalarFieldEnum[]
  }

  /**
   * Transferencia findMany
   */
  export type TransferenciaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transferencia
     */
    select?: TransferenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transferencia
     */
    omit?: TransferenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaInclude<ExtArgs> | null
    /**
     * Filter, which Transferencias to fetch.
     */
    where?: TransferenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transferencias to fetch.
     */
    orderBy?: TransferenciaOrderByWithRelationInput | TransferenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Transferencias.
     */
    cursor?: TransferenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transferencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transferencias.
     */
    skip?: number
    distinct?: TransferenciaScalarFieldEnum | TransferenciaScalarFieldEnum[]
  }

  /**
   * Transferencia create
   */
  export type TransferenciaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transferencia
     */
    select?: TransferenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transferencia
     */
    omit?: TransferenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaInclude<ExtArgs> | null
    /**
     * The data needed to create a Transferencia.
     */
    data: XOR<TransferenciaCreateInput, TransferenciaUncheckedCreateInput>
  }

  /**
   * Transferencia createMany
   */
  export type TransferenciaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Transferencias.
     */
    data: TransferenciaCreateManyInput | TransferenciaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Transferencia createManyAndReturn
   */
  export type TransferenciaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transferencia
     */
    select?: TransferenciaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transferencia
     */
    omit?: TransferenciaOmit<ExtArgs> | null
    /**
     * The data used to create many Transferencias.
     */
    data: TransferenciaCreateManyInput | TransferenciaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transferencia update
   */
  export type TransferenciaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transferencia
     */
    select?: TransferenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transferencia
     */
    omit?: TransferenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaInclude<ExtArgs> | null
    /**
     * The data needed to update a Transferencia.
     */
    data: XOR<TransferenciaUpdateInput, TransferenciaUncheckedUpdateInput>
    /**
     * Choose, which Transferencia to update.
     */
    where: TransferenciaWhereUniqueInput
  }

  /**
   * Transferencia updateMany
   */
  export type TransferenciaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Transferencias.
     */
    data: XOR<TransferenciaUpdateManyMutationInput, TransferenciaUncheckedUpdateManyInput>
    /**
     * Filter which Transferencias to update
     */
    where?: TransferenciaWhereInput
    /**
     * Limit how many Transferencias to update.
     */
    limit?: number
  }

  /**
   * Transferencia updateManyAndReturn
   */
  export type TransferenciaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transferencia
     */
    select?: TransferenciaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transferencia
     */
    omit?: TransferenciaOmit<ExtArgs> | null
    /**
     * The data used to update Transferencias.
     */
    data: XOR<TransferenciaUpdateManyMutationInput, TransferenciaUncheckedUpdateManyInput>
    /**
     * Filter which Transferencias to update
     */
    where?: TransferenciaWhereInput
    /**
     * Limit how many Transferencias to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transferencia upsert
   */
  export type TransferenciaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transferencia
     */
    select?: TransferenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transferencia
     */
    omit?: TransferenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaInclude<ExtArgs> | null
    /**
     * The filter to search for the Transferencia to update in case it exists.
     */
    where: TransferenciaWhereUniqueInput
    /**
     * In case the Transferencia found by the `where` argument doesn't exist, create a new Transferencia with this data.
     */
    create: XOR<TransferenciaCreateInput, TransferenciaUncheckedCreateInput>
    /**
     * In case the Transferencia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransferenciaUpdateInput, TransferenciaUncheckedUpdateInput>
  }

  /**
   * Transferencia delete
   */
  export type TransferenciaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transferencia
     */
    select?: TransferenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transferencia
     */
    omit?: TransferenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaInclude<ExtArgs> | null
    /**
     * Filter which Transferencia to delete.
     */
    where: TransferenciaWhereUniqueInput
  }

  /**
   * Transferencia deleteMany
   */
  export type TransferenciaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transferencias to delete
     */
    where?: TransferenciaWhereInput
    /**
     * Limit how many Transferencias to delete.
     */
    limit?: number
  }

  /**
   * Transferencia without action
   */
  export type TransferenciaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transferencia
     */
    select?: TransferenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transferencia
     */
    omit?: TransferenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaInclude<ExtArgs> | null
  }


  /**
   * Model EstoqueItem
   */

  export type AggregateEstoqueItem = {
    _count: EstoqueItemCountAggregateOutputType | null
    _avg: EstoqueItemAvgAggregateOutputType | null
    _sum: EstoqueItemSumAggregateOutputType | null
    _min: EstoqueItemMinAggregateOutputType | null
    _max: EstoqueItemMaxAggregateOutputType | null
  }

  export type EstoqueItemAvgAggregateOutputType = {
    id: number | null
    estoqueId: number | null
    itemId: number | null
    quantidade: number | null
  }

  export type EstoqueItemSumAggregateOutputType = {
    id: number | null
    estoqueId: number | null
    itemId: number | null
    quantidade: number | null
  }

  export type EstoqueItemMinAggregateOutputType = {
    id: number | null
    estoqueId: number | null
    itemId: number | null
    quantidade: number | null
  }

  export type EstoqueItemMaxAggregateOutputType = {
    id: number | null
    estoqueId: number | null
    itemId: number | null
    quantidade: number | null
  }

  export type EstoqueItemCountAggregateOutputType = {
    id: number
    estoqueId: number
    itemId: number
    quantidade: number
    _all: number
  }


  export type EstoqueItemAvgAggregateInputType = {
    id?: true
    estoqueId?: true
    itemId?: true
    quantidade?: true
  }

  export type EstoqueItemSumAggregateInputType = {
    id?: true
    estoqueId?: true
    itemId?: true
    quantidade?: true
  }

  export type EstoqueItemMinAggregateInputType = {
    id?: true
    estoqueId?: true
    itemId?: true
    quantidade?: true
  }

  export type EstoqueItemMaxAggregateInputType = {
    id?: true
    estoqueId?: true
    itemId?: true
    quantidade?: true
  }

  export type EstoqueItemCountAggregateInputType = {
    id?: true
    estoqueId?: true
    itemId?: true
    quantidade?: true
    _all?: true
  }

  export type EstoqueItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstoqueItem to aggregate.
     */
    where?: EstoqueItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstoqueItems to fetch.
     */
    orderBy?: EstoqueItemOrderByWithRelationInput | EstoqueItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EstoqueItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstoqueItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstoqueItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EstoqueItems
    **/
    _count?: true | EstoqueItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstoqueItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstoqueItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstoqueItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstoqueItemMaxAggregateInputType
  }

  export type GetEstoqueItemAggregateType<T extends EstoqueItemAggregateArgs> = {
        [P in keyof T & keyof AggregateEstoqueItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstoqueItem[P]>
      : GetScalarType<T[P], AggregateEstoqueItem[P]>
  }




  export type EstoqueItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstoqueItemWhereInput
    orderBy?: EstoqueItemOrderByWithAggregationInput | EstoqueItemOrderByWithAggregationInput[]
    by: EstoqueItemScalarFieldEnum[] | EstoqueItemScalarFieldEnum
    having?: EstoqueItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstoqueItemCountAggregateInputType | true
    _avg?: EstoqueItemAvgAggregateInputType
    _sum?: EstoqueItemSumAggregateInputType
    _min?: EstoqueItemMinAggregateInputType
    _max?: EstoqueItemMaxAggregateInputType
  }

  export type EstoqueItemGroupByOutputType = {
    id: number
    estoqueId: number
    itemId: number
    quantidade: number
    _count: EstoqueItemCountAggregateOutputType | null
    _avg: EstoqueItemAvgAggregateOutputType | null
    _sum: EstoqueItemSumAggregateOutputType | null
    _min: EstoqueItemMinAggregateOutputType | null
    _max: EstoqueItemMaxAggregateOutputType | null
  }

  type GetEstoqueItemGroupByPayload<T extends EstoqueItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstoqueItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstoqueItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstoqueItemGroupByOutputType[P]>
            : GetScalarType<T[P], EstoqueItemGroupByOutputType[P]>
        }
      >
    >


  export type EstoqueItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    estoqueId?: boolean
    itemId?: boolean
    quantidade?: boolean
    estoque?: boolean | EstoqueDefaultArgs<ExtArgs>
    item?: boolean | EquipamentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estoqueItem"]>

  export type EstoqueItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    estoqueId?: boolean
    itemId?: boolean
    quantidade?: boolean
    estoque?: boolean | EstoqueDefaultArgs<ExtArgs>
    item?: boolean | EquipamentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estoqueItem"]>

  export type EstoqueItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    estoqueId?: boolean
    itemId?: boolean
    quantidade?: boolean
    estoque?: boolean | EstoqueDefaultArgs<ExtArgs>
    item?: boolean | EquipamentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estoqueItem"]>

  export type EstoqueItemSelectScalar = {
    id?: boolean
    estoqueId?: boolean
    itemId?: boolean
    quantidade?: boolean
  }

  export type EstoqueItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "estoqueId" | "itemId" | "quantidade", ExtArgs["result"]["estoqueItem"]>
  export type EstoqueItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estoque?: boolean | EstoqueDefaultArgs<ExtArgs>
    item?: boolean | EquipamentoDefaultArgs<ExtArgs>
  }
  export type EstoqueItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estoque?: boolean | EstoqueDefaultArgs<ExtArgs>
    item?: boolean | EquipamentoDefaultArgs<ExtArgs>
  }
  export type EstoqueItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estoque?: boolean | EstoqueDefaultArgs<ExtArgs>
    item?: boolean | EquipamentoDefaultArgs<ExtArgs>
  }

  export type $EstoqueItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EstoqueItem"
    objects: {
      estoque: Prisma.$EstoquePayload<ExtArgs>
      item: Prisma.$EquipamentoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      estoqueId: number
      itemId: number
      quantidade: number
    }, ExtArgs["result"]["estoqueItem"]>
    composites: {}
  }

  type EstoqueItemGetPayload<S extends boolean | null | undefined | EstoqueItemDefaultArgs> = $Result.GetResult<Prisma.$EstoqueItemPayload, S>

  type EstoqueItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EstoqueItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstoqueItemCountAggregateInputType | true
    }

  export interface EstoqueItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EstoqueItem'], meta: { name: 'EstoqueItem' } }
    /**
     * Find zero or one EstoqueItem that matches the filter.
     * @param {EstoqueItemFindUniqueArgs} args - Arguments to find a EstoqueItem
     * @example
     * // Get one EstoqueItem
     * const estoqueItem = await prisma.estoqueItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EstoqueItemFindUniqueArgs>(args: SelectSubset<T, EstoqueItemFindUniqueArgs<ExtArgs>>): Prisma__EstoqueItemClient<$Result.GetResult<Prisma.$EstoqueItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EstoqueItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EstoqueItemFindUniqueOrThrowArgs} args - Arguments to find a EstoqueItem
     * @example
     * // Get one EstoqueItem
     * const estoqueItem = await prisma.estoqueItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EstoqueItemFindUniqueOrThrowArgs>(args: SelectSubset<T, EstoqueItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EstoqueItemClient<$Result.GetResult<Prisma.$EstoqueItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstoqueItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstoqueItemFindFirstArgs} args - Arguments to find a EstoqueItem
     * @example
     * // Get one EstoqueItem
     * const estoqueItem = await prisma.estoqueItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EstoqueItemFindFirstArgs>(args?: SelectSubset<T, EstoqueItemFindFirstArgs<ExtArgs>>): Prisma__EstoqueItemClient<$Result.GetResult<Prisma.$EstoqueItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstoqueItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstoqueItemFindFirstOrThrowArgs} args - Arguments to find a EstoqueItem
     * @example
     * // Get one EstoqueItem
     * const estoqueItem = await prisma.estoqueItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EstoqueItemFindFirstOrThrowArgs>(args?: SelectSubset<T, EstoqueItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__EstoqueItemClient<$Result.GetResult<Prisma.$EstoqueItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EstoqueItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstoqueItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EstoqueItems
     * const estoqueItems = await prisma.estoqueItem.findMany()
     * 
     * // Get first 10 EstoqueItems
     * const estoqueItems = await prisma.estoqueItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const estoqueItemWithIdOnly = await prisma.estoqueItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EstoqueItemFindManyArgs>(args?: SelectSubset<T, EstoqueItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstoqueItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EstoqueItem.
     * @param {EstoqueItemCreateArgs} args - Arguments to create a EstoqueItem.
     * @example
     * // Create one EstoqueItem
     * const EstoqueItem = await prisma.estoqueItem.create({
     *   data: {
     *     // ... data to create a EstoqueItem
     *   }
     * })
     * 
     */
    create<T extends EstoqueItemCreateArgs>(args: SelectSubset<T, EstoqueItemCreateArgs<ExtArgs>>): Prisma__EstoqueItemClient<$Result.GetResult<Prisma.$EstoqueItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EstoqueItems.
     * @param {EstoqueItemCreateManyArgs} args - Arguments to create many EstoqueItems.
     * @example
     * // Create many EstoqueItems
     * const estoqueItem = await prisma.estoqueItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EstoqueItemCreateManyArgs>(args?: SelectSubset<T, EstoqueItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EstoqueItems and returns the data saved in the database.
     * @param {EstoqueItemCreateManyAndReturnArgs} args - Arguments to create many EstoqueItems.
     * @example
     * // Create many EstoqueItems
     * const estoqueItem = await prisma.estoqueItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EstoqueItems and only return the `id`
     * const estoqueItemWithIdOnly = await prisma.estoqueItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EstoqueItemCreateManyAndReturnArgs>(args?: SelectSubset<T, EstoqueItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstoqueItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EstoqueItem.
     * @param {EstoqueItemDeleteArgs} args - Arguments to delete one EstoqueItem.
     * @example
     * // Delete one EstoqueItem
     * const EstoqueItem = await prisma.estoqueItem.delete({
     *   where: {
     *     // ... filter to delete one EstoqueItem
     *   }
     * })
     * 
     */
    delete<T extends EstoqueItemDeleteArgs>(args: SelectSubset<T, EstoqueItemDeleteArgs<ExtArgs>>): Prisma__EstoqueItemClient<$Result.GetResult<Prisma.$EstoqueItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EstoqueItem.
     * @param {EstoqueItemUpdateArgs} args - Arguments to update one EstoqueItem.
     * @example
     * // Update one EstoqueItem
     * const estoqueItem = await prisma.estoqueItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EstoqueItemUpdateArgs>(args: SelectSubset<T, EstoqueItemUpdateArgs<ExtArgs>>): Prisma__EstoqueItemClient<$Result.GetResult<Prisma.$EstoqueItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EstoqueItems.
     * @param {EstoqueItemDeleteManyArgs} args - Arguments to filter EstoqueItems to delete.
     * @example
     * // Delete a few EstoqueItems
     * const { count } = await prisma.estoqueItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EstoqueItemDeleteManyArgs>(args?: SelectSubset<T, EstoqueItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstoqueItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstoqueItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EstoqueItems
     * const estoqueItem = await prisma.estoqueItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EstoqueItemUpdateManyArgs>(args: SelectSubset<T, EstoqueItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstoqueItems and returns the data updated in the database.
     * @param {EstoqueItemUpdateManyAndReturnArgs} args - Arguments to update many EstoqueItems.
     * @example
     * // Update many EstoqueItems
     * const estoqueItem = await prisma.estoqueItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EstoqueItems and only return the `id`
     * const estoqueItemWithIdOnly = await prisma.estoqueItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EstoqueItemUpdateManyAndReturnArgs>(args: SelectSubset<T, EstoqueItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstoqueItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EstoqueItem.
     * @param {EstoqueItemUpsertArgs} args - Arguments to update or create a EstoqueItem.
     * @example
     * // Update or create a EstoqueItem
     * const estoqueItem = await prisma.estoqueItem.upsert({
     *   create: {
     *     // ... data to create a EstoqueItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EstoqueItem we want to update
     *   }
     * })
     */
    upsert<T extends EstoqueItemUpsertArgs>(args: SelectSubset<T, EstoqueItemUpsertArgs<ExtArgs>>): Prisma__EstoqueItemClient<$Result.GetResult<Prisma.$EstoqueItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EstoqueItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstoqueItemCountArgs} args - Arguments to filter EstoqueItems to count.
     * @example
     * // Count the number of EstoqueItems
     * const count = await prisma.estoqueItem.count({
     *   where: {
     *     // ... the filter for the EstoqueItems we want to count
     *   }
     * })
    **/
    count<T extends EstoqueItemCountArgs>(
      args?: Subset<T, EstoqueItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstoqueItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EstoqueItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstoqueItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstoqueItemAggregateArgs>(args: Subset<T, EstoqueItemAggregateArgs>): Prisma.PrismaPromise<GetEstoqueItemAggregateType<T>>

    /**
     * Group by EstoqueItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstoqueItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EstoqueItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EstoqueItemGroupByArgs['orderBy'] }
        : { orderBy?: EstoqueItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EstoqueItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstoqueItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EstoqueItem model
   */
  readonly fields: EstoqueItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EstoqueItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EstoqueItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    estoque<T extends EstoqueDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstoqueDefaultArgs<ExtArgs>>): Prisma__EstoqueClient<$Result.GetResult<Prisma.$EstoquePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    item<T extends EquipamentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EquipamentoDefaultArgs<ExtArgs>>): Prisma__EquipamentoClient<$Result.GetResult<Prisma.$EquipamentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EstoqueItem model
   */
  interface EstoqueItemFieldRefs {
    readonly id: FieldRef<"EstoqueItem", 'Int'>
    readonly estoqueId: FieldRef<"EstoqueItem", 'Int'>
    readonly itemId: FieldRef<"EstoqueItem", 'Int'>
    readonly quantidade: FieldRef<"EstoqueItem", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * EstoqueItem findUnique
   */
  export type EstoqueItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstoqueItem
     */
    select?: EstoqueItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstoqueItem
     */
    omit?: EstoqueItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueItemInclude<ExtArgs> | null
    /**
     * Filter, which EstoqueItem to fetch.
     */
    where: EstoqueItemWhereUniqueInput
  }

  /**
   * EstoqueItem findUniqueOrThrow
   */
  export type EstoqueItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstoqueItem
     */
    select?: EstoqueItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstoqueItem
     */
    omit?: EstoqueItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueItemInclude<ExtArgs> | null
    /**
     * Filter, which EstoqueItem to fetch.
     */
    where: EstoqueItemWhereUniqueInput
  }

  /**
   * EstoqueItem findFirst
   */
  export type EstoqueItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstoqueItem
     */
    select?: EstoqueItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstoqueItem
     */
    omit?: EstoqueItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueItemInclude<ExtArgs> | null
    /**
     * Filter, which EstoqueItem to fetch.
     */
    where?: EstoqueItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstoqueItems to fetch.
     */
    orderBy?: EstoqueItemOrderByWithRelationInput | EstoqueItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstoqueItems.
     */
    cursor?: EstoqueItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstoqueItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstoqueItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstoqueItems.
     */
    distinct?: EstoqueItemScalarFieldEnum | EstoqueItemScalarFieldEnum[]
  }

  /**
   * EstoqueItem findFirstOrThrow
   */
  export type EstoqueItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstoqueItem
     */
    select?: EstoqueItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstoqueItem
     */
    omit?: EstoqueItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueItemInclude<ExtArgs> | null
    /**
     * Filter, which EstoqueItem to fetch.
     */
    where?: EstoqueItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstoqueItems to fetch.
     */
    orderBy?: EstoqueItemOrderByWithRelationInput | EstoqueItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstoqueItems.
     */
    cursor?: EstoqueItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstoqueItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstoqueItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstoqueItems.
     */
    distinct?: EstoqueItemScalarFieldEnum | EstoqueItemScalarFieldEnum[]
  }

  /**
   * EstoqueItem findMany
   */
  export type EstoqueItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstoqueItem
     */
    select?: EstoqueItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstoqueItem
     */
    omit?: EstoqueItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueItemInclude<ExtArgs> | null
    /**
     * Filter, which EstoqueItems to fetch.
     */
    where?: EstoqueItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstoqueItems to fetch.
     */
    orderBy?: EstoqueItemOrderByWithRelationInput | EstoqueItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EstoqueItems.
     */
    cursor?: EstoqueItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstoqueItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstoqueItems.
     */
    skip?: number
    distinct?: EstoqueItemScalarFieldEnum | EstoqueItemScalarFieldEnum[]
  }

  /**
   * EstoqueItem create
   */
  export type EstoqueItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstoqueItem
     */
    select?: EstoqueItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstoqueItem
     */
    omit?: EstoqueItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueItemInclude<ExtArgs> | null
    /**
     * The data needed to create a EstoqueItem.
     */
    data: XOR<EstoqueItemCreateInput, EstoqueItemUncheckedCreateInput>
  }

  /**
   * EstoqueItem createMany
   */
  export type EstoqueItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EstoqueItems.
     */
    data: EstoqueItemCreateManyInput | EstoqueItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstoqueItem createManyAndReturn
   */
  export type EstoqueItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstoqueItem
     */
    select?: EstoqueItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstoqueItem
     */
    omit?: EstoqueItemOmit<ExtArgs> | null
    /**
     * The data used to create many EstoqueItems.
     */
    data: EstoqueItemCreateManyInput | EstoqueItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EstoqueItem update
   */
  export type EstoqueItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstoqueItem
     */
    select?: EstoqueItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstoqueItem
     */
    omit?: EstoqueItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueItemInclude<ExtArgs> | null
    /**
     * The data needed to update a EstoqueItem.
     */
    data: XOR<EstoqueItemUpdateInput, EstoqueItemUncheckedUpdateInput>
    /**
     * Choose, which EstoqueItem to update.
     */
    where: EstoqueItemWhereUniqueInput
  }

  /**
   * EstoqueItem updateMany
   */
  export type EstoqueItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EstoqueItems.
     */
    data: XOR<EstoqueItemUpdateManyMutationInput, EstoqueItemUncheckedUpdateManyInput>
    /**
     * Filter which EstoqueItems to update
     */
    where?: EstoqueItemWhereInput
    /**
     * Limit how many EstoqueItems to update.
     */
    limit?: number
  }

  /**
   * EstoqueItem updateManyAndReturn
   */
  export type EstoqueItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstoqueItem
     */
    select?: EstoqueItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstoqueItem
     */
    omit?: EstoqueItemOmit<ExtArgs> | null
    /**
     * The data used to update EstoqueItems.
     */
    data: XOR<EstoqueItemUpdateManyMutationInput, EstoqueItemUncheckedUpdateManyInput>
    /**
     * Filter which EstoqueItems to update
     */
    where?: EstoqueItemWhereInput
    /**
     * Limit how many EstoqueItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EstoqueItem upsert
   */
  export type EstoqueItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstoqueItem
     */
    select?: EstoqueItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstoqueItem
     */
    omit?: EstoqueItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueItemInclude<ExtArgs> | null
    /**
     * The filter to search for the EstoqueItem to update in case it exists.
     */
    where: EstoqueItemWhereUniqueInput
    /**
     * In case the EstoqueItem found by the `where` argument doesn't exist, create a new EstoqueItem with this data.
     */
    create: XOR<EstoqueItemCreateInput, EstoqueItemUncheckedCreateInput>
    /**
     * In case the EstoqueItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EstoqueItemUpdateInput, EstoqueItemUncheckedUpdateInput>
  }

  /**
   * EstoqueItem delete
   */
  export type EstoqueItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstoqueItem
     */
    select?: EstoqueItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstoqueItem
     */
    omit?: EstoqueItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueItemInclude<ExtArgs> | null
    /**
     * Filter which EstoqueItem to delete.
     */
    where: EstoqueItemWhereUniqueInput
  }

  /**
   * EstoqueItem deleteMany
   */
  export type EstoqueItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstoqueItems to delete
     */
    where?: EstoqueItemWhereInput
    /**
     * Limit how many EstoqueItems to delete.
     */
    limit?: number
  }

  /**
   * EstoqueItem without action
   */
  export type EstoqueItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstoqueItem
     */
    select?: EstoqueItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstoqueItem
     */
    omit?: EstoqueItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstoqueItemInclude<ExtArgs> | null
  }


  /**
   * Model Permissao
   */

  export type AggregatePermissao = {
    _count: PermissaoCountAggregateOutputType | null
    _avg: PermissaoAvgAggregateOutputType | null
    _sum: PermissaoSumAggregateOutputType | null
    _min: PermissaoMinAggregateOutputType | null
    _max: PermissaoMaxAggregateOutputType | null
  }

  export type PermissaoAvgAggregateOutputType = {
    id: number | null
  }

  export type PermissaoSumAggregateOutputType = {
    id: number | null
  }

  export type PermissaoMinAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type PermissaoMaxAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type PermissaoCountAggregateOutputType = {
    id: number
    nome: number
    _all: number
  }


  export type PermissaoAvgAggregateInputType = {
    id?: true
  }

  export type PermissaoSumAggregateInputType = {
    id?: true
  }

  export type PermissaoMinAggregateInputType = {
    id?: true
    nome?: true
  }

  export type PermissaoMaxAggregateInputType = {
    id?: true
    nome?: true
  }

  export type PermissaoCountAggregateInputType = {
    id?: true
    nome?: true
    _all?: true
  }

  export type PermissaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permissao to aggregate.
     */
    where?: PermissaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissaos to fetch.
     */
    orderBy?: PermissaoOrderByWithRelationInput | PermissaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PermissaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Permissaos
    **/
    _count?: true | PermissaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermissaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermissaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermissaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermissaoMaxAggregateInputType
  }

  export type GetPermissaoAggregateType<T extends PermissaoAggregateArgs> = {
        [P in keyof T & keyof AggregatePermissao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermissao[P]>
      : GetScalarType<T[P], AggregatePermissao[P]>
  }




  export type PermissaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissaoWhereInput
    orderBy?: PermissaoOrderByWithAggregationInput | PermissaoOrderByWithAggregationInput[]
    by: PermissaoScalarFieldEnum[] | PermissaoScalarFieldEnum
    having?: PermissaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermissaoCountAggregateInputType | true
    _avg?: PermissaoAvgAggregateInputType
    _sum?: PermissaoSumAggregateInputType
    _min?: PermissaoMinAggregateInputType
    _max?: PermissaoMaxAggregateInputType
  }

  export type PermissaoGroupByOutputType = {
    id: number
    nome: string
    _count: PermissaoCountAggregateOutputType | null
    _avg: PermissaoAvgAggregateOutputType | null
    _sum: PermissaoSumAggregateOutputType | null
    _min: PermissaoMinAggregateOutputType | null
    _max: PermissaoMaxAggregateOutputType | null
  }

  type GetPermissaoGroupByPayload<T extends PermissaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermissaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermissaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermissaoGroupByOutputType[P]>
            : GetScalarType<T[P], PermissaoGroupByOutputType[P]>
        }
      >
    >


  export type PermissaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    usuarios?: boolean | Permissao$usuariosArgs<ExtArgs>
    rotasPermitidas?: boolean | Permissao$rotasPermitidasArgs<ExtArgs>
    _count?: boolean | PermissaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permissao"]>

  export type PermissaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
  }, ExtArgs["result"]["permissao"]>

  export type PermissaoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
  }, ExtArgs["result"]["permissao"]>

  export type PermissaoSelectScalar = {
    id?: boolean
    nome?: boolean
  }

  export type PermissaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome", ExtArgs["result"]["permissao"]>
  export type PermissaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | Permissao$usuariosArgs<ExtArgs>
    rotasPermitidas?: boolean | Permissao$rotasPermitidasArgs<ExtArgs>
    _count?: boolean | PermissaoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PermissaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PermissaoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PermissaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Permissao"
    objects: {
      usuarios: Prisma.$UsuarioPermissaoPayload<ExtArgs>[]
      rotasPermitidas: Prisma.$PermissaoOnRoutePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
    }, ExtArgs["result"]["permissao"]>
    composites: {}
  }

  type PermissaoGetPayload<S extends boolean | null | undefined | PermissaoDefaultArgs> = $Result.GetResult<Prisma.$PermissaoPayload, S>

  type PermissaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PermissaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermissaoCountAggregateInputType | true
    }

  export interface PermissaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Permissao'], meta: { name: 'Permissao' } }
    /**
     * Find zero or one Permissao that matches the filter.
     * @param {PermissaoFindUniqueArgs} args - Arguments to find a Permissao
     * @example
     * // Get one Permissao
     * const permissao = await prisma.permissao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PermissaoFindUniqueArgs>(args: SelectSubset<T, PermissaoFindUniqueArgs<ExtArgs>>): Prisma__PermissaoClient<$Result.GetResult<Prisma.$PermissaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permissao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PermissaoFindUniqueOrThrowArgs} args - Arguments to find a Permissao
     * @example
     * // Get one Permissao
     * const permissao = await prisma.permissao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PermissaoFindUniqueOrThrowArgs>(args: SelectSubset<T, PermissaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PermissaoClient<$Result.GetResult<Prisma.$PermissaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permissao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissaoFindFirstArgs} args - Arguments to find a Permissao
     * @example
     * // Get one Permissao
     * const permissao = await prisma.permissao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PermissaoFindFirstArgs>(args?: SelectSubset<T, PermissaoFindFirstArgs<ExtArgs>>): Prisma__PermissaoClient<$Result.GetResult<Prisma.$PermissaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permissao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissaoFindFirstOrThrowArgs} args - Arguments to find a Permissao
     * @example
     * // Get one Permissao
     * const permissao = await prisma.permissao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PermissaoFindFirstOrThrowArgs>(args?: SelectSubset<T, PermissaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PermissaoClient<$Result.GetResult<Prisma.$PermissaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permissaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permissaos
     * const permissaos = await prisma.permissao.findMany()
     * 
     * // Get first 10 Permissaos
     * const permissaos = await prisma.permissao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permissaoWithIdOnly = await prisma.permissao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PermissaoFindManyArgs>(args?: SelectSubset<T, PermissaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permissao.
     * @param {PermissaoCreateArgs} args - Arguments to create a Permissao.
     * @example
     * // Create one Permissao
     * const Permissao = await prisma.permissao.create({
     *   data: {
     *     // ... data to create a Permissao
     *   }
     * })
     * 
     */
    create<T extends PermissaoCreateArgs>(args: SelectSubset<T, PermissaoCreateArgs<ExtArgs>>): Prisma__PermissaoClient<$Result.GetResult<Prisma.$PermissaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permissaos.
     * @param {PermissaoCreateManyArgs} args - Arguments to create many Permissaos.
     * @example
     * // Create many Permissaos
     * const permissao = await prisma.permissao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PermissaoCreateManyArgs>(args?: SelectSubset<T, PermissaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Permissaos and returns the data saved in the database.
     * @param {PermissaoCreateManyAndReturnArgs} args - Arguments to create many Permissaos.
     * @example
     * // Create many Permissaos
     * const permissao = await prisma.permissao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Permissaos and only return the `id`
     * const permissaoWithIdOnly = await prisma.permissao.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PermissaoCreateManyAndReturnArgs>(args?: SelectSubset<T, PermissaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissaoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Permissao.
     * @param {PermissaoDeleteArgs} args - Arguments to delete one Permissao.
     * @example
     * // Delete one Permissao
     * const Permissao = await prisma.permissao.delete({
     *   where: {
     *     // ... filter to delete one Permissao
     *   }
     * })
     * 
     */
    delete<T extends PermissaoDeleteArgs>(args: SelectSubset<T, PermissaoDeleteArgs<ExtArgs>>): Prisma__PermissaoClient<$Result.GetResult<Prisma.$PermissaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permissao.
     * @param {PermissaoUpdateArgs} args - Arguments to update one Permissao.
     * @example
     * // Update one Permissao
     * const permissao = await prisma.permissao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PermissaoUpdateArgs>(args: SelectSubset<T, PermissaoUpdateArgs<ExtArgs>>): Prisma__PermissaoClient<$Result.GetResult<Prisma.$PermissaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permissaos.
     * @param {PermissaoDeleteManyArgs} args - Arguments to filter Permissaos to delete.
     * @example
     * // Delete a few Permissaos
     * const { count } = await prisma.permissao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PermissaoDeleteManyArgs>(args?: SelectSubset<T, PermissaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permissaos
     * const permissao = await prisma.permissao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PermissaoUpdateManyArgs>(args: SelectSubset<T, PermissaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissaos and returns the data updated in the database.
     * @param {PermissaoUpdateManyAndReturnArgs} args - Arguments to update many Permissaos.
     * @example
     * // Update many Permissaos
     * const permissao = await prisma.permissao.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Permissaos and only return the `id`
     * const permissaoWithIdOnly = await prisma.permissao.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PermissaoUpdateManyAndReturnArgs>(args: SelectSubset<T, PermissaoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissaoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Permissao.
     * @param {PermissaoUpsertArgs} args - Arguments to update or create a Permissao.
     * @example
     * // Update or create a Permissao
     * const permissao = await prisma.permissao.upsert({
     *   create: {
     *     // ... data to create a Permissao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permissao we want to update
     *   }
     * })
     */
    upsert<T extends PermissaoUpsertArgs>(args: SelectSubset<T, PermissaoUpsertArgs<ExtArgs>>): Prisma__PermissaoClient<$Result.GetResult<Prisma.$PermissaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permissaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissaoCountArgs} args - Arguments to filter Permissaos to count.
     * @example
     * // Count the number of Permissaos
     * const count = await prisma.permissao.count({
     *   where: {
     *     // ... the filter for the Permissaos we want to count
     *   }
     * })
    **/
    count<T extends PermissaoCountArgs>(
      args?: Subset<T, PermissaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermissaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permissao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermissaoAggregateArgs>(args: Subset<T, PermissaoAggregateArgs>): Prisma.PrismaPromise<GetPermissaoAggregateType<T>>

    /**
     * Group by Permissao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PermissaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PermissaoGroupByArgs['orderBy'] }
        : { orderBy?: PermissaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PermissaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Permissao model
   */
  readonly fields: PermissaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Permissao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PermissaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends Permissao$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Permissao$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPermissaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    rotasPermitidas<T extends Permissao$rotasPermitidasArgs<ExtArgs> = {}>(args?: Subset<T, Permissao$rotasPermitidasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissaoOnRoutePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Permissao model
   */
  interface PermissaoFieldRefs {
    readonly id: FieldRef<"Permissao", 'Int'>
    readonly nome: FieldRef<"Permissao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Permissao findUnique
   */
  export type PermissaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissao
     */
    select?: PermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissao
     */
    omit?: PermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoInclude<ExtArgs> | null
    /**
     * Filter, which Permissao to fetch.
     */
    where: PermissaoWhereUniqueInput
  }

  /**
   * Permissao findUniqueOrThrow
   */
  export type PermissaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissao
     */
    select?: PermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissao
     */
    omit?: PermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoInclude<ExtArgs> | null
    /**
     * Filter, which Permissao to fetch.
     */
    where: PermissaoWhereUniqueInput
  }

  /**
   * Permissao findFirst
   */
  export type PermissaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissao
     */
    select?: PermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissao
     */
    omit?: PermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoInclude<ExtArgs> | null
    /**
     * Filter, which Permissao to fetch.
     */
    where?: PermissaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissaos to fetch.
     */
    orderBy?: PermissaoOrderByWithRelationInput | PermissaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permissaos.
     */
    cursor?: PermissaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permissaos.
     */
    distinct?: PermissaoScalarFieldEnum | PermissaoScalarFieldEnum[]
  }

  /**
   * Permissao findFirstOrThrow
   */
  export type PermissaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissao
     */
    select?: PermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissao
     */
    omit?: PermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoInclude<ExtArgs> | null
    /**
     * Filter, which Permissao to fetch.
     */
    where?: PermissaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissaos to fetch.
     */
    orderBy?: PermissaoOrderByWithRelationInput | PermissaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permissaos.
     */
    cursor?: PermissaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permissaos.
     */
    distinct?: PermissaoScalarFieldEnum | PermissaoScalarFieldEnum[]
  }

  /**
   * Permissao findMany
   */
  export type PermissaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissao
     */
    select?: PermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissao
     */
    omit?: PermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoInclude<ExtArgs> | null
    /**
     * Filter, which Permissaos to fetch.
     */
    where?: PermissaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissaos to fetch.
     */
    orderBy?: PermissaoOrderByWithRelationInput | PermissaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Permissaos.
     */
    cursor?: PermissaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissaos.
     */
    skip?: number
    distinct?: PermissaoScalarFieldEnum | PermissaoScalarFieldEnum[]
  }

  /**
   * Permissao create
   */
  export type PermissaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissao
     */
    select?: PermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissao
     */
    omit?: PermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoInclude<ExtArgs> | null
    /**
     * The data needed to create a Permissao.
     */
    data: XOR<PermissaoCreateInput, PermissaoUncheckedCreateInput>
  }

  /**
   * Permissao createMany
   */
  export type PermissaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Permissaos.
     */
    data: PermissaoCreateManyInput | PermissaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permissao createManyAndReturn
   */
  export type PermissaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissao
     */
    select?: PermissaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permissao
     */
    omit?: PermissaoOmit<ExtArgs> | null
    /**
     * The data used to create many Permissaos.
     */
    data: PermissaoCreateManyInput | PermissaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permissao update
   */
  export type PermissaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissao
     */
    select?: PermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissao
     */
    omit?: PermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoInclude<ExtArgs> | null
    /**
     * The data needed to update a Permissao.
     */
    data: XOR<PermissaoUpdateInput, PermissaoUncheckedUpdateInput>
    /**
     * Choose, which Permissao to update.
     */
    where: PermissaoWhereUniqueInput
  }

  /**
   * Permissao updateMany
   */
  export type PermissaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Permissaos.
     */
    data: XOR<PermissaoUpdateManyMutationInput, PermissaoUncheckedUpdateManyInput>
    /**
     * Filter which Permissaos to update
     */
    where?: PermissaoWhereInput
    /**
     * Limit how many Permissaos to update.
     */
    limit?: number
  }

  /**
   * Permissao updateManyAndReturn
   */
  export type PermissaoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissao
     */
    select?: PermissaoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permissao
     */
    omit?: PermissaoOmit<ExtArgs> | null
    /**
     * The data used to update Permissaos.
     */
    data: XOR<PermissaoUpdateManyMutationInput, PermissaoUncheckedUpdateManyInput>
    /**
     * Filter which Permissaos to update
     */
    where?: PermissaoWhereInput
    /**
     * Limit how many Permissaos to update.
     */
    limit?: number
  }

  /**
   * Permissao upsert
   */
  export type PermissaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissao
     */
    select?: PermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissao
     */
    omit?: PermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoInclude<ExtArgs> | null
    /**
     * The filter to search for the Permissao to update in case it exists.
     */
    where: PermissaoWhereUniqueInput
    /**
     * In case the Permissao found by the `where` argument doesn't exist, create a new Permissao with this data.
     */
    create: XOR<PermissaoCreateInput, PermissaoUncheckedCreateInput>
    /**
     * In case the Permissao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PermissaoUpdateInput, PermissaoUncheckedUpdateInput>
  }

  /**
   * Permissao delete
   */
  export type PermissaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissao
     */
    select?: PermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissao
     */
    omit?: PermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoInclude<ExtArgs> | null
    /**
     * Filter which Permissao to delete.
     */
    where: PermissaoWhereUniqueInput
  }

  /**
   * Permissao deleteMany
   */
  export type PermissaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permissaos to delete
     */
    where?: PermissaoWhereInput
    /**
     * Limit how many Permissaos to delete.
     */
    limit?: number
  }

  /**
   * Permissao.usuarios
   */
  export type Permissao$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioPermissao
     */
    select?: UsuarioPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioPermissao
     */
    omit?: UsuarioPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioPermissaoInclude<ExtArgs> | null
    where?: UsuarioPermissaoWhereInput
    orderBy?: UsuarioPermissaoOrderByWithRelationInput | UsuarioPermissaoOrderByWithRelationInput[]
    cursor?: UsuarioPermissaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioPermissaoScalarFieldEnum | UsuarioPermissaoScalarFieldEnum[]
  }

  /**
   * Permissao.rotasPermitidas
   */
  export type Permissao$rotasPermitidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissaoOnRoute
     */
    select?: PermissaoOnRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermissaoOnRoute
     */
    omit?: PermissaoOnRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoOnRouteInclude<ExtArgs> | null
    where?: PermissaoOnRouteWhereInput
    orderBy?: PermissaoOnRouteOrderByWithRelationInput | PermissaoOnRouteOrderByWithRelationInput[]
    cursor?: PermissaoOnRouteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermissaoOnRouteScalarFieldEnum | PermissaoOnRouteScalarFieldEnum[]
  }

  /**
   * Permissao without action
   */
  export type PermissaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissao
     */
    select?: PermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissao
     */
    omit?: PermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoInclude<ExtArgs> | null
  }


  /**
   * Model UsuarioPermissao
   */

  export type AggregateUsuarioPermissao = {
    _count: UsuarioPermissaoCountAggregateOutputType | null
    _avg: UsuarioPermissaoAvgAggregateOutputType | null
    _sum: UsuarioPermissaoSumAggregateOutputType | null
    _min: UsuarioPermissaoMinAggregateOutputType | null
    _max: UsuarioPermissaoMaxAggregateOutputType | null
  }

  export type UsuarioPermissaoAvgAggregateOutputType = {
    usuarioId: number | null
    permissaoId: number | null
  }

  export type UsuarioPermissaoSumAggregateOutputType = {
    usuarioId: number | null
    permissaoId: number | null
  }

  export type UsuarioPermissaoMinAggregateOutputType = {
    usuarioId: number | null
    permissaoId: number | null
  }

  export type UsuarioPermissaoMaxAggregateOutputType = {
    usuarioId: number | null
    permissaoId: number | null
  }

  export type UsuarioPermissaoCountAggregateOutputType = {
    usuarioId: number
    permissaoId: number
    _all: number
  }


  export type UsuarioPermissaoAvgAggregateInputType = {
    usuarioId?: true
    permissaoId?: true
  }

  export type UsuarioPermissaoSumAggregateInputType = {
    usuarioId?: true
    permissaoId?: true
  }

  export type UsuarioPermissaoMinAggregateInputType = {
    usuarioId?: true
    permissaoId?: true
  }

  export type UsuarioPermissaoMaxAggregateInputType = {
    usuarioId?: true
    permissaoId?: true
  }

  export type UsuarioPermissaoCountAggregateInputType = {
    usuarioId?: true
    permissaoId?: true
    _all?: true
  }

  export type UsuarioPermissaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UsuarioPermissao to aggregate.
     */
    where?: UsuarioPermissaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioPermissaos to fetch.
     */
    orderBy?: UsuarioPermissaoOrderByWithRelationInput | UsuarioPermissaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioPermissaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioPermissaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioPermissaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UsuarioPermissaos
    **/
    _count?: true | UsuarioPermissaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioPermissaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioPermissaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioPermissaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioPermissaoMaxAggregateInputType
  }

  export type GetUsuarioPermissaoAggregateType<T extends UsuarioPermissaoAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuarioPermissao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuarioPermissao[P]>
      : GetScalarType<T[P], AggregateUsuarioPermissao[P]>
  }




  export type UsuarioPermissaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioPermissaoWhereInput
    orderBy?: UsuarioPermissaoOrderByWithAggregationInput | UsuarioPermissaoOrderByWithAggregationInput[]
    by: UsuarioPermissaoScalarFieldEnum[] | UsuarioPermissaoScalarFieldEnum
    having?: UsuarioPermissaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioPermissaoCountAggregateInputType | true
    _avg?: UsuarioPermissaoAvgAggregateInputType
    _sum?: UsuarioPermissaoSumAggregateInputType
    _min?: UsuarioPermissaoMinAggregateInputType
    _max?: UsuarioPermissaoMaxAggregateInputType
  }

  export type UsuarioPermissaoGroupByOutputType = {
    usuarioId: number
    permissaoId: number
    _count: UsuarioPermissaoCountAggregateOutputType | null
    _avg: UsuarioPermissaoAvgAggregateOutputType | null
    _sum: UsuarioPermissaoSumAggregateOutputType | null
    _min: UsuarioPermissaoMinAggregateOutputType | null
    _max: UsuarioPermissaoMaxAggregateOutputType | null
  }

  type GetUsuarioPermissaoGroupByPayload<T extends UsuarioPermissaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioPermissaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioPermissaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioPermissaoGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioPermissaoGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioPermissaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioId?: boolean
    permissaoId?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    permissao?: boolean | PermissaoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarioPermissao"]>

  export type UsuarioPermissaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioId?: boolean
    permissaoId?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    permissao?: boolean | PermissaoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarioPermissao"]>

  export type UsuarioPermissaoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioId?: boolean
    permissaoId?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    permissao?: boolean | PermissaoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarioPermissao"]>

  export type UsuarioPermissaoSelectScalar = {
    usuarioId?: boolean
    permissaoId?: boolean
  }

  export type UsuarioPermissaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"usuarioId" | "permissaoId", ExtArgs["result"]["usuarioPermissao"]>
  export type UsuarioPermissaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    permissao?: boolean | PermissaoDefaultArgs<ExtArgs>
  }
  export type UsuarioPermissaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    permissao?: boolean | PermissaoDefaultArgs<ExtArgs>
  }
  export type UsuarioPermissaoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    permissao?: boolean | PermissaoDefaultArgs<ExtArgs>
  }

  export type $UsuarioPermissaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UsuarioPermissao"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      permissao: Prisma.$PermissaoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      usuarioId: number
      permissaoId: number
    }, ExtArgs["result"]["usuarioPermissao"]>
    composites: {}
  }

  type UsuarioPermissaoGetPayload<S extends boolean | null | undefined | UsuarioPermissaoDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPermissaoPayload, S>

  type UsuarioPermissaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioPermissaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioPermissaoCountAggregateInputType | true
    }

  export interface UsuarioPermissaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UsuarioPermissao'], meta: { name: 'UsuarioPermissao' } }
    /**
     * Find zero or one UsuarioPermissao that matches the filter.
     * @param {UsuarioPermissaoFindUniqueArgs} args - Arguments to find a UsuarioPermissao
     * @example
     * // Get one UsuarioPermissao
     * const usuarioPermissao = await prisma.usuarioPermissao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioPermissaoFindUniqueArgs>(args: SelectSubset<T, UsuarioPermissaoFindUniqueArgs<ExtArgs>>): Prisma__UsuarioPermissaoClient<$Result.GetResult<Prisma.$UsuarioPermissaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UsuarioPermissao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioPermissaoFindUniqueOrThrowArgs} args - Arguments to find a UsuarioPermissao
     * @example
     * // Get one UsuarioPermissao
     * const usuarioPermissao = await prisma.usuarioPermissao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioPermissaoFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioPermissaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioPermissaoClient<$Result.GetResult<Prisma.$UsuarioPermissaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UsuarioPermissao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioPermissaoFindFirstArgs} args - Arguments to find a UsuarioPermissao
     * @example
     * // Get one UsuarioPermissao
     * const usuarioPermissao = await prisma.usuarioPermissao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioPermissaoFindFirstArgs>(args?: SelectSubset<T, UsuarioPermissaoFindFirstArgs<ExtArgs>>): Prisma__UsuarioPermissaoClient<$Result.GetResult<Prisma.$UsuarioPermissaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UsuarioPermissao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioPermissaoFindFirstOrThrowArgs} args - Arguments to find a UsuarioPermissao
     * @example
     * // Get one UsuarioPermissao
     * const usuarioPermissao = await prisma.usuarioPermissao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioPermissaoFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioPermissaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioPermissaoClient<$Result.GetResult<Prisma.$UsuarioPermissaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UsuarioPermissaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioPermissaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UsuarioPermissaos
     * const usuarioPermissaos = await prisma.usuarioPermissao.findMany()
     * 
     * // Get first 10 UsuarioPermissaos
     * const usuarioPermissaos = await prisma.usuarioPermissao.findMany({ take: 10 })
     * 
     * // Only select the `usuarioId`
     * const usuarioPermissaoWithUsuarioIdOnly = await prisma.usuarioPermissao.findMany({ select: { usuarioId: true } })
     * 
     */
    findMany<T extends UsuarioPermissaoFindManyArgs>(args?: SelectSubset<T, UsuarioPermissaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPermissaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UsuarioPermissao.
     * @param {UsuarioPermissaoCreateArgs} args - Arguments to create a UsuarioPermissao.
     * @example
     * // Create one UsuarioPermissao
     * const UsuarioPermissao = await prisma.usuarioPermissao.create({
     *   data: {
     *     // ... data to create a UsuarioPermissao
     *   }
     * })
     * 
     */
    create<T extends UsuarioPermissaoCreateArgs>(args: SelectSubset<T, UsuarioPermissaoCreateArgs<ExtArgs>>): Prisma__UsuarioPermissaoClient<$Result.GetResult<Prisma.$UsuarioPermissaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UsuarioPermissaos.
     * @param {UsuarioPermissaoCreateManyArgs} args - Arguments to create many UsuarioPermissaos.
     * @example
     * // Create many UsuarioPermissaos
     * const usuarioPermissao = await prisma.usuarioPermissao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioPermissaoCreateManyArgs>(args?: SelectSubset<T, UsuarioPermissaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UsuarioPermissaos and returns the data saved in the database.
     * @param {UsuarioPermissaoCreateManyAndReturnArgs} args - Arguments to create many UsuarioPermissaos.
     * @example
     * // Create many UsuarioPermissaos
     * const usuarioPermissao = await prisma.usuarioPermissao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UsuarioPermissaos and only return the `usuarioId`
     * const usuarioPermissaoWithUsuarioIdOnly = await prisma.usuarioPermissao.createManyAndReturn({
     *   select: { usuarioId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioPermissaoCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioPermissaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPermissaoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UsuarioPermissao.
     * @param {UsuarioPermissaoDeleteArgs} args - Arguments to delete one UsuarioPermissao.
     * @example
     * // Delete one UsuarioPermissao
     * const UsuarioPermissao = await prisma.usuarioPermissao.delete({
     *   where: {
     *     // ... filter to delete one UsuarioPermissao
     *   }
     * })
     * 
     */
    delete<T extends UsuarioPermissaoDeleteArgs>(args: SelectSubset<T, UsuarioPermissaoDeleteArgs<ExtArgs>>): Prisma__UsuarioPermissaoClient<$Result.GetResult<Prisma.$UsuarioPermissaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UsuarioPermissao.
     * @param {UsuarioPermissaoUpdateArgs} args - Arguments to update one UsuarioPermissao.
     * @example
     * // Update one UsuarioPermissao
     * const usuarioPermissao = await prisma.usuarioPermissao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioPermissaoUpdateArgs>(args: SelectSubset<T, UsuarioPermissaoUpdateArgs<ExtArgs>>): Prisma__UsuarioPermissaoClient<$Result.GetResult<Prisma.$UsuarioPermissaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UsuarioPermissaos.
     * @param {UsuarioPermissaoDeleteManyArgs} args - Arguments to filter UsuarioPermissaos to delete.
     * @example
     * // Delete a few UsuarioPermissaos
     * const { count } = await prisma.usuarioPermissao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioPermissaoDeleteManyArgs>(args?: SelectSubset<T, UsuarioPermissaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UsuarioPermissaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioPermissaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UsuarioPermissaos
     * const usuarioPermissao = await prisma.usuarioPermissao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioPermissaoUpdateManyArgs>(args: SelectSubset<T, UsuarioPermissaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UsuarioPermissaos and returns the data updated in the database.
     * @param {UsuarioPermissaoUpdateManyAndReturnArgs} args - Arguments to update many UsuarioPermissaos.
     * @example
     * // Update many UsuarioPermissaos
     * const usuarioPermissao = await prisma.usuarioPermissao.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UsuarioPermissaos and only return the `usuarioId`
     * const usuarioPermissaoWithUsuarioIdOnly = await prisma.usuarioPermissao.updateManyAndReturn({
     *   select: { usuarioId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioPermissaoUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioPermissaoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPermissaoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UsuarioPermissao.
     * @param {UsuarioPermissaoUpsertArgs} args - Arguments to update or create a UsuarioPermissao.
     * @example
     * // Update or create a UsuarioPermissao
     * const usuarioPermissao = await prisma.usuarioPermissao.upsert({
     *   create: {
     *     // ... data to create a UsuarioPermissao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UsuarioPermissao we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioPermissaoUpsertArgs>(args: SelectSubset<T, UsuarioPermissaoUpsertArgs<ExtArgs>>): Prisma__UsuarioPermissaoClient<$Result.GetResult<Prisma.$UsuarioPermissaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UsuarioPermissaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioPermissaoCountArgs} args - Arguments to filter UsuarioPermissaos to count.
     * @example
     * // Count the number of UsuarioPermissaos
     * const count = await prisma.usuarioPermissao.count({
     *   where: {
     *     // ... the filter for the UsuarioPermissaos we want to count
     *   }
     * })
    **/
    count<T extends UsuarioPermissaoCountArgs>(
      args?: Subset<T, UsuarioPermissaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioPermissaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UsuarioPermissao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioPermissaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioPermissaoAggregateArgs>(args: Subset<T, UsuarioPermissaoAggregateArgs>): Prisma.PrismaPromise<GetUsuarioPermissaoAggregateType<T>>

    /**
     * Group by UsuarioPermissao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioPermissaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioPermissaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioPermissaoGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioPermissaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioPermissaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioPermissaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UsuarioPermissao model
   */
  readonly fields: UsuarioPermissaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UsuarioPermissao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioPermissaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    permissao<T extends PermissaoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PermissaoDefaultArgs<ExtArgs>>): Prisma__PermissaoClient<$Result.GetResult<Prisma.$PermissaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UsuarioPermissao model
   */
  interface UsuarioPermissaoFieldRefs {
    readonly usuarioId: FieldRef<"UsuarioPermissao", 'Int'>
    readonly permissaoId: FieldRef<"UsuarioPermissao", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * UsuarioPermissao findUnique
   */
  export type UsuarioPermissaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioPermissao
     */
    select?: UsuarioPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioPermissao
     */
    omit?: UsuarioPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioPermissaoInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioPermissao to fetch.
     */
    where: UsuarioPermissaoWhereUniqueInput
  }

  /**
   * UsuarioPermissao findUniqueOrThrow
   */
  export type UsuarioPermissaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioPermissao
     */
    select?: UsuarioPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioPermissao
     */
    omit?: UsuarioPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioPermissaoInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioPermissao to fetch.
     */
    where: UsuarioPermissaoWhereUniqueInput
  }

  /**
   * UsuarioPermissao findFirst
   */
  export type UsuarioPermissaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioPermissao
     */
    select?: UsuarioPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioPermissao
     */
    omit?: UsuarioPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioPermissaoInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioPermissao to fetch.
     */
    where?: UsuarioPermissaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioPermissaos to fetch.
     */
    orderBy?: UsuarioPermissaoOrderByWithRelationInput | UsuarioPermissaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UsuarioPermissaos.
     */
    cursor?: UsuarioPermissaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioPermissaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioPermissaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UsuarioPermissaos.
     */
    distinct?: UsuarioPermissaoScalarFieldEnum | UsuarioPermissaoScalarFieldEnum[]
  }

  /**
   * UsuarioPermissao findFirstOrThrow
   */
  export type UsuarioPermissaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioPermissao
     */
    select?: UsuarioPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioPermissao
     */
    omit?: UsuarioPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioPermissaoInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioPermissao to fetch.
     */
    where?: UsuarioPermissaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioPermissaos to fetch.
     */
    orderBy?: UsuarioPermissaoOrderByWithRelationInput | UsuarioPermissaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UsuarioPermissaos.
     */
    cursor?: UsuarioPermissaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioPermissaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioPermissaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UsuarioPermissaos.
     */
    distinct?: UsuarioPermissaoScalarFieldEnum | UsuarioPermissaoScalarFieldEnum[]
  }

  /**
   * UsuarioPermissao findMany
   */
  export type UsuarioPermissaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioPermissao
     */
    select?: UsuarioPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioPermissao
     */
    omit?: UsuarioPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioPermissaoInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioPermissaos to fetch.
     */
    where?: UsuarioPermissaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioPermissaos to fetch.
     */
    orderBy?: UsuarioPermissaoOrderByWithRelationInput | UsuarioPermissaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UsuarioPermissaos.
     */
    cursor?: UsuarioPermissaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioPermissaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioPermissaos.
     */
    skip?: number
    distinct?: UsuarioPermissaoScalarFieldEnum | UsuarioPermissaoScalarFieldEnum[]
  }

  /**
   * UsuarioPermissao create
   */
  export type UsuarioPermissaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioPermissao
     */
    select?: UsuarioPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioPermissao
     */
    omit?: UsuarioPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioPermissaoInclude<ExtArgs> | null
    /**
     * The data needed to create a UsuarioPermissao.
     */
    data: XOR<UsuarioPermissaoCreateInput, UsuarioPermissaoUncheckedCreateInput>
  }

  /**
   * UsuarioPermissao createMany
   */
  export type UsuarioPermissaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UsuarioPermissaos.
     */
    data: UsuarioPermissaoCreateManyInput | UsuarioPermissaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UsuarioPermissao createManyAndReturn
   */
  export type UsuarioPermissaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioPermissao
     */
    select?: UsuarioPermissaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioPermissao
     */
    omit?: UsuarioPermissaoOmit<ExtArgs> | null
    /**
     * The data used to create many UsuarioPermissaos.
     */
    data: UsuarioPermissaoCreateManyInput | UsuarioPermissaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioPermissaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UsuarioPermissao update
   */
  export type UsuarioPermissaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioPermissao
     */
    select?: UsuarioPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioPermissao
     */
    omit?: UsuarioPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioPermissaoInclude<ExtArgs> | null
    /**
     * The data needed to update a UsuarioPermissao.
     */
    data: XOR<UsuarioPermissaoUpdateInput, UsuarioPermissaoUncheckedUpdateInput>
    /**
     * Choose, which UsuarioPermissao to update.
     */
    where: UsuarioPermissaoWhereUniqueInput
  }

  /**
   * UsuarioPermissao updateMany
   */
  export type UsuarioPermissaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UsuarioPermissaos.
     */
    data: XOR<UsuarioPermissaoUpdateManyMutationInput, UsuarioPermissaoUncheckedUpdateManyInput>
    /**
     * Filter which UsuarioPermissaos to update
     */
    where?: UsuarioPermissaoWhereInput
    /**
     * Limit how many UsuarioPermissaos to update.
     */
    limit?: number
  }

  /**
   * UsuarioPermissao updateManyAndReturn
   */
  export type UsuarioPermissaoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioPermissao
     */
    select?: UsuarioPermissaoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioPermissao
     */
    omit?: UsuarioPermissaoOmit<ExtArgs> | null
    /**
     * The data used to update UsuarioPermissaos.
     */
    data: XOR<UsuarioPermissaoUpdateManyMutationInput, UsuarioPermissaoUncheckedUpdateManyInput>
    /**
     * Filter which UsuarioPermissaos to update
     */
    where?: UsuarioPermissaoWhereInput
    /**
     * Limit how many UsuarioPermissaos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioPermissaoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UsuarioPermissao upsert
   */
  export type UsuarioPermissaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioPermissao
     */
    select?: UsuarioPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioPermissao
     */
    omit?: UsuarioPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioPermissaoInclude<ExtArgs> | null
    /**
     * The filter to search for the UsuarioPermissao to update in case it exists.
     */
    where: UsuarioPermissaoWhereUniqueInput
    /**
     * In case the UsuarioPermissao found by the `where` argument doesn't exist, create a new UsuarioPermissao with this data.
     */
    create: XOR<UsuarioPermissaoCreateInput, UsuarioPermissaoUncheckedCreateInput>
    /**
     * In case the UsuarioPermissao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioPermissaoUpdateInput, UsuarioPermissaoUncheckedUpdateInput>
  }

  /**
   * UsuarioPermissao delete
   */
  export type UsuarioPermissaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioPermissao
     */
    select?: UsuarioPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioPermissao
     */
    omit?: UsuarioPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioPermissaoInclude<ExtArgs> | null
    /**
     * Filter which UsuarioPermissao to delete.
     */
    where: UsuarioPermissaoWhereUniqueInput
  }

  /**
   * UsuarioPermissao deleteMany
   */
  export type UsuarioPermissaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UsuarioPermissaos to delete
     */
    where?: UsuarioPermissaoWhereInput
    /**
     * Limit how many UsuarioPermissaos to delete.
     */
    limit?: number
  }

  /**
   * UsuarioPermissao without action
   */
  export type UsuarioPermissaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioPermissao
     */
    select?: UsuarioPermissaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UsuarioPermissao
     */
    omit?: UsuarioPermissaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioPermissaoInclude<ExtArgs> | null
  }


  /**
   * Model Route
   */

  export type AggregateRoute = {
    _count: RouteCountAggregateOutputType | null
    _avg: RouteAvgAggregateOutputType | null
    _sum: RouteSumAggregateOutputType | null
    _min: RouteMinAggregateOutputType | null
    _max: RouteMaxAggregateOutputType | null
  }

  export type RouteAvgAggregateOutputType = {
    id: number | null
  }

  export type RouteSumAggregateOutputType = {
    id: number | null
  }

  export type RouteMinAggregateOutputType = {
    id: number | null
    nome: string | null
    path: string | null
    createdAt: Date | null
  }

  export type RouteMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    path: string | null
    createdAt: Date | null
  }

  export type RouteCountAggregateOutputType = {
    id: number
    nome: number
    path: number
    createdAt: number
    _all: number
  }


  export type RouteAvgAggregateInputType = {
    id?: true
  }

  export type RouteSumAggregateInputType = {
    id?: true
  }

  export type RouteMinAggregateInputType = {
    id?: true
    nome?: true
    path?: true
    createdAt?: true
  }

  export type RouteMaxAggregateInputType = {
    id?: true
    nome?: true
    path?: true
    createdAt?: true
  }

  export type RouteCountAggregateInputType = {
    id?: true
    nome?: true
    path?: true
    createdAt?: true
    _all?: true
  }

  export type RouteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Route to aggregate.
     */
    where?: RouteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Routes to fetch.
     */
    orderBy?: RouteOrderByWithRelationInput | RouteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RouteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Routes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Routes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Routes
    **/
    _count?: true | RouteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RouteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RouteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RouteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RouteMaxAggregateInputType
  }

  export type GetRouteAggregateType<T extends RouteAggregateArgs> = {
        [P in keyof T & keyof AggregateRoute]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoute[P]>
      : GetScalarType<T[P], AggregateRoute[P]>
  }




  export type RouteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RouteWhereInput
    orderBy?: RouteOrderByWithAggregationInput | RouteOrderByWithAggregationInput[]
    by: RouteScalarFieldEnum[] | RouteScalarFieldEnum
    having?: RouteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RouteCountAggregateInputType | true
    _avg?: RouteAvgAggregateInputType
    _sum?: RouteSumAggregateInputType
    _min?: RouteMinAggregateInputType
    _max?: RouteMaxAggregateInputType
  }

  export type RouteGroupByOutputType = {
    id: number
    nome: string
    path: string
    createdAt: Date
    _count: RouteCountAggregateOutputType | null
    _avg: RouteAvgAggregateOutputType | null
    _sum: RouteSumAggregateOutputType | null
    _min: RouteMinAggregateOutputType | null
    _max: RouteMaxAggregateOutputType | null
  }

  type GetRouteGroupByPayload<T extends RouteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RouteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RouteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RouteGroupByOutputType[P]>
            : GetScalarType<T[P], RouteGroupByOutputType[P]>
        }
      >
    >


  export type RouteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    path?: boolean
    createdAt?: boolean
    permissoes?: boolean | Route$permissoesArgs<ExtArgs>
    _count?: boolean | RouteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["route"]>

  export type RouteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    path?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["route"]>

  export type RouteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    path?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["route"]>

  export type RouteSelectScalar = {
    id?: boolean
    nome?: boolean
    path?: boolean
    createdAt?: boolean
  }

  export type RouteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "path" | "createdAt", ExtArgs["result"]["route"]>
  export type RouteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permissoes?: boolean | Route$permissoesArgs<ExtArgs>
    _count?: boolean | RouteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RouteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RouteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RoutePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Route"
    objects: {
      permissoes: Prisma.$PermissaoOnRoutePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      path: string
      createdAt: Date
    }, ExtArgs["result"]["route"]>
    composites: {}
  }

  type RouteGetPayload<S extends boolean | null | undefined | RouteDefaultArgs> = $Result.GetResult<Prisma.$RoutePayload, S>

  type RouteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RouteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RouteCountAggregateInputType | true
    }

  export interface RouteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Route'], meta: { name: 'Route' } }
    /**
     * Find zero or one Route that matches the filter.
     * @param {RouteFindUniqueArgs} args - Arguments to find a Route
     * @example
     * // Get one Route
     * const route = await prisma.route.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RouteFindUniqueArgs>(args: SelectSubset<T, RouteFindUniqueArgs<ExtArgs>>): Prisma__RouteClient<$Result.GetResult<Prisma.$RoutePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Route that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RouteFindUniqueOrThrowArgs} args - Arguments to find a Route
     * @example
     * // Get one Route
     * const route = await prisma.route.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RouteFindUniqueOrThrowArgs>(args: SelectSubset<T, RouteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RouteClient<$Result.GetResult<Prisma.$RoutePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Route that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RouteFindFirstArgs} args - Arguments to find a Route
     * @example
     * // Get one Route
     * const route = await prisma.route.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RouteFindFirstArgs>(args?: SelectSubset<T, RouteFindFirstArgs<ExtArgs>>): Prisma__RouteClient<$Result.GetResult<Prisma.$RoutePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Route that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RouteFindFirstOrThrowArgs} args - Arguments to find a Route
     * @example
     * // Get one Route
     * const route = await prisma.route.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RouteFindFirstOrThrowArgs>(args?: SelectSubset<T, RouteFindFirstOrThrowArgs<ExtArgs>>): Prisma__RouteClient<$Result.GetResult<Prisma.$RoutePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Routes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RouteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Routes
     * const routes = await prisma.route.findMany()
     * 
     * // Get first 10 Routes
     * const routes = await prisma.route.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const routeWithIdOnly = await prisma.route.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RouteFindManyArgs>(args?: SelectSubset<T, RouteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoutePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Route.
     * @param {RouteCreateArgs} args - Arguments to create a Route.
     * @example
     * // Create one Route
     * const Route = await prisma.route.create({
     *   data: {
     *     // ... data to create a Route
     *   }
     * })
     * 
     */
    create<T extends RouteCreateArgs>(args: SelectSubset<T, RouteCreateArgs<ExtArgs>>): Prisma__RouteClient<$Result.GetResult<Prisma.$RoutePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Routes.
     * @param {RouteCreateManyArgs} args - Arguments to create many Routes.
     * @example
     * // Create many Routes
     * const route = await prisma.route.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RouteCreateManyArgs>(args?: SelectSubset<T, RouteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Routes and returns the data saved in the database.
     * @param {RouteCreateManyAndReturnArgs} args - Arguments to create many Routes.
     * @example
     * // Create many Routes
     * const route = await prisma.route.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Routes and only return the `id`
     * const routeWithIdOnly = await prisma.route.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RouteCreateManyAndReturnArgs>(args?: SelectSubset<T, RouteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoutePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Route.
     * @param {RouteDeleteArgs} args - Arguments to delete one Route.
     * @example
     * // Delete one Route
     * const Route = await prisma.route.delete({
     *   where: {
     *     // ... filter to delete one Route
     *   }
     * })
     * 
     */
    delete<T extends RouteDeleteArgs>(args: SelectSubset<T, RouteDeleteArgs<ExtArgs>>): Prisma__RouteClient<$Result.GetResult<Prisma.$RoutePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Route.
     * @param {RouteUpdateArgs} args - Arguments to update one Route.
     * @example
     * // Update one Route
     * const route = await prisma.route.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RouteUpdateArgs>(args: SelectSubset<T, RouteUpdateArgs<ExtArgs>>): Prisma__RouteClient<$Result.GetResult<Prisma.$RoutePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Routes.
     * @param {RouteDeleteManyArgs} args - Arguments to filter Routes to delete.
     * @example
     * // Delete a few Routes
     * const { count } = await prisma.route.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RouteDeleteManyArgs>(args?: SelectSubset<T, RouteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Routes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RouteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Routes
     * const route = await prisma.route.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RouteUpdateManyArgs>(args: SelectSubset<T, RouteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Routes and returns the data updated in the database.
     * @param {RouteUpdateManyAndReturnArgs} args - Arguments to update many Routes.
     * @example
     * // Update many Routes
     * const route = await prisma.route.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Routes and only return the `id`
     * const routeWithIdOnly = await prisma.route.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RouteUpdateManyAndReturnArgs>(args: SelectSubset<T, RouteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoutePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Route.
     * @param {RouteUpsertArgs} args - Arguments to update or create a Route.
     * @example
     * // Update or create a Route
     * const route = await prisma.route.upsert({
     *   create: {
     *     // ... data to create a Route
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Route we want to update
     *   }
     * })
     */
    upsert<T extends RouteUpsertArgs>(args: SelectSubset<T, RouteUpsertArgs<ExtArgs>>): Prisma__RouteClient<$Result.GetResult<Prisma.$RoutePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Routes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RouteCountArgs} args - Arguments to filter Routes to count.
     * @example
     * // Count the number of Routes
     * const count = await prisma.route.count({
     *   where: {
     *     // ... the filter for the Routes we want to count
     *   }
     * })
    **/
    count<T extends RouteCountArgs>(
      args?: Subset<T, RouteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RouteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Route.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RouteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RouteAggregateArgs>(args: Subset<T, RouteAggregateArgs>): Prisma.PrismaPromise<GetRouteAggregateType<T>>

    /**
     * Group by Route.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RouteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RouteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RouteGroupByArgs['orderBy'] }
        : { orderBy?: RouteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RouteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRouteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Route model
   */
  readonly fields: RouteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Route.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RouteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    permissoes<T extends Route$permissoesArgs<ExtArgs> = {}>(args?: Subset<T, Route$permissoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissaoOnRoutePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Route model
   */
  interface RouteFieldRefs {
    readonly id: FieldRef<"Route", 'Int'>
    readonly nome: FieldRef<"Route", 'String'>
    readonly path: FieldRef<"Route", 'String'>
    readonly createdAt: FieldRef<"Route", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Route findUnique
   */
  export type RouteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Route
     */
    select?: RouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Route
     */
    omit?: RouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RouteInclude<ExtArgs> | null
    /**
     * Filter, which Route to fetch.
     */
    where: RouteWhereUniqueInput
  }

  /**
   * Route findUniqueOrThrow
   */
  export type RouteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Route
     */
    select?: RouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Route
     */
    omit?: RouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RouteInclude<ExtArgs> | null
    /**
     * Filter, which Route to fetch.
     */
    where: RouteWhereUniqueInput
  }

  /**
   * Route findFirst
   */
  export type RouteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Route
     */
    select?: RouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Route
     */
    omit?: RouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RouteInclude<ExtArgs> | null
    /**
     * Filter, which Route to fetch.
     */
    where?: RouteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Routes to fetch.
     */
    orderBy?: RouteOrderByWithRelationInput | RouteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Routes.
     */
    cursor?: RouteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Routes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Routes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Routes.
     */
    distinct?: RouteScalarFieldEnum | RouteScalarFieldEnum[]
  }

  /**
   * Route findFirstOrThrow
   */
  export type RouteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Route
     */
    select?: RouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Route
     */
    omit?: RouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RouteInclude<ExtArgs> | null
    /**
     * Filter, which Route to fetch.
     */
    where?: RouteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Routes to fetch.
     */
    orderBy?: RouteOrderByWithRelationInput | RouteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Routes.
     */
    cursor?: RouteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Routes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Routes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Routes.
     */
    distinct?: RouteScalarFieldEnum | RouteScalarFieldEnum[]
  }

  /**
   * Route findMany
   */
  export type RouteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Route
     */
    select?: RouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Route
     */
    omit?: RouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RouteInclude<ExtArgs> | null
    /**
     * Filter, which Routes to fetch.
     */
    where?: RouteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Routes to fetch.
     */
    orderBy?: RouteOrderByWithRelationInput | RouteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Routes.
     */
    cursor?: RouteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Routes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Routes.
     */
    skip?: number
    distinct?: RouteScalarFieldEnum | RouteScalarFieldEnum[]
  }

  /**
   * Route create
   */
  export type RouteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Route
     */
    select?: RouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Route
     */
    omit?: RouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RouteInclude<ExtArgs> | null
    /**
     * The data needed to create a Route.
     */
    data: XOR<RouteCreateInput, RouteUncheckedCreateInput>
  }

  /**
   * Route createMany
   */
  export type RouteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Routes.
     */
    data: RouteCreateManyInput | RouteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Route createManyAndReturn
   */
  export type RouteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Route
     */
    select?: RouteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Route
     */
    omit?: RouteOmit<ExtArgs> | null
    /**
     * The data used to create many Routes.
     */
    data: RouteCreateManyInput | RouteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Route update
   */
  export type RouteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Route
     */
    select?: RouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Route
     */
    omit?: RouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RouteInclude<ExtArgs> | null
    /**
     * The data needed to update a Route.
     */
    data: XOR<RouteUpdateInput, RouteUncheckedUpdateInput>
    /**
     * Choose, which Route to update.
     */
    where: RouteWhereUniqueInput
  }

  /**
   * Route updateMany
   */
  export type RouteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Routes.
     */
    data: XOR<RouteUpdateManyMutationInput, RouteUncheckedUpdateManyInput>
    /**
     * Filter which Routes to update
     */
    where?: RouteWhereInput
    /**
     * Limit how many Routes to update.
     */
    limit?: number
  }

  /**
   * Route updateManyAndReturn
   */
  export type RouteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Route
     */
    select?: RouteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Route
     */
    omit?: RouteOmit<ExtArgs> | null
    /**
     * The data used to update Routes.
     */
    data: XOR<RouteUpdateManyMutationInput, RouteUncheckedUpdateManyInput>
    /**
     * Filter which Routes to update
     */
    where?: RouteWhereInput
    /**
     * Limit how many Routes to update.
     */
    limit?: number
  }

  /**
   * Route upsert
   */
  export type RouteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Route
     */
    select?: RouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Route
     */
    omit?: RouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RouteInclude<ExtArgs> | null
    /**
     * The filter to search for the Route to update in case it exists.
     */
    where: RouteWhereUniqueInput
    /**
     * In case the Route found by the `where` argument doesn't exist, create a new Route with this data.
     */
    create: XOR<RouteCreateInput, RouteUncheckedCreateInput>
    /**
     * In case the Route was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RouteUpdateInput, RouteUncheckedUpdateInput>
  }

  /**
   * Route delete
   */
  export type RouteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Route
     */
    select?: RouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Route
     */
    omit?: RouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RouteInclude<ExtArgs> | null
    /**
     * Filter which Route to delete.
     */
    where: RouteWhereUniqueInput
  }

  /**
   * Route deleteMany
   */
  export type RouteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Routes to delete
     */
    where?: RouteWhereInput
    /**
     * Limit how many Routes to delete.
     */
    limit?: number
  }

  /**
   * Route.permissoes
   */
  export type Route$permissoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissaoOnRoute
     */
    select?: PermissaoOnRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermissaoOnRoute
     */
    omit?: PermissaoOnRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoOnRouteInclude<ExtArgs> | null
    where?: PermissaoOnRouteWhereInput
    orderBy?: PermissaoOnRouteOrderByWithRelationInput | PermissaoOnRouteOrderByWithRelationInput[]
    cursor?: PermissaoOnRouteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermissaoOnRouteScalarFieldEnum | PermissaoOnRouteScalarFieldEnum[]
  }

  /**
   * Route without action
   */
  export type RouteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Route
     */
    select?: RouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Route
     */
    omit?: RouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RouteInclude<ExtArgs> | null
  }


  /**
   * Model PermissaoOnRoute
   */

  export type AggregatePermissaoOnRoute = {
    _count: PermissaoOnRouteCountAggregateOutputType | null
    _avg: PermissaoOnRouteAvgAggregateOutputType | null
    _sum: PermissaoOnRouteSumAggregateOutputType | null
    _min: PermissaoOnRouteMinAggregateOutputType | null
    _max: PermissaoOnRouteMaxAggregateOutputType | null
  }

  export type PermissaoOnRouteAvgAggregateOutputType = {
    id: number | null
    permissaoId: number | null
    routeId: number | null
  }

  export type PermissaoOnRouteSumAggregateOutputType = {
    id: number | null
    permissaoId: number | null
    routeId: number | null
  }

  export type PermissaoOnRouteMinAggregateOutputType = {
    id: number | null
    permissaoId: number | null
    routeId: number | null
  }

  export type PermissaoOnRouteMaxAggregateOutputType = {
    id: number | null
    permissaoId: number | null
    routeId: number | null
  }

  export type PermissaoOnRouteCountAggregateOutputType = {
    id: number
    permissaoId: number
    routeId: number
    _all: number
  }


  export type PermissaoOnRouteAvgAggregateInputType = {
    id?: true
    permissaoId?: true
    routeId?: true
  }

  export type PermissaoOnRouteSumAggregateInputType = {
    id?: true
    permissaoId?: true
    routeId?: true
  }

  export type PermissaoOnRouteMinAggregateInputType = {
    id?: true
    permissaoId?: true
    routeId?: true
  }

  export type PermissaoOnRouteMaxAggregateInputType = {
    id?: true
    permissaoId?: true
    routeId?: true
  }

  export type PermissaoOnRouteCountAggregateInputType = {
    id?: true
    permissaoId?: true
    routeId?: true
    _all?: true
  }

  export type PermissaoOnRouteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PermissaoOnRoute to aggregate.
     */
    where?: PermissaoOnRouteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PermissaoOnRoutes to fetch.
     */
    orderBy?: PermissaoOnRouteOrderByWithRelationInput | PermissaoOnRouteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PermissaoOnRouteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PermissaoOnRoutes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PermissaoOnRoutes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PermissaoOnRoutes
    **/
    _count?: true | PermissaoOnRouteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermissaoOnRouteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermissaoOnRouteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermissaoOnRouteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermissaoOnRouteMaxAggregateInputType
  }

  export type GetPermissaoOnRouteAggregateType<T extends PermissaoOnRouteAggregateArgs> = {
        [P in keyof T & keyof AggregatePermissaoOnRoute]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermissaoOnRoute[P]>
      : GetScalarType<T[P], AggregatePermissaoOnRoute[P]>
  }




  export type PermissaoOnRouteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissaoOnRouteWhereInput
    orderBy?: PermissaoOnRouteOrderByWithAggregationInput | PermissaoOnRouteOrderByWithAggregationInput[]
    by: PermissaoOnRouteScalarFieldEnum[] | PermissaoOnRouteScalarFieldEnum
    having?: PermissaoOnRouteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermissaoOnRouteCountAggregateInputType | true
    _avg?: PermissaoOnRouteAvgAggregateInputType
    _sum?: PermissaoOnRouteSumAggregateInputType
    _min?: PermissaoOnRouteMinAggregateInputType
    _max?: PermissaoOnRouteMaxAggregateInputType
  }

  export type PermissaoOnRouteGroupByOutputType = {
    id: number
    permissaoId: number
    routeId: number
    _count: PermissaoOnRouteCountAggregateOutputType | null
    _avg: PermissaoOnRouteAvgAggregateOutputType | null
    _sum: PermissaoOnRouteSumAggregateOutputType | null
    _min: PermissaoOnRouteMinAggregateOutputType | null
    _max: PermissaoOnRouteMaxAggregateOutputType | null
  }

  type GetPermissaoOnRouteGroupByPayload<T extends PermissaoOnRouteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermissaoOnRouteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermissaoOnRouteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermissaoOnRouteGroupByOutputType[P]>
            : GetScalarType<T[P], PermissaoOnRouteGroupByOutputType[P]>
        }
      >
    >


  export type PermissaoOnRouteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    permissaoId?: boolean
    routeId?: boolean
    permissao?: boolean | PermissaoDefaultArgs<ExtArgs>
    route?: boolean | RouteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permissaoOnRoute"]>

  export type PermissaoOnRouteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    permissaoId?: boolean
    routeId?: boolean
    permissao?: boolean | PermissaoDefaultArgs<ExtArgs>
    route?: boolean | RouteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permissaoOnRoute"]>

  export type PermissaoOnRouteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    permissaoId?: boolean
    routeId?: boolean
    permissao?: boolean | PermissaoDefaultArgs<ExtArgs>
    route?: boolean | RouteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permissaoOnRoute"]>

  export type PermissaoOnRouteSelectScalar = {
    id?: boolean
    permissaoId?: boolean
    routeId?: boolean
  }

  export type PermissaoOnRouteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "permissaoId" | "routeId", ExtArgs["result"]["permissaoOnRoute"]>
  export type PermissaoOnRouteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permissao?: boolean | PermissaoDefaultArgs<ExtArgs>
    route?: boolean | RouteDefaultArgs<ExtArgs>
  }
  export type PermissaoOnRouteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permissao?: boolean | PermissaoDefaultArgs<ExtArgs>
    route?: boolean | RouteDefaultArgs<ExtArgs>
  }
  export type PermissaoOnRouteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permissao?: boolean | PermissaoDefaultArgs<ExtArgs>
    route?: boolean | RouteDefaultArgs<ExtArgs>
  }

  export type $PermissaoOnRoutePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PermissaoOnRoute"
    objects: {
      permissao: Prisma.$PermissaoPayload<ExtArgs>
      route: Prisma.$RoutePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      permissaoId: number
      routeId: number
    }, ExtArgs["result"]["permissaoOnRoute"]>
    composites: {}
  }

  type PermissaoOnRouteGetPayload<S extends boolean | null | undefined | PermissaoOnRouteDefaultArgs> = $Result.GetResult<Prisma.$PermissaoOnRoutePayload, S>

  type PermissaoOnRouteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PermissaoOnRouteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermissaoOnRouteCountAggregateInputType | true
    }

  export interface PermissaoOnRouteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PermissaoOnRoute'], meta: { name: 'PermissaoOnRoute' } }
    /**
     * Find zero or one PermissaoOnRoute that matches the filter.
     * @param {PermissaoOnRouteFindUniqueArgs} args - Arguments to find a PermissaoOnRoute
     * @example
     * // Get one PermissaoOnRoute
     * const permissaoOnRoute = await prisma.permissaoOnRoute.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PermissaoOnRouteFindUniqueArgs>(args: SelectSubset<T, PermissaoOnRouteFindUniqueArgs<ExtArgs>>): Prisma__PermissaoOnRouteClient<$Result.GetResult<Prisma.$PermissaoOnRoutePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PermissaoOnRoute that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PermissaoOnRouteFindUniqueOrThrowArgs} args - Arguments to find a PermissaoOnRoute
     * @example
     * // Get one PermissaoOnRoute
     * const permissaoOnRoute = await prisma.permissaoOnRoute.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PermissaoOnRouteFindUniqueOrThrowArgs>(args: SelectSubset<T, PermissaoOnRouteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PermissaoOnRouteClient<$Result.GetResult<Prisma.$PermissaoOnRoutePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PermissaoOnRoute that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissaoOnRouteFindFirstArgs} args - Arguments to find a PermissaoOnRoute
     * @example
     * // Get one PermissaoOnRoute
     * const permissaoOnRoute = await prisma.permissaoOnRoute.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PermissaoOnRouteFindFirstArgs>(args?: SelectSubset<T, PermissaoOnRouteFindFirstArgs<ExtArgs>>): Prisma__PermissaoOnRouteClient<$Result.GetResult<Prisma.$PermissaoOnRoutePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PermissaoOnRoute that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissaoOnRouteFindFirstOrThrowArgs} args - Arguments to find a PermissaoOnRoute
     * @example
     * // Get one PermissaoOnRoute
     * const permissaoOnRoute = await prisma.permissaoOnRoute.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PermissaoOnRouteFindFirstOrThrowArgs>(args?: SelectSubset<T, PermissaoOnRouteFindFirstOrThrowArgs<ExtArgs>>): Prisma__PermissaoOnRouteClient<$Result.GetResult<Prisma.$PermissaoOnRoutePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PermissaoOnRoutes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissaoOnRouteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PermissaoOnRoutes
     * const permissaoOnRoutes = await prisma.permissaoOnRoute.findMany()
     * 
     * // Get first 10 PermissaoOnRoutes
     * const permissaoOnRoutes = await prisma.permissaoOnRoute.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permissaoOnRouteWithIdOnly = await prisma.permissaoOnRoute.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PermissaoOnRouteFindManyArgs>(args?: SelectSubset<T, PermissaoOnRouteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissaoOnRoutePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PermissaoOnRoute.
     * @param {PermissaoOnRouteCreateArgs} args - Arguments to create a PermissaoOnRoute.
     * @example
     * // Create one PermissaoOnRoute
     * const PermissaoOnRoute = await prisma.permissaoOnRoute.create({
     *   data: {
     *     // ... data to create a PermissaoOnRoute
     *   }
     * })
     * 
     */
    create<T extends PermissaoOnRouteCreateArgs>(args: SelectSubset<T, PermissaoOnRouteCreateArgs<ExtArgs>>): Prisma__PermissaoOnRouteClient<$Result.GetResult<Prisma.$PermissaoOnRoutePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PermissaoOnRoutes.
     * @param {PermissaoOnRouteCreateManyArgs} args - Arguments to create many PermissaoOnRoutes.
     * @example
     * // Create many PermissaoOnRoutes
     * const permissaoOnRoute = await prisma.permissaoOnRoute.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PermissaoOnRouteCreateManyArgs>(args?: SelectSubset<T, PermissaoOnRouteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PermissaoOnRoutes and returns the data saved in the database.
     * @param {PermissaoOnRouteCreateManyAndReturnArgs} args - Arguments to create many PermissaoOnRoutes.
     * @example
     * // Create many PermissaoOnRoutes
     * const permissaoOnRoute = await prisma.permissaoOnRoute.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PermissaoOnRoutes and only return the `id`
     * const permissaoOnRouteWithIdOnly = await prisma.permissaoOnRoute.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PermissaoOnRouteCreateManyAndReturnArgs>(args?: SelectSubset<T, PermissaoOnRouteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissaoOnRoutePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PermissaoOnRoute.
     * @param {PermissaoOnRouteDeleteArgs} args - Arguments to delete one PermissaoOnRoute.
     * @example
     * // Delete one PermissaoOnRoute
     * const PermissaoOnRoute = await prisma.permissaoOnRoute.delete({
     *   where: {
     *     // ... filter to delete one PermissaoOnRoute
     *   }
     * })
     * 
     */
    delete<T extends PermissaoOnRouteDeleteArgs>(args: SelectSubset<T, PermissaoOnRouteDeleteArgs<ExtArgs>>): Prisma__PermissaoOnRouteClient<$Result.GetResult<Prisma.$PermissaoOnRoutePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PermissaoOnRoute.
     * @param {PermissaoOnRouteUpdateArgs} args - Arguments to update one PermissaoOnRoute.
     * @example
     * // Update one PermissaoOnRoute
     * const permissaoOnRoute = await prisma.permissaoOnRoute.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PermissaoOnRouteUpdateArgs>(args: SelectSubset<T, PermissaoOnRouteUpdateArgs<ExtArgs>>): Prisma__PermissaoOnRouteClient<$Result.GetResult<Prisma.$PermissaoOnRoutePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PermissaoOnRoutes.
     * @param {PermissaoOnRouteDeleteManyArgs} args - Arguments to filter PermissaoOnRoutes to delete.
     * @example
     * // Delete a few PermissaoOnRoutes
     * const { count } = await prisma.permissaoOnRoute.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PermissaoOnRouteDeleteManyArgs>(args?: SelectSubset<T, PermissaoOnRouteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PermissaoOnRoutes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissaoOnRouteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PermissaoOnRoutes
     * const permissaoOnRoute = await prisma.permissaoOnRoute.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PermissaoOnRouteUpdateManyArgs>(args: SelectSubset<T, PermissaoOnRouteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PermissaoOnRoutes and returns the data updated in the database.
     * @param {PermissaoOnRouteUpdateManyAndReturnArgs} args - Arguments to update many PermissaoOnRoutes.
     * @example
     * // Update many PermissaoOnRoutes
     * const permissaoOnRoute = await prisma.permissaoOnRoute.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PermissaoOnRoutes and only return the `id`
     * const permissaoOnRouteWithIdOnly = await prisma.permissaoOnRoute.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PermissaoOnRouteUpdateManyAndReturnArgs>(args: SelectSubset<T, PermissaoOnRouteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissaoOnRoutePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PermissaoOnRoute.
     * @param {PermissaoOnRouteUpsertArgs} args - Arguments to update or create a PermissaoOnRoute.
     * @example
     * // Update or create a PermissaoOnRoute
     * const permissaoOnRoute = await prisma.permissaoOnRoute.upsert({
     *   create: {
     *     // ... data to create a PermissaoOnRoute
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PermissaoOnRoute we want to update
     *   }
     * })
     */
    upsert<T extends PermissaoOnRouteUpsertArgs>(args: SelectSubset<T, PermissaoOnRouteUpsertArgs<ExtArgs>>): Prisma__PermissaoOnRouteClient<$Result.GetResult<Prisma.$PermissaoOnRoutePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PermissaoOnRoutes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissaoOnRouteCountArgs} args - Arguments to filter PermissaoOnRoutes to count.
     * @example
     * // Count the number of PermissaoOnRoutes
     * const count = await prisma.permissaoOnRoute.count({
     *   where: {
     *     // ... the filter for the PermissaoOnRoutes we want to count
     *   }
     * })
    **/
    count<T extends PermissaoOnRouteCountArgs>(
      args?: Subset<T, PermissaoOnRouteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermissaoOnRouteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PermissaoOnRoute.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissaoOnRouteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermissaoOnRouteAggregateArgs>(args: Subset<T, PermissaoOnRouteAggregateArgs>): Prisma.PrismaPromise<GetPermissaoOnRouteAggregateType<T>>

    /**
     * Group by PermissaoOnRoute.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissaoOnRouteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PermissaoOnRouteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PermissaoOnRouteGroupByArgs['orderBy'] }
        : { orderBy?: PermissaoOnRouteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PermissaoOnRouteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissaoOnRouteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PermissaoOnRoute model
   */
  readonly fields: PermissaoOnRouteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PermissaoOnRoute.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PermissaoOnRouteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    permissao<T extends PermissaoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PermissaoDefaultArgs<ExtArgs>>): Prisma__PermissaoClient<$Result.GetResult<Prisma.$PermissaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    route<T extends RouteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RouteDefaultArgs<ExtArgs>>): Prisma__RouteClient<$Result.GetResult<Prisma.$RoutePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PermissaoOnRoute model
   */
  interface PermissaoOnRouteFieldRefs {
    readonly id: FieldRef<"PermissaoOnRoute", 'Int'>
    readonly permissaoId: FieldRef<"PermissaoOnRoute", 'Int'>
    readonly routeId: FieldRef<"PermissaoOnRoute", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * PermissaoOnRoute findUnique
   */
  export type PermissaoOnRouteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissaoOnRoute
     */
    select?: PermissaoOnRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermissaoOnRoute
     */
    omit?: PermissaoOnRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoOnRouteInclude<ExtArgs> | null
    /**
     * Filter, which PermissaoOnRoute to fetch.
     */
    where: PermissaoOnRouteWhereUniqueInput
  }

  /**
   * PermissaoOnRoute findUniqueOrThrow
   */
  export type PermissaoOnRouteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissaoOnRoute
     */
    select?: PermissaoOnRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermissaoOnRoute
     */
    omit?: PermissaoOnRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoOnRouteInclude<ExtArgs> | null
    /**
     * Filter, which PermissaoOnRoute to fetch.
     */
    where: PermissaoOnRouteWhereUniqueInput
  }

  /**
   * PermissaoOnRoute findFirst
   */
  export type PermissaoOnRouteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissaoOnRoute
     */
    select?: PermissaoOnRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermissaoOnRoute
     */
    omit?: PermissaoOnRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoOnRouteInclude<ExtArgs> | null
    /**
     * Filter, which PermissaoOnRoute to fetch.
     */
    where?: PermissaoOnRouteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PermissaoOnRoutes to fetch.
     */
    orderBy?: PermissaoOnRouteOrderByWithRelationInput | PermissaoOnRouteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PermissaoOnRoutes.
     */
    cursor?: PermissaoOnRouteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PermissaoOnRoutes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PermissaoOnRoutes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PermissaoOnRoutes.
     */
    distinct?: PermissaoOnRouteScalarFieldEnum | PermissaoOnRouteScalarFieldEnum[]
  }

  /**
   * PermissaoOnRoute findFirstOrThrow
   */
  export type PermissaoOnRouteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissaoOnRoute
     */
    select?: PermissaoOnRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermissaoOnRoute
     */
    omit?: PermissaoOnRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoOnRouteInclude<ExtArgs> | null
    /**
     * Filter, which PermissaoOnRoute to fetch.
     */
    where?: PermissaoOnRouteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PermissaoOnRoutes to fetch.
     */
    orderBy?: PermissaoOnRouteOrderByWithRelationInput | PermissaoOnRouteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PermissaoOnRoutes.
     */
    cursor?: PermissaoOnRouteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PermissaoOnRoutes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PermissaoOnRoutes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PermissaoOnRoutes.
     */
    distinct?: PermissaoOnRouteScalarFieldEnum | PermissaoOnRouteScalarFieldEnum[]
  }

  /**
   * PermissaoOnRoute findMany
   */
  export type PermissaoOnRouteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissaoOnRoute
     */
    select?: PermissaoOnRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermissaoOnRoute
     */
    omit?: PermissaoOnRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoOnRouteInclude<ExtArgs> | null
    /**
     * Filter, which PermissaoOnRoutes to fetch.
     */
    where?: PermissaoOnRouteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PermissaoOnRoutes to fetch.
     */
    orderBy?: PermissaoOnRouteOrderByWithRelationInput | PermissaoOnRouteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PermissaoOnRoutes.
     */
    cursor?: PermissaoOnRouteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PermissaoOnRoutes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PermissaoOnRoutes.
     */
    skip?: number
    distinct?: PermissaoOnRouteScalarFieldEnum | PermissaoOnRouteScalarFieldEnum[]
  }

  /**
   * PermissaoOnRoute create
   */
  export type PermissaoOnRouteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissaoOnRoute
     */
    select?: PermissaoOnRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermissaoOnRoute
     */
    omit?: PermissaoOnRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoOnRouteInclude<ExtArgs> | null
    /**
     * The data needed to create a PermissaoOnRoute.
     */
    data: XOR<PermissaoOnRouteCreateInput, PermissaoOnRouteUncheckedCreateInput>
  }

  /**
   * PermissaoOnRoute createMany
   */
  export type PermissaoOnRouteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PermissaoOnRoutes.
     */
    data: PermissaoOnRouteCreateManyInput | PermissaoOnRouteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PermissaoOnRoute createManyAndReturn
   */
  export type PermissaoOnRouteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissaoOnRoute
     */
    select?: PermissaoOnRouteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PermissaoOnRoute
     */
    omit?: PermissaoOnRouteOmit<ExtArgs> | null
    /**
     * The data used to create many PermissaoOnRoutes.
     */
    data: PermissaoOnRouteCreateManyInput | PermissaoOnRouteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoOnRouteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PermissaoOnRoute update
   */
  export type PermissaoOnRouteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissaoOnRoute
     */
    select?: PermissaoOnRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermissaoOnRoute
     */
    omit?: PermissaoOnRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoOnRouteInclude<ExtArgs> | null
    /**
     * The data needed to update a PermissaoOnRoute.
     */
    data: XOR<PermissaoOnRouteUpdateInput, PermissaoOnRouteUncheckedUpdateInput>
    /**
     * Choose, which PermissaoOnRoute to update.
     */
    where: PermissaoOnRouteWhereUniqueInput
  }

  /**
   * PermissaoOnRoute updateMany
   */
  export type PermissaoOnRouteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PermissaoOnRoutes.
     */
    data: XOR<PermissaoOnRouteUpdateManyMutationInput, PermissaoOnRouteUncheckedUpdateManyInput>
    /**
     * Filter which PermissaoOnRoutes to update
     */
    where?: PermissaoOnRouteWhereInput
    /**
     * Limit how many PermissaoOnRoutes to update.
     */
    limit?: number
  }

  /**
   * PermissaoOnRoute updateManyAndReturn
   */
  export type PermissaoOnRouteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissaoOnRoute
     */
    select?: PermissaoOnRouteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PermissaoOnRoute
     */
    omit?: PermissaoOnRouteOmit<ExtArgs> | null
    /**
     * The data used to update PermissaoOnRoutes.
     */
    data: XOR<PermissaoOnRouteUpdateManyMutationInput, PermissaoOnRouteUncheckedUpdateManyInput>
    /**
     * Filter which PermissaoOnRoutes to update
     */
    where?: PermissaoOnRouteWhereInput
    /**
     * Limit how many PermissaoOnRoutes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoOnRouteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PermissaoOnRoute upsert
   */
  export type PermissaoOnRouteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissaoOnRoute
     */
    select?: PermissaoOnRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermissaoOnRoute
     */
    omit?: PermissaoOnRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoOnRouteInclude<ExtArgs> | null
    /**
     * The filter to search for the PermissaoOnRoute to update in case it exists.
     */
    where: PermissaoOnRouteWhereUniqueInput
    /**
     * In case the PermissaoOnRoute found by the `where` argument doesn't exist, create a new PermissaoOnRoute with this data.
     */
    create: XOR<PermissaoOnRouteCreateInput, PermissaoOnRouteUncheckedCreateInput>
    /**
     * In case the PermissaoOnRoute was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PermissaoOnRouteUpdateInput, PermissaoOnRouteUncheckedUpdateInput>
  }

  /**
   * PermissaoOnRoute delete
   */
  export type PermissaoOnRouteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissaoOnRoute
     */
    select?: PermissaoOnRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermissaoOnRoute
     */
    omit?: PermissaoOnRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoOnRouteInclude<ExtArgs> | null
    /**
     * Filter which PermissaoOnRoute to delete.
     */
    where: PermissaoOnRouteWhereUniqueInput
  }

  /**
   * PermissaoOnRoute deleteMany
   */
  export type PermissaoOnRouteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PermissaoOnRoutes to delete
     */
    where?: PermissaoOnRouteWhereInput
    /**
     * Limit how many PermissaoOnRoutes to delete.
     */
    limit?: number
  }

  /**
   * PermissaoOnRoute without action
   */
  export type PermissaoOnRouteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissaoOnRoute
     */
    select?: PermissaoOnRouteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PermissaoOnRoute
     */
    omit?: PermissaoOnRouteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissaoOnRouteInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    email: 'email',
    matricula: 'matricula',
    senha: 'senha'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const EquipamentoScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    quantidade: 'quantidade',
    data: 'data'
  };

  export type EquipamentoScalarFieldEnum = (typeof EquipamentoScalarFieldEnum)[keyof typeof EquipamentoScalarFieldEnum]


  export const PasswordResetTokenScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    tokenHash: 'tokenHash',
    expiresAt: 'expiresAt',
    usedAt: 'usedAt',
    createdAt: 'createdAt'
  };

  export type PasswordResetTokenScalarFieldEnum = (typeof PasswordResetTokenScalarFieldEnum)[keyof typeof PasswordResetTokenScalarFieldEnum]


  export const EstoqueScalarFieldEnum: {
    id: 'id',
    nome: 'nome'
  };

  export type EstoqueScalarFieldEnum = (typeof EstoqueScalarFieldEnum)[keyof typeof EstoqueScalarFieldEnum]


  export const UsuarioEstoqueScalarFieldEnum: {
    usuarioId: 'usuarioId',
    estoqueId: 'estoqueId'
  };

  export type UsuarioEstoqueScalarFieldEnum = (typeof UsuarioEstoqueScalarFieldEnum)[keyof typeof UsuarioEstoqueScalarFieldEnum]


  export const TransferenciaScalarFieldEnum: {
    id: 'id',
    itemId: 'itemId',
    estoqueOrigemId: 'estoqueOrigemId',
    estoqueDestinoId: 'estoqueDestinoId',
    quantidade: 'quantidade',
    dataTransferencia: 'dataTransferencia'
  };

  export type TransferenciaScalarFieldEnum = (typeof TransferenciaScalarFieldEnum)[keyof typeof TransferenciaScalarFieldEnum]


  export const EstoqueItemScalarFieldEnum: {
    id: 'id',
    estoqueId: 'estoqueId',
    itemId: 'itemId',
    quantidade: 'quantidade'
  };

  export type EstoqueItemScalarFieldEnum = (typeof EstoqueItemScalarFieldEnum)[keyof typeof EstoqueItemScalarFieldEnum]


  export const PermissaoScalarFieldEnum: {
    id: 'id',
    nome: 'nome'
  };

  export type PermissaoScalarFieldEnum = (typeof PermissaoScalarFieldEnum)[keyof typeof PermissaoScalarFieldEnum]


  export const UsuarioPermissaoScalarFieldEnum: {
    usuarioId: 'usuarioId',
    permissaoId: 'permissaoId'
  };

  export type UsuarioPermissaoScalarFieldEnum = (typeof UsuarioPermissaoScalarFieldEnum)[keyof typeof UsuarioPermissaoScalarFieldEnum]


  export const RouteScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    path: 'path',
    createdAt: 'createdAt'
  };

  export type RouteScalarFieldEnum = (typeof RouteScalarFieldEnum)[keyof typeof RouteScalarFieldEnum]


  export const PermissaoOnRouteScalarFieldEnum: {
    id: 'id',
    permissaoId: 'permissaoId',
    routeId: 'routeId'
  };

  export type PermissaoOnRouteScalarFieldEnum = (typeof PermissaoOnRouteScalarFieldEnum)[keyof typeof PermissaoOnRouteScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id?: IntFilter<"Usuario"> | number
    nome?: StringNullableFilter<"Usuario"> | string | null
    email?: StringFilter<"Usuario"> | string
    matricula?: IntNullableFilter<"Usuario"> | number | null
    senha?: StringNullableFilter<"Usuario"> | string | null
    permissoes?: UsuarioPermissaoListRelationFilter
    estoques?: UsuarioEstoqueListRelationFilter
    passwordResetToken?: PasswordResetTokenListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrderInput | SortOrder
    email?: SortOrder
    matricula?: SortOrderInput | SortOrder
    senha?: SortOrderInput | SortOrder
    permissoes?: UsuarioPermissaoOrderByRelationAggregateInput
    estoques?: UsuarioEstoqueOrderByRelationAggregateInput
    passwordResetToken?: PasswordResetTokenOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nome?: StringNullableFilter<"Usuario"> | string | null
    matricula?: IntNullableFilter<"Usuario"> | number | null
    senha?: StringNullableFilter<"Usuario"> | string | null
    permissoes?: UsuarioPermissaoListRelationFilter
    estoques?: UsuarioEstoqueListRelationFilter
    passwordResetToken?: PasswordResetTokenListRelationFilter
  }, "id" | "email">

  export type UsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrderInput | SortOrder
    email?: SortOrder
    matricula?: SortOrderInput | SortOrder
    senha?: SortOrderInput | SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Usuario"> | number
    nome?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    email?: StringWithAggregatesFilter<"Usuario"> | string
    matricula?: IntNullableWithAggregatesFilter<"Usuario"> | number | null
    senha?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
  }

  export type EquipamentoWhereInput = {
    AND?: EquipamentoWhereInput | EquipamentoWhereInput[]
    OR?: EquipamentoWhereInput[]
    NOT?: EquipamentoWhereInput | EquipamentoWhereInput[]
    id?: IntFilter<"Equipamento"> | number
    nome?: StringNullableFilter<"Equipamento"> | string | null
    quantidade?: IntNullableFilter<"Equipamento"> | number | null
    data?: DateTimeNullableFilter<"Equipamento"> | Date | string | null
    transferencias?: TransferenciaListRelationFilter
    estoqueItens?: EstoqueItemListRelationFilter
  }

  export type EquipamentoOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrderInput | SortOrder
    quantidade?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    transferencias?: TransferenciaOrderByRelationAggregateInput
    estoqueItens?: EstoqueItemOrderByRelationAggregateInput
  }

  export type EquipamentoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EquipamentoWhereInput | EquipamentoWhereInput[]
    OR?: EquipamentoWhereInput[]
    NOT?: EquipamentoWhereInput | EquipamentoWhereInput[]
    nome?: StringNullableFilter<"Equipamento"> | string | null
    quantidade?: IntNullableFilter<"Equipamento"> | number | null
    data?: DateTimeNullableFilter<"Equipamento"> | Date | string | null
    transferencias?: TransferenciaListRelationFilter
    estoqueItens?: EstoqueItemListRelationFilter
  }, "id">

  export type EquipamentoOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrderInput | SortOrder
    quantidade?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    _count?: EquipamentoCountOrderByAggregateInput
    _avg?: EquipamentoAvgOrderByAggregateInput
    _max?: EquipamentoMaxOrderByAggregateInput
    _min?: EquipamentoMinOrderByAggregateInput
    _sum?: EquipamentoSumOrderByAggregateInput
  }

  export type EquipamentoScalarWhereWithAggregatesInput = {
    AND?: EquipamentoScalarWhereWithAggregatesInput | EquipamentoScalarWhereWithAggregatesInput[]
    OR?: EquipamentoScalarWhereWithAggregatesInput[]
    NOT?: EquipamentoScalarWhereWithAggregatesInput | EquipamentoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Equipamento"> | number
    nome?: StringNullableWithAggregatesFilter<"Equipamento"> | string | null
    quantidade?: IntNullableWithAggregatesFilter<"Equipamento"> | number | null
    data?: DateTimeNullableWithAggregatesFilter<"Equipamento"> | Date | string | null
  }

  export type PasswordResetTokenWhereInput = {
    AND?: PasswordResetTokenWhereInput | PasswordResetTokenWhereInput[]
    OR?: PasswordResetTokenWhereInput[]
    NOT?: PasswordResetTokenWhereInput | PasswordResetTokenWhereInput[]
    id?: IntFilter<"PasswordResetToken"> | number
    userId?: IntFilter<"PasswordResetToken"> | number
    tokenHash?: StringFilter<"PasswordResetToken"> | string
    expiresAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
    usedAt?: DateTimeNullableFilter<"PasswordResetToken"> | Date | string | null
    createdAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
    user?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }

  export type PasswordResetTokenOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    tokenHash?: SortOrder
    expiresAt?: SortOrder
    usedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    user?: UsuarioOrderByWithRelationInput
  }

  export type PasswordResetTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    tokenHash?: string
    AND?: PasswordResetTokenWhereInput | PasswordResetTokenWhereInput[]
    OR?: PasswordResetTokenWhereInput[]
    NOT?: PasswordResetTokenWhereInput | PasswordResetTokenWhereInput[]
    userId?: IntFilter<"PasswordResetToken"> | number
    expiresAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
    usedAt?: DateTimeNullableFilter<"PasswordResetToken"> | Date | string | null
    createdAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
    user?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }, "id" | "tokenHash">

  export type PasswordResetTokenOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    tokenHash?: SortOrder
    expiresAt?: SortOrder
    usedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: PasswordResetTokenCountOrderByAggregateInput
    _avg?: PasswordResetTokenAvgOrderByAggregateInput
    _max?: PasswordResetTokenMaxOrderByAggregateInput
    _min?: PasswordResetTokenMinOrderByAggregateInput
    _sum?: PasswordResetTokenSumOrderByAggregateInput
  }

  export type PasswordResetTokenScalarWhereWithAggregatesInput = {
    AND?: PasswordResetTokenScalarWhereWithAggregatesInput | PasswordResetTokenScalarWhereWithAggregatesInput[]
    OR?: PasswordResetTokenScalarWhereWithAggregatesInput[]
    NOT?: PasswordResetTokenScalarWhereWithAggregatesInput | PasswordResetTokenScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PasswordResetToken"> | number
    userId?: IntWithAggregatesFilter<"PasswordResetToken"> | number
    tokenHash?: StringWithAggregatesFilter<"PasswordResetToken"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"PasswordResetToken"> | Date | string
    usedAt?: DateTimeNullableWithAggregatesFilter<"PasswordResetToken"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PasswordResetToken"> | Date | string
  }

  export type EstoqueWhereInput = {
    AND?: EstoqueWhereInput | EstoqueWhereInput[]
    OR?: EstoqueWhereInput[]
    NOT?: EstoqueWhereInput | EstoqueWhereInput[]
    id?: IntFilter<"Estoque"> | number
    nome?: StringFilter<"Estoque"> | string
    transferenciasDestino?: TransferenciaListRelationFilter
    transferenciasOrigem?: TransferenciaListRelationFilter
    itens?: EstoqueItemListRelationFilter
    usuarios?: UsuarioEstoqueListRelationFilter
  }

  export type EstoqueOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    transferenciasDestino?: TransferenciaOrderByRelationAggregateInput
    transferenciasOrigem?: TransferenciaOrderByRelationAggregateInput
    itens?: EstoqueItemOrderByRelationAggregateInput
    usuarios?: UsuarioEstoqueOrderByRelationAggregateInput
  }

  export type EstoqueWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EstoqueWhereInput | EstoqueWhereInput[]
    OR?: EstoqueWhereInput[]
    NOT?: EstoqueWhereInput | EstoqueWhereInput[]
    nome?: StringFilter<"Estoque"> | string
    transferenciasDestino?: TransferenciaListRelationFilter
    transferenciasOrigem?: TransferenciaListRelationFilter
    itens?: EstoqueItemListRelationFilter
    usuarios?: UsuarioEstoqueListRelationFilter
  }, "id">

  export type EstoqueOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    _count?: EstoqueCountOrderByAggregateInput
    _avg?: EstoqueAvgOrderByAggregateInput
    _max?: EstoqueMaxOrderByAggregateInput
    _min?: EstoqueMinOrderByAggregateInput
    _sum?: EstoqueSumOrderByAggregateInput
  }

  export type EstoqueScalarWhereWithAggregatesInput = {
    AND?: EstoqueScalarWhereWithAggregatesInput | EstoqueScalarWhereWithAggregatesInput[]
    OR?: EstoqueScalarWhereWithAggregatesInput[]
    NOT?: EstoqueScalarWhereWithAggregatesInput | EstoqueScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Estoque"> | number
    nome?: StringWithAggregatesFilter<"Estoque"> | string
  }

  export type UsuarioEstoqueWhereInput = {
    AND?: UsuarioEstoqueWhereInput | UsuarioEstoqueWhereInput[]
    OR?: UsuarioEstoqueWhereInput[]
    NOT?: UsuarioEstoqueWhereInput | UsuarioEstoqueWhereInput[]
    usuarioId?: IntFilter<"UsuarioEstoque"> | number
    estoqueId?: IntFilter<"UsuarioEstoque"> | number
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    estoque?: XOR<EstoqueScalarRelationFilter, EstoqueWhereInput>
  }

  export type UsuarioEstoqueOrderByWithRelationInput = {
    usuarioId?: SortOrder
    estoqueId?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    estoque?: EstoqueOrderByWithRelationInput
  }

  export type UsuarioEstoqueWhereUniqueInput = Prisma.AtLeast<{
    usuarioId_estoqueId?: UsuarioEstoqueUsuarioIdEstoqueIdCompoundUniqueInput
    AND?: UsuarioEstoqueWhereInput | UsuarioEstoqueWhereInput[]
    OR?: UsuarioEstoqueWhereInput[]
    NOT?: UsuarioEstoqueWhereInput | UsuarioEstoqueWhereInput[]
    usuarioId?: IntFilter<"UsuarioEstoque"> | number
    estoqueId?: IntFilter<"UsuarioEstoque"> | number
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    estoque?: XOR<EstoqueScalarRelationFilter, EstoqueWhereInput>
  }, "usuarioId_estoqueId">

  export type UsuarioEstoqueOrderByWithAggregationInput = {
    usuarioId?: SortOrder
    estoqueId?: SortOrder
    _count?: UsuarioEstoqueCountOrderByAggregateInput
    _avg?: UsuarioEstoqueAvgOrderByAggregateInput
    _max?: UsuarioEstoqueMaxOrderByAggregateInput
    _min?: UsuarioEstoqueMinOrderByAggregateInput
    _sum?: UsuarioEstoqueSumOrderByAggregateInput
  }

  export type UsuarioEstoqueScalarWhereWithAggregatesInput = {
    AND?: UsuarioEstoqueScalarWhereWithAggregatesInput | UsuarioEstoqueScalarWhereWithAggregatesInput[]
    OR?: UsuarioEstoqueScalarWhereWithAggregatesInput[]
    NOT?: UsuarioEstoqueScalarWhereWithAggregatesInput | UsuarioEstoqueScalarWhereWithAggregatesInput[]
    usuarioId?: IntWithAggregatesFilter<"UsuarioEstoque"> | number
    estoqueId?: IntWithAggregatesFilter<"UsuarioEstoque"> | number
  }

  export type TransferenciaWhereInput = {
    AND?: TransferenciaWhereInput | TransferenciaWhereInput[]
    OR?: TransferenciaWhereInput[]
    NOT?: TransferenciaWhereInput | TransferenciaWhereInput[]
    id?: IntFilter<"Transferencia"> | number
    itemId?: IntFilter<"Transferencia"> | number
    estoqueOrigemId?: IntFilter<"Transferencia"> | number
    estoqueDestinoId?: IntFilter<"Transferencia"> | number
    quantidade?: IntFilter<"Transferencia"> | number
    dataTransferencia?: DateTimeNullableFilter<"Transferencia"> | Date | string | null
    item?: XOR<EquipamentoScalarRelationFilter, EquipamentoWhereInput>
    origem?: XOR<EstoqueScalarRelationFilter, EstoqueWhereInput>
    destino?: XOR<EstoqueScalarRelationFilter, EstoqueWhereInput>
  }

  export type TransferenciaOrderByWithRelationInput = {
    id?: SortOrder
    itemId?: SortOrder
    estoqueOrigemId?: SortOrder
    estoqueDestinoId?: SortOrder
    quantidade?: SortOrder
    dataTransferencia?: SortOrderInput | SortOrder
    item?: EquipamentoOrderByWithRelationInput
    origem?: EstoqueOrderByWithRelationInput
    destino?: EstoqueOrderByWithRelationInput
  }

  export type TransferenciaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TransferenciaWhereInput | TransferenciaWhereInput[]
    OR?: TransferenciaWhereInput[]
    NOT?: TransferenciaWhereInput | TransferenciaWhereInput[]
    itemId?: IntFilter<"Transferencia"> | number
    estoqueOrigemId?: IntFilter<"Transferencia"> | number
    estoqueDestinoId?: IntFilter<"Transferencia"> | number
    quantidade?: IntFilter<"Transferencia"> | number
    dataTransferencia?: DateTimeNullableFilter<"Transferencia"> | Date | string | null
    item?: XOR<EquipamentoScalarRelationFilter, EquipamentoWhereInput>
    origem?: XOR<EstoqueScalarRelationFilter, EstoqueWhereInput>
    destino?: XOR<EstoqueScalarRelationFilter, EstoqueWhereInput>
  }, "id">

  export type TransferenciaOrderByWithAggregationInput = {
    id?: SortOrder
    itemId?: SortOrder
    estoqueOrigemId?: SortOrder
    estoqueDestinoId?: SortOrder
    quantidade?: SortOrder
    dataTransferencia?: SortOrderInput | SortOrder
    _count?: TransferenciaCountOrderByAggregateInput
    _avg?: TransferenciaAvgOrderByAggregateInput
    _max?: TransferenciaMaxOrderByAggregateInput
    _min?: TransferenciaMinOrderByAggregateInput
    _sum?: TransferenciaSumOrderByAggregateInput
  }

  export type TransferenciaScalarWhereWithAggregatesInput = {
    AND?: TransferenciaScalarWhereWithAggregatesInput | TransferenciaScalarWhereWithAggregatesInput[]
    OR?: TransferenciaScalarWhereWithAggregatesInput[]
    NOT?: TransferenciaScalarWhereWithAggregatesInput | TransferenciaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Transferencia"> | number
    itemId?: IntWithAggregatesFilter<"Transferencia"> | number
    estoqueOrigemId?: IntWithAggregatesFilter<"Transferencia"> | number
    estoqueDestinoId?: IntWithAggregatesFilter<"Transferencia"> | number
    quantidade?: IntWithAggregatesFilter<"Transferencia"> | number
    dataTransferencia?: DateTimeNullableWithAggregatesFilter<"Transferencia"> | Date | string | null
  }

  export type EstoqueItemWhereInput = {
    AND?: EstoqueItemWhereInput | EstoqueItemWhereInput[]
    OR?: EstoqueItemWhereInput[]
    NOT?: EstoqueItemWhereInput | EstoqueItemWhereInput[]
    id?: IntFilter<"EstoqueItem"> | number
    estoqueId?: IntFilter<"EstoqueItem"> | number
    itemId?: IntFilter<"EstoqueItem"> | number
    quantidade?: IntFilter<"EstoqueItem"> | number
    estoque?: XOR<EstoqueScalarRelationFilter, EstoqueWhereInput>
    item?: XOR<EquipamentoScalarRelationFilter, EquipamentoWhereInput>
  }

  export type EstoqueItemOrderByWithRelationInput = {
    id?: SortOrder
    estoqueId?: SortOrder
    itemId?: SortOrder
    quantidade?: SortOrder
    estoque?: EstoqueOrderByWithRelationInput
    item?: EquipamentoOrderByWithRelationInput
  }

  export type EstoqueItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    itemId_estoqueId?: EstoqueItemItemId_estoqueIdCompoundUniqueInput
    AND?: EstoqueItemWhereInput | EstoqueItemWhereInput[]
    OR?: EstoqueItemWhereInput[]
    NOT?: EstoqueItemWhereInput | EstoqueItemWhereInput[]
    estoqueId?: IntFilter<"EstoqueItem"> | number
    itemId?: IntFilter<"EstoqueItem"> | number
    quantidade?: IntFilter<"EstoqueItem"> | number
    estoque?: XOR<EstoqueScalarRelationFilter, EstoqueWhereInput>
    item?: XOR<EquipamentoScalarRelationFilter, EquipamentoWhereInput>
  }, "id" | "itemId_estoqueId">

  export type EstoqueItemOrderByWithAggregationInput = {
    id?: SortOrder
    estoqueId?: SortOrder
    itemId?: SortOrder
    quantidade?: SortOrder
    _count?: EstoqueItemCountOrderByAggregateInput
    _avg?: EstoqueItemAvgOrderByAggregateInput
    _max?: EstoqueItemMaxOrderByAggregateInput
    _min?: EstoqueItemMinOrderByAggregateInput
    _sum?: EstoqueItemSumOrderByAggregateInput
  }

  export type EstoqueItemScalarWhereWithAggregatesInput = {
    AND?: EstoqueItemScalarWhereWithAggregatesInput | EstoqueItemScalarWhereWithAggregatesInput[]
    OR?: EstoqueItemScalarWhereWithAggregatesInput[]
    NOT?: EstoqueItemScalarWhereWithAggregatesInput | EstoqueItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EstoqueItem"> | number
    estoqueId?: IntWithAggregatesFilter<"EstoqueItem"> | number
    itemId?: IntWithAggregatesFilter<"EstoqueItem"> | number
    quantidade?: IntWithAggregatesFilter<"EstoqueItem"> | number
  }

  export type PermissaoWhereInput = {
    AND?: PermissaoWhereInput | PermissaoWhereInput[]
    OR?: PermissaoWhereInput[]
    NOT?: PermissaoWhereInput | PermissaoWhereInput[]
    id?: IntFilter<"Permissao"> | number
    nome?: StringFilter<"Permissao"> | string
    usuarios?: UsuarioPermissaoListRelationFilter
    rotasPermitidas?: PermissaoOnRouteListRelationFilter
  }

  export type PermissaoOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    usuarios?: UsuarioPermissaoOrderByRelationAggregateInput
    rotasPermitidas?: PermissaoOnRouteOrderByRelationAggregateInput
  }

  export type PermissaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nome?: string
    AND?: PermissaoWhereInput | PermissaoWhereInput[]
    OR?: PermissaoWhereInput[]
    NOT?: PermissaoWhereInput | PermissaoWhereInput[]
    usuarios?: UsuarioPermissaoListRelationFilter
    rotasPermitidas?: PermissaoOnRouteListRelationFilter
  }, "id" | "nome">

  export type PermissaoOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    _count?: PermissaoCountOrderByAggregateInput
    _avg?: PermissaoAvgOrderByAggregateInput
    _max?: PermissaoMaxOrderByAggregateInput
    _min?: PermissaoMinOrderByAggregateInput
    _sum?: PermissaoSumOrderByAggregateInput
  }

  export type PermissaoScalarWhereWithAggregatesInput = {
    AND?: PermissaoScalarWhereWithAggregatesInput | PermissaoScalarWhereWithAggregatesInput[]
    OR?: PermissaoScalarWhereWithAggregatesInput[]
    NOT?: PermissaoScalarWhereWithAggregatesInput | PermissaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Permissao"> | number
    nome?: StringWithAggregatesFilter<"Permissao"> | string
  }

  export type UsuarioPermissaoWhereInput = {
    AND?: UsuarioPermissaoWhereInput | UsuarioPermissaoWhereInput[]
    OR?: UsuarioPermissaoWhereInput[]
    NOT?: UsuarioPermissaoWhereInput | UsuarioPermissaoWhereInput[]
    usuarioId?: IntFilter<"UsuarioPermissao"> | number
    permissaoId?: IntFilter<"UsuarioPermissao"> | number
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    permissao?: XOR<PermissaoScalarRelationFilter, PermissaoWhereInput>
  }

  export type UsuarioPermissaoOrderByWithRelationInput = {
    usuarioId?: SortOrder
    permissaoId?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    permissao?: PermissaoOrderByWithRelationInput
  }

  export type UsuarioPermissaoWhereUniqueInput = Prisma.AtLeast<{
    usuarioId_permissaoId?: UsuarioPermissaoUsuarioIdPermissaoIdCompoundUniqueInput
    AND?: UsuarioPermissaoWhereInput | UsuarioPermissaoWhereInput[]
    OR?: UsuarioPermissaoWhereInput[]
    NOT?: UsuarioPermissaoWhereInput | UsuarioPermissaoWhereInput[]
    usuarioId?: IntFilter<"UsuarioPermissao"> | number
    permissaoId?: IntFilter<"UsuarioPermissao"> | number
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    permissao?: XOR<PermissaoScalarRelationFilter, PermissaoWhereInput>
  }, "usuarioId_permissaoId">

  export type UsuarioPermissaoOrderByWithAggregationInput = {
    usuarioId?: SortOrder
    permissaoId?: SortOrder
    _count?: UsuarioPermissaoCountOrderByAggregateInput
    _avg?: UsuarioPermissaoAvgOrderByAggregateInput
    _max?: UsuarioPermissaoMaxOrderByAggregateInput
    _min?: UsuarioPermissaoMinOrderByAggregateInput
    _sum?: UsuarioPermissaoSumOrderByAggregateInput
  }

  export type UsuarioPermissaoScalarWhereWithAggregatesInput = {
    AND?: UsuarioPermissaoScalarWhereWithAggregatesInput | UsuarioPermissaoScalarWhereWithAggregatesInput[]
    OR?: UsuarioPermissaoScalarWhereWithAggregatesInput[]
    NOT?: UsuarioPermissaoScalarWhereWithAggregatesInput | UsuarioPermissaoScalarWhereWithAggregatesInput[]
    usuarioId?: IntWithAggregatesFilter<"UsuarioPermissao"> | number
    permissaoId?: IntWithAggregatesFilter<"UsuarioPermissao"> | number
  }

  export type RouteWhereInput = {
    AND?: RouteWhereInput | RouteWhereInput[]
    OR?: RouteWhereInput[]
    NOT?: RouteWhereInput | RouteWhereInput[]
    id?: IntFilter<"Route"> | number
    nome?: StringFilter<"Route"> | string
    path?: StringFilter<"Route"> | string
    createdAt?: DateTimeFilter<"Route"> | Date | string
    permissoes?: PermissaoOnRouteListRelationFilter
  }

  export type RouteOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    path?: SortOrder
    createdAt?: SortOrder
    permissoes?: PermissaoOnRouteOrderByRelationAggregateInput
  }

  export type RouteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RouteWhereInput | RouteWhereInput[]
    OR?: RouteWhereInput[]
    NOT?: RouteWhereInput | RouteWhereInput[]
    nome?: StringFilter<"Route"> | string
    path?: StringFilter<"Route"> | string
    createdAt?: DateTimeFilter<"Route"> | Date | string
    permissoes?: PermissaoOnRouteListRelationFilter
  }, "id">

  export type RouteOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    path?: SortOrder
    createdAt?: SortOrder
    _count?: RouteCountOrderByAggregateInput
    _avg?: RouteAvgOrderByAggregateInput
    _max?: RouteMaxOrderByAggregateInput
    _min?: RouteMinOrderByAggregateInput
    _sum?: RouteSumOrderByAggregateInput
  }

  export type RouteScalarWhereWithAggregatesInput = {
    AND?: RouteScalarWhereWithAggregatesInput | RouteScalarWhereWithAggregatesInput[]
    OR?: RouteScalarWhereWithAggregatesInput[]
    NOT?: RouteScalarWhereWithAggregatesInput | RouteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Route"> | number
    nome?: StringWithAggregatesFilter<"Route"> | string
    path?: StringWithAggregatesFilter<"Route"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Route"> | Date | string
  }

  export type PermissaoOnRouteWhereInput = {
    AND?: PermissaoOnRouteWhereInput | PermissaoOnRouteWhereInput[]
    OR?: PermissaoOnRouteWhereInput[]
    NOT?: PermissaoOnRouteWhereInput | PermissaoOnRouteWhereInput[]
    id?: IntFilter<"PermissaoOnRoute"> | number
    permissaoId?: IntFilter<"PermissaoOnRoute"> | number
    routeId?: IntFilter<"PermissaoOnRoute"> | number
    permissao?: XOR<PermissaoScalarRelationFilter, PermissaoWhereInput>
    route?: XOR<RouteScalarRelationFilter, RouteWhereInput>
  }

  export type PermissaoOnRouteOrderByWithRelationInput = {
    id?: SortOrder
    permissaoId?: SortOrder
    routeId?: SortOrder
    permissao?: PermissaoOrderByWithRelationInput
    route?: RouteOrderByWithRelationInput
  }

  export type PermissaoOnRouteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PermissaoOnRouteWhereInput | PermissaoOnRouteWhereInput[]
    OR?: PermissaoOnRouteWhereInput[]
    NOT?: PermissaoOnRouteWhereInput | PermissaoOnRouteWhereInput[]
    permissaoId?: IntFilter<"PermissaoOnRoute"> | number
    routeId?: IntFilter<"PermissaoOnRoute"> | number
    permissao?: XOR<PermissaoScalarRelationFilter, PermissaoWhereInput>
    route?: XOR<RouteScalarRelationFilter, RouteWhereInput>
  }, "id">

  export type PermissaoOnRouteOrderByWithAggregationInput = {
    id?: SortOrder
    permissaoId?: SortOrder
    routeId?: SortOrder
    _count?: PermissaoOnRouteCountOrderByAggregateInput
    _avg?: PermissaoOnRouteAvgOrderByAggregateInput
    _max?: PermissaoOnRouteMaxOrderByAggregateInput
    _min?: PermissaoOnRouteMinOrderByAggregateInput
    _sum?: PermissaoOnRouteSumOrderByAggregateInput
  }

  export type PermissaoOnRouteScalarWhereWithAggregatesInput = {
    AND?: PermissaoOnRouteScalarWhereWithAggregatesInput | PermissaoOnRouteScalarWhereWithAggregatesInput[]
    OR?: PermissaoOnRouteScalarWhereWithAggregatesInput[]
    NOT?: PermissaoOnRouteScalarWhereWithAggregatesInput | PermissaoOnRouteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PermissaoOnRoute"> | number
    permissaoId?: IntWithAggregatesFilter<"PermissaoOnRoute"> | number
    routeId?: IntWithAggregatesFilter<"PermissaoOnRoute"> | number
  }

  export type UsuarioCreateInput = {
    nome?: string | null
    email: string
    matricula?: number | null
    senha?: string | null
    permissoes?: UsuarioPermissaoCreateNestedManyWithoutUsuarioInput
    estoques?: UsuarioEstoqueCreateNestedManyWithoutUsuarioInput
    passwordResetToken?: PasswordResetTokenCreateNestedManyWithoutUserInput
  }

  export type UsuarioUncheckedCreateInput = {
    id?: number
    nome?: string | null
    email: string
    matricula?: number | null
    senha?: string | null
    permissoes?: UsuarioPermissaoUncheckedCreateNestedManyWithoutUsuarioInput
    estoques?: UsuarioEstoqueUncheckedCreateNestedManyWithoutUsuarioInput
    passwordResetToken?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
  }

  export type UsuarioUpdateInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    matricula?: NullableIntFieldUpdateOperationsInput | number | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    permissoes?: UsuarioPermissaoUpdateManyWithoutUsuarioNestedInput
    estoques?: UsuarioEstoqueUpdateManyWithoutUsuarioNestedInput
    passwordResetToken?: PasswordResetTokenUpdateManyWithoutUserNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    matricula?: NullableIntFieldUpdateOperationsInput | number | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    permissoes?: UsuarioPermissaoUncheckedUpdateManyWithoutUsuarioNestedInput
    estoques?: UsuarioEstoqueUncheckedUpdateManyWithoutUsuarioNestedInput
    passwordResetToken?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UsuarioCreateManyInput = {
    id?: number
    nome?: string | null
    email: string
    matricula?: number | null
    senha?: string | null
  }

  export type UsuarioUpdateManyMutationInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    matricula?: NullableIntFieldUpdateOperationsInput | number | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    matricula?: NullableIntFieldUpdateOperationsInput | number | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipamentoCreateInput = {
    nome?: string | null
    quantidade?: number | null
    data?: Date | string | null
    transferencias?: TransferenciaCreateNestedManyWithoutItemInput
    estoqueItens?: EstoqueItemCreateNestedManyWithoutItemInput
  }

  export type EquipamentoUncheckedCreateInput = {
    id?: number
    nome?: string | null
    quantidade?: number | null
    data?: Date | string | null
    transferencias?: TransferenciaUncheckedCreateNestedManyWithoutItemInput
    estoqueItens?: EstoqueItemUncheckedCreateNestedManyWithoutItemInput
  }

  export type EquipamentoUpdateInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferencias?: TransferenciaUpdateManyWithoutItemNestedInput
    estoqueItens?: EstoqueItemUpdateManyWithoutItemNestedInput
  }

  export type EquipamentoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferencias?: TransferenciaUncheckedUpdateManyWithoutItemNestedInput
    estoqueItens?: EstoqueItemUncheckedUpdateManyWithoutItemNestedInput
  }

  export type EquipamentoCreateManyInput = {
    id?: number
    nome?: string | null
    quantidade?: number | null
    data?: Date | string | null
  }

  export type EquipamentoUpdateManyMutationInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EquipamentoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PasswordResetTokenCreateInput = {
    tokenHash: string
    expiresAt: Date | string
    usedAt?: Date | string | null
    createdAt?: Date | string
    user: UsuarioCreateNestedOneWithoutPasswordResetTokenInput
  }

  export type PasswordResetTokenUncheckedCreateInput = {
    id?: number
    userId: number
    tokenHash: string
    expiresAt: Date | string
    usedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type PasswordResetTokenUpdateInput = {
    tokenHash?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UsuarioUpdateOneRequiredWithoutPasswordResetTokenNestedInput
  }

  export type PasswordResetTokenUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    tokenHash?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PasswordResetTokenCreateManyInput = {
    id?: number
    userId: number
    tokenHash: string
    expiresAt: Date | string
    usedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type PasswordResetTokenUpdateManyMutationInput = {
    tokenHash?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PasswordResetTokenUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    tokenHash?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EstoqueCreateInput = {
    nome: string
    transferenciasDestino?: TransferenciaCreateNestedManyWithoutDestinoInput
    transferenciasOrigem?: TransferenciaCreateNestedManyWithoutOrigemInput
    itens?: EstoqueItemCreateNestedManyWithoutEstoqueInput
    usuarios?: UsuarioEstoqueCreateNestedManyWithoutEstoqueInput
  }

  export type EstoqueUncheckedCreateInput = {
    id?: number
    nome: string
    transferenciasDestino?: TransferenciaUncheckedCreateNestedManyWithoutDestinoInput
    transferenciasOrigem?: TransferenciaUncheckedCreateNestedManyWithoutOrigemInput
    itens?: EstoqueItemUncheckedCreateNestedManyWithoutEstoqueInput
    usuarios?: UsuarioEstoqueUncheckedCreateNestedManyWithoutEstoqueInput
  }

  export type EstoqueUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    transferenciasDestino?: TransferenciaUpdateManyWithoutDestinoNestedInput
    transferenciasOrigem?: TransferenciaUpdateManyWithoutOrigemNestedInput
    itens?: EstoqueItemUpdateManyWithoutEstoqueNestedInput
    usuarios?: UsuarioEstoqueUpdateManyWithoutEstoqueNestedInput
  }

  export type EstoqueUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    transferenciasDestino?: TransferenciaUncheckedUpdateManyWithoutDestinoNestedInput
    transferenciasOrigem?: TransferenciaUncheckedUpdateManyWithoutOrigemNestedInput
    itens?: EstoqueItemUncheckedUpdateManyWithoutEstoqueNestedInput
    usuarios?: UsuarioEstoqueUncheckedUpdateManyWithoutEstoqueNestedInput
  }

  export type EstoqueCreateManyInput = {
    id?: number
    nome: string
  }

  export type EstoqueUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type EstoqueUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioEstoqueCreateInput = {
    usuario: UsuarioCreateNestedOneWithoutEstoquesInput
    estoque: EstoqueCreateNestedOneWithoutUsuariosInput
  }

  export type UsuarioEstoqueUncheckedCreateInput = {
    usuarioId: number
    estoqueId: number
  }

  export type UsuarioEstoqueUpdateInput = {
    usuario?: UsuarioUpdateOneRequiredWithoutEstoquesNestedInput
    estoque?: EstoqueUpdateOneRequiredWithoutUsuariosNestedInput
  }

  export type UsuarioEstoqueUncheckedUpdateInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    estoqueId?: IntFieldUpdateOperationsInput | number
  }

  export type UsuarioEstoqueCreateManyInput = {
    usuarioId: number
    estoqueId: number
  }

  export type UsuarioEstoqueUpdateManyMutationInput = {

  }

  export type UsuarioEstoqueUncheckedUpdateManyInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    estoqueId?: IntFieldUpdateOperationsInput | number
  }

  export type TransferenciaCreateInput = {
    quantidade: number
    dataTransferencia?: Date | string | null
    item: EquipamentoCreateNestedOneWithoutTransferenciasInput
    origem: EstoqueCreateNestedOneWithoutTransferenciasOrigemInput
    destino: EstoqueCreateNestedOneWithoutTransferenciasDestinoInput
  }

  export type TransferenciaUncheckedCreateInput = {
    id?: number
    itemId: number
    estoqueOrigemId: number
    estoqueDestinoId: number
    quantidade: number
    dataTransferencia?: Date | string | null
  }

  export type TransferenciaUpdateInput = {
    quantidade?: IntFieldUpdateOperationsInput | number
    dataTransferencia?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item?: EquipamentoUpdateOneRequiredWithoutTransferenciasNestedInput
    origem?: EstoqueUpdateOneRequiredWithoutTransferenciasOrigemNestedInput
    destino?: EstoqueUpdateOneRequiredWithoutTransferenciasDestinoNestedInput
  }

  export type TransferenciaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    estoqueOrigemId?: IntFieldUpdateOperationsInput | number
    estoqueDestinoId?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    dataTransferencia?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransferenciaCreateManyInput = {
    id?: number
    itemId: number
    estoqueOrigemId: number
    estoqueDestinoId: number
    quantidade: number
    dataTransferencia?: Date | string | null
  }

  export type TransferenciaUpdateManyMutationInput = {
    quantidade?: IntFieldUpdateOperationsInput | number
    dataTransferencia?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransferenciaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    estoqueOrigemId?: IntFieldUpdateOperationsInput | number
    estoqueDestinoId?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    dataTransferencia?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EstoqueItemCreateInput = {
    quantidade: number
    estoque: EstoqueCreateNestedOneWithoutItensInput
    item: EquipamentoCreateNestedOneWithoutEstoqueItensInput
  }

  export type EstoqueItemUncheckedCreateInput = {
    id?: number
    estoqueId: number
    itemId: number
    quantidade: number
  }

  export type EstoqueItemUpdateInput = {
    quantidade?: IntFieldUpdateOperationsInput | number
    estoque?: EstoqueUpdateOneRequiredWithoutItensNestedInput
    item?: EquipamentoUpdateOneRequiredWithoutEstoqueItensNestedInput
  }

  export type EstoqueItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    estoqueId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
  }

  export type EstoqueItemCreateManyInput = {
    id?: number
    estoqueId: number
    itemId: number
    quantidade: number
  }

  export type EstoqueItemUpdateManyMutationInput = {
    quantidade?: IntFieldUpdateOperationsInput | number
  }

  export type EstoqueItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    estoqueId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
  }

  export type PermissaoCreateInput = {
    nome: string
    usuarios?: UsuarioPermissaoCreateNestedManyWithoutPermissaoInput
    rotasPermitidas?: PermissaoOnRouteCreateNestedManyWithoutPermissaoInput
  }

  export type PermissaoUncheckedCreateInput = {
    id?: number
    nome: string
    usuarios?: UsuarioPermissaoUncheckedCreateNestedManyWithoutPermissaoInput
    rotasPermitidas?: PermissaoOnRouteUncheckedCreateNestedManyWithoutPermissaoInput
  }

  export type PermissaoUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuarioPermissaoUpdateManyWithoutPermissaoNestedInput
    rotasPermitidas?: PermissaoOnRouteUpdateManyWithoutPermissaoNestedInput
  }

  export type PermissaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuarioPermissaoUncheckedUpdateManyWithoutPermissaoNestedInput
    rotasPermitidas?: PermissaoOnRouteUncheckedUpdateManyWithoutPermissaoNestedInput
  }

  export type PermissaoCreateManyInput = {
    id?: number
    nome: string
  }

  export type PermissaoUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type PermissaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioPermissaoCreateInput = {
    usuario: UsuarioCreateNestedOneWithoutPermissoesInput
    permissao: PermissaoCreateNestedOneWithoutUsuariosInput
  }

  export type UsuarioPermissaoUncheckedCreateInput = {
    usuarioId: number
    permissaoId: number
  }

  export type UsuarioPermissaoUpdateInput = {
    usuario?: UsuarioUpdateOneRequiredWithoutPermissoesNestedInput
    permissao?: PermissaoUpdateOneRequiredWithoutUsuariosNestedInput
  }

  export type UsuarioPermissaoUncheckedUpdateInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    permissaoId?: IntFieldUpdateOperationsInput | number
  }

  export type UsuarioPermissaoCreateManyInput = {
    usuarioId: number
    permissaoId: number
  }

  export type UsuarioPermissaoUpdateManyMutationInput = {

  }

  export type UsuarioPermissaoUncheckedUpdateManyInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    permissaoId?: IntFieldUpdateOperationsInput | number
  }

  export type RouteCreateInput = {
    nome: string
    path: string
    createdAt?: Date | string
    permissoes?: PermissaoOnRouteCreateNestedManyWithoutRouteInput
  }

  export type RouteUncheckedCreateInput = {
    id?: number
    nome: string
    path: string
    createdAt?: Date | string
    permissoes?: PermissaoOnRouteUncheckedCreateNestedManyWithoutRouteInput
  }

  export type RouteUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    permissoes?: PermissaoOnRouteUpdateManyWithoutRouteNestedInput
  }

  export type RouteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    permissoes?: PermissaoOnRouteUncheckedUpdateManyWithoutRouteNestedInput
  }

  export type RouteCreateManyInput = {
    id?: number
    nome: string
    path: string
    createdAt?: Date | string
  }

  export type RouteUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RouteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissaoOnRouteCreateInput = {
    permissao: PermissaoCreateNestedOneWithoutRotasPermitidasInput
    route: RouteCreateNestedOneWithoutPermissoesInput
  }

  export type PermissaoOnRouteUncheckedCreateInput = {
    id?: number
    permissaoId: number
    routeId: number
  }

  export type PermissaoOnRouteUpdateInput = {
    permissao?: PermissaoUpdateOneRequiredWithoutRotasPermitidasNestedInput
    route?: RouteUpdateOneRequiredWithoutPermissoesNestedInput
  }

  export type PermissaoOnRouteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    permissaoId?: IntFieldUpdateOperationsInput | number
    routeId?: IntFieldUpdateOperationsInput | number
  }

  export type PermissaoOnRouteCreateManyInput = {
    id?: number
    permissaoId: number
    routeId: number
  }

  export type PermissaoOnRouteUpdateManyMutationInput = {

  }

  export type PermissaoOnRouteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    permissaoId?: IntFieldUpdateOperationsInput | number
    routeId?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UsuarioPermissaoListRelationFilter = {
    every?: UsuarioPermissaoWhereInput
    some?: UsuarioPermissaoWhereInput
    none?: UsuarioPermissaoWhereInput
  }

  export type UsuarioEstoqueListRelationFilter = {
    every?: UsuarioEstoqueWhereInput
    some?: UsuarioEstoqueWhereInput
    none?: UsuarioEstoqueWhereInput
  }

  export type PasswordResetTokenListRelationFilter = {
    every?: PasswordResetTokenWhereInput
    some?: PasswordResetTokenWhereInput
    none?: PasswordResetTokenWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UsuarioPermissaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioEstoqueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PasswordResetTokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    matricula?: SortOrder
    senha?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    id?: SortOrder
    matricula?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    matricula?: SortOrder
    senha?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    matricula?: SortOrder
    senha?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    id?: SortOrder
    matricula?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type TransferenciaListRelationFilter = {
    every?: TransferenciaWhereInput
    some?: TransferenciaWhereInput
    none?: TransferenciaWhereInput
  }

  export type EstoqueItemListRelationFilter = {
    every?: EstoqueItemWhereInput
    some?: EstoqueItemWhereInput
    none?: EstoqueItemWhereInput
  }

  export type TransferenciaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EstoqueItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EquipamentoCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    quantidade?: SortOrder
    data?: SortOrder
  }

  export type EquipamentoAvgOrderByAggregateInput = {
    id?: SortOrder
    quantidade?: SortOrder
  }

  export type EquipamentoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    quantidade?: SortOrder
    data?: SortOrder
  }

  export type EquipamentoMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    quantidade?: SortOrder
    data?: SortOrder
  }

  export type EquipamentoSumOrderByAggregateInput = {
    id?: SortOrder
    quantidade?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UsuarioScalarRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type PasswordResetTokenCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    tokenHash?: SortOrder
    expiresAt?: SortOrder
    usedAt?: SortOrder
    createdAt?: SortOrder
  }

  export type PasswordResetTokenAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type PasswordResetTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    tokenHash?: SortOrder
    expiresAt?: SortOrder
    usedAt?: SortOrder
    createdAt?: SortOrder
  }

  export type PasswordResetTokenMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    tokenHash?: SortOrder
    expiresAt?: SortOrder
    usedAt?: SortOrder
    createdAt?: SortOrder
  }

  export type PasswordResetTokenSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EstoqueCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type EstoqueAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EstoqueMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type EstoqueMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type EstoqueSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EstoqueScalarRelationFilter = {
    is?: EstoqueWhereInput
    isNot?: EstoqueWhereInput
  }

  export type UsuarioEstoqueUsuarioIdEstoqueIdCompoundUniqueInput = {
    usuarioId: number
    estoqueId: number
  }

  export type UsuarioEstoqueCountOrderByAggregateInput = {
    usuarioId?: SortOrder
    estoqueId?: SortOrder
  }

  export type UsuarioEstoqueAvgOrderByAggregateInput = {
    usuarioId?: SortOrder
    estoqueId?: SortOrder
  }

  export type UsuarioEstoqueMaxOrderByAggregateInput = {
    usuarioId?: SortOrder
    estoqueId?: SortOrder
  }

  export type UsuarioEstoqueMinOrderByAggregateInput = {
    usuarioId?: SortOrder
    estoqueId?: SortOrder
  }

  export type UsuarioEstoqueSumOrderByAggregateInput = {
    usuarioId?: SortOrder
    estoqueId?: SortOrder
  }

  export type EquipamentoScalarRelationFilter = {
    is?: EquipamentoWhereInput
    isNot?: EquipamentoWhereInput
  }

  export type TransferenciaCountOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    estoqueOrigemId?: SortOrder
    estoqueDestinoId?: SortOrder
    quantidade?: SortOrder
    dataTransferencia?: SortOrder
  }

  export type TransferenciaAvgOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    estoqueOrigemId?: SortOrder
    estoqueDestinoId?: SortOrder
    quantidade?: SortOrder
  }

  export type TransferenciaMaxOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    estoqueOrigemId?: SortOrder
    estoqueDestinoId?: SortOrder
    quantidade?: SortOrder
    dataTransferencia?: SortOrder
  }

  export type TransferenciaMinOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    estoqueOrigemId?: SortOrder
    estoqueDestinoId?: SortOrder
    quantidade?: SortOrder
    dataTransferencia?: SortOrder
  }

  export type TransferenciaSumOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    estoqueOrigemId?: SortOrder
    estoqueDestinoId?: SortOrder
    quantidade?: SortOrder
  }

  export type EstoqueItemItemId_estoqueIdCompoundUniqueInput = {
    itemId: number
    estoqueId: number
  }

  export type EstoqueItemCountOrderByAggregateInput = {
    id?: SortOrder
    estoqueId?: SortOrder
    itemId?: SortOrder
    quantidade?: SortOrder
  }

  export type EstoqueItemAvgOrderByAggregateInput = {
    id?: SortOrder
    estoqueId?: SortOrder
    itemId?: SortOrder
    quantidade?: SortOrder
  }

  export type EstoqueItemMaxOrderByAggregateInput = {
    id?: SortOrder
    estoqueId?: SortOrder
    itemId?: SortOrder
    quantidade?: SortOrder
  }

  export type EstoqueItemMinOrderByAggregateInput = {
    id?: SortOrder
    estoqueId?: SortOrder
    itemId?: SortOrder
    quantidade?: SortOrder
  }

  export type EstoqueItemSumOrderByAggregateInput = {
    id?: SortOrder
    estoqueId?: SortOrder
    itemId?: SortOrder
    quantidade?: SortOrder
  }

  export type PermissaoOnRouteListRelationFilter = {
    every?: PermissaoOnRouteWhereInput
    some?: PermissaoOnRouteWhereInput
    none?: PermissaoOnRouteWhereInput
  }

  export type PermissaoOnRouteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PermissaoCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type PermissaoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PermissaoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type PermissaoMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type PermissaoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PermissaoScalarRelationFilter = {
    is?: PermissaoWhereInput
    isNot?: PermissaoWhereInput
  }

  export type UsuarioPermissaoUsuarioIdPermissaoIdCompoundUniqueInput = {
    usuarioId: number
    permissaoId: number
  }

  export type UsuarioPermissaoCountOrderByAggregateInput = {
    usuarioId?: SortOrder
    permissaoId?: SortOrder
  }

  export type UsuarioPermissaoAvgOrderByAggregateInput = {
    usuarioId?: SortOrder
    permissaoId?: SortOrder
  }

  export type UsuarioPermissaoMaxOrderByAggregateInput = {
    usuarioId?: SortOrder
    permissaoId?: SortOrder
  }

  export type UsuarioPermissaoMinOrderByAggregateInput = {
    usuarioId?: SortOrder
    permissaoId?: SortOrder
  }

  export type UsuarioPermissaoSumOrderByAggregateInput = {
    usuarioId?: SortOrder
    permissaoId?: SortOrder
  }

  export type RouteCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    path?: SortOrder
    createdAt?: SortOrder
  }

  export type RouteAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RouteMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    path?: SortOrder
    createdAt?: SortOrder
  }

  export type RouteMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    path?: SortOrder
    createdAt?: SortOrder
  }

  export type RouteSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RouteScalarRelationFilter = {
    is?: RouteWhereInput
    isNot?: RouteWhereInput
  }

  export type PermissaoOnRouteCountOrderByAggregateInput = {
    id?: SortOrder
    permissaoId?: SortOrder
    routeId?: SortOrder
  }

  export type PermissaoOnRouteAvgOrderByAggregateInput = {
    id?: SortOrder
    permissaoId?: SortOrder
    routeId?: SortOrder
  }

  export type PermissaoOnRouteMaxOrderByAggregateInput = {
    id?: SortOrder
    permissaoId?: SortOrder
    routeId?: SortOrder
  }

  export type PermissaoOnRouteMinOrderByAggregateInput = {
    id?: SortOrder
    permissaoId?: SortOrder
    routeId?: SortOrder
  }

  export type PermissaoOnRouteSumOrderByAggregateInput = {
    id?: SortOrder
    permissaoId?: SortOrder
    routeId?: SortOrder
  }

  export type UsuarioPermissaoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<UsuarioPermissaoCreateWithoutUsuarioInput, UsuarioPermissaoUncheckedCreateWithoutUsuarioInput> | UsuarioPermissaoCreateWithoutUsuarioInput[] | UsuarioPermissaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UsuarioPermissaoCreateOrConnectWithoutUsuarioInput | UsuarioPermissaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: UsuarioPermissaoCreateManyUsuarioInputEnvelope
    connect?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
  }

  export type UsuarioEstoqueCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<UsuarioEstoqueCreateWithoutUsuarioInput, UsuarioEstoqueUncheckedCreateWithoutUsuarioInput> | UsuarioEstoqueCreateWithoutUsuarioInput[] | UsuarioEstoqueUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UsuarioEstoqueCreateOrConnectWithoutUsuarioInput | UsuarioEstoqueCreateOrConnectWithoutUsuarioInput[]
    createMany?: UsuarioEstoqueCreateManyUsuarioInputEnvelope
    connect?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
  }

  export type PasswordResetTokenCreateNestedManyWithoutUserInput = {
    create?: XOR<PasswordResetTokenCreateWithoutUserInput, PasswordResetTokenUncheckedCreateWithoutUserInput> | PasswordResetTokenCreateWithoutUserInput[] | PasswordResetTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PasswordResetTokenCreateOrConnectWithoutUserInput | PasswordResetTokenCreateOrConnectWithoutUserInput[]
    createMany?: PasswordResetTokenCreateManyUserInputEnvelope
    connect?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
  }

  export type UsuarioPermissaoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<UsuarioPermissaoCreateWithoutUsuarioInput, UsuarioPermissaoUncheckedCreateWithoutUsuarioInput> | UsuarioPermissaoCreateWithoutUsuarioInput[] | UsuarioPermissaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UsuarioPermissaoCreateOrConnectWithoutUsuarioInput | UsuarioPermissaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: UsuarioPermissaoCreateManyUsuarioInputEnvelope
    connect?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
  }

  export type UsuarioEstoqueUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<UsuarioEstoqueCreateWithoutUsuarioInput, UsuarioEstoqueUncheckedCreateWithoutUsuarioInput> | UsuarioEstoqueCreateWithoutUsuarioInput[] | UsuarioEstoqueUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UsuarioEstoqueCreateOrConnectWithoutUsuarioInput | UsuarioEstoqueCreateOrConnectWithoutUsuarioInput[]
    createMany?: UsuarioEstoqueCreateManyUsuarioInputEnvelope
    connect?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
  }

  export type PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PasswordResetTokenCreateWithoutUserInput, PasswordResetTokenUncheckedCreateWithoutUserInput> | PasswordResetTokenCreateWithoutUserInput[] | PasswordResetTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PasswordResetTokenCreateOrConnectWithoutUserInput | PasswordResetTokenCreateOrConnectWithoutUserInput[]
    createMany?: PasswordResetTokenCreateManyUserInputEnvelope
    connect?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UsuarioPermissaoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<UsuarioPermissaoCreateWithoutUsuarioInput, UsuarioPermissaoUncheckedCreateWithoutUsuarioInput> | UsuarioPermissaoCreateWithoutUsuarioInput[] | UsuarioPermissaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UsuarioPermissaoCreateOrConnectWithoutUsuarioInput | UsuarioPermissaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: UsuarioPermissaoUpsertWithWhereUniqueWithoutUsuarioInput | UsuarioPermissaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: UsuarioPermissaoCreateManyUsuarioInputEnvelope
    set?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
    disconnect?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
    delete?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
    connect?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
    update?: UsuarioPermissaoUpdateWithWhereUniqueWithoutUsuarioInput | UsuarioPermissaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: UsuarioPermissaoUpdateManyWithWhereWithoutUsuarioInput | UsuarioPermissaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: UsuarioPermissaoScalarWhereInput | UsuarioPermissaoScalarWhereInput[]
  }

  export type UsuarioEstoqueUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<UsuarioEstoqueCreateWithoutUsuarioInput, UsuarioEstoqueUncheckedCreateWithoutUsuarioInput> | UsuarioEstoqueCreateWithoutUsuarioInput[] | UsuarioEstoqueUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UsuarioEstoqueCreateOrConnectWithoutUsuarioInput | UsuarioEstoqueCreateOrConnectWithoutUsuarioInput[]
    upsert?: UsuarioEstoqueUpsertWithWhereUniqueWithoutUsuarioInput | UsuarioEstoqueUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: UsuarioEstoqueCreateManyUsuarioInputEnvelope
    set?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
    disconnect?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
    delete?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
    connect?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
    update?: UsuarioEstoqueUpdateWithWhereUniqueWithoutUsuarioInput | UsuarioEstoqueUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: UsuarioEstoqueUpdateManyWithWhereWithoutUsuarioInput | UsuarioEstoqueUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: UsuarioEstoqueScalarWhereInput | UsuarioEstoqueScalarWhereInput[]
  }

  export type PasswordResetTokenUpdateManyWithoutUserNestedInput = {
    create?: XOR<PasswordResetTokenCreateWithoutUserInput, PasswordResetTokenUncheckedCreateWithoutUserInput> | PasswordResetTokenCreateWithoutUserInput[] | PasswordResetTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PasswordResetTokenCreateOrConnectWithoutUserInput | PasswordResetTokenCreateOrConnectWithoutUserInput[]
    upsert?: PasswordResetTokenUpsertWithWhereUniqueWithoutUserInput | PasswordResetTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PasswordResetTokenCreateManyUserInputEnvelope
    set?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
    disconnect?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
    delete?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
    connect?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
    update?: PasswordResetTokenUpdateWithWhereUniqueWithoutUserInput | PasswordResetTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PasswordResetTokenUpdateManyWithWhereWithoutUserInput | PasswordResetTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PasswordResetTokenScalarWhereInput | PasswordResetTokenScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UsuarioPermissaoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<UsuarioPermissaoCreateWithoutUsuarioInput, UsuarioPermissaoUncheckedCreateWithoutUsuarioInput> | UsuarioPermissaoCreateWithoutUsuarioInput[] | UsuarioPermissaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UsuarioPermissaoCreateOrConnectWithoutUsuarioInput | UsuarioPermissaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: UsuarioPermissaoUpsertWithWhereUniqueWithoutUsuarioInput | UsuarioPermissaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: UsuarioPermissaoCreateManyUsuarioInputEnvelope
    set?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
    disconnect?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
    delete?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
    connect?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
    update?: UsuarioPermissaoUpdateWithWhereUniqueWithoutUsuarioInput | UsuarioPermissaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: UsuarioPermissaoUpdateManyWithWhereWithoutUsuarioInput | UsuarioPermissaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: UsuarioPermissaoScalarWhereInput | UsuarioPermissaoScalarWhereInput[]
  }

  export type UsuarioEstoqueUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<UsuarioEstoqueCreateWithoutUsuarioInput, UsuarioEstoqueUncheckedCreateWithoutUsuarioInput> | UsuarioEstoqueCreateWithoutUsuarioInput[] | UsuarioEstoqueUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UsuarioEstoqueCreateOrConnectWithoutUsuarioInput | UsuarioEstoqueCreateOrConnectWithoutUsuarioInput[]
    upsert?: UsuarioEstoqueUpsertWithWhereUniqueWithoutUsuarioInput | UsuarioEstoqueUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: UsuarioEstoqueCreateManyUsuarioInputEnvelope
    set?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
    disconnect?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
    delete?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
    connect?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
    update?: UsuarioEstoqueUpdateWithWhereUniqueWithoutUsuarioInput | UsuarioEstoqueUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: UsuarioEstoqueUpdateManyWithWhereWithoutUsuarioInput | UsuarioEstoqueUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: UsuarioEstoqueScalarWhereInput | UsuarioEstoqueScalarWhereInput[]
  }

  export type PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PasswordResetTokenCreateWithoutUserInput, PasswordResetTokenUncheckedCreateWithoutUserInput> | PasswordResetTokenCreateWithoutUserInput[] | PasswordResetTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PasswordResetTokenCreateOrConnectWithoutUserInput | PasswordResetTokenCreateOrConnectWithoutUserInput[]
    upsert?: PasswordResetTokenUpsertWithWhereUniqueWithoutUserInput | PasswordResetTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PasswordResetTokenCreateManyUserInputEnvelope
    set?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
    disconnect?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
    delete?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
    connect?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
    update?: PasswordResetTokenUpdateWithWhereUniqueWithoutUserInput | PasswordResetTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PasswordResetTokenUpdateManyWithWhereWithoutUserInput | PasswordResetTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PasswordResetTokenScalarWhereInput | PasswordResetTokenScalarWhereInput[]
  }

  export type TransferenciaCreateNestedManyWithoutItemInput = {
    create?: XOR<TransferenciaCreateWithoutItemInput, TransferenciaUncheckedCreateWithoutItemInput> | TransferenciaCreateWithoutItemInput[] | TransferenciaUncheckedCreateWithoutItemInput[]
    connectOrCreate?: TransferenciaCreateOrConnectWithoutItemInput | TransferenciaCreateOrConnectWithoutItemInput[]
    createMany?: TransferenciaCreateManyItemInputEnvelope
    connect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
  }

  export type EstoqueItemCreateNestedManyWithoutItemInput = {
    create?: XOR<EstoqueItemCreateWithoutItemInput, EstoqueItemUncheckedCreateWithoutItemInput> | EstoqueItemCreateWithoutItemInput[] | EstoqueItemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: EstoqueItemCreateOrConnectWithoutItemInput | EstoqueItemCreateOrConnectWithoutItemInput[]
    createMany?: EstoqueItemCreateManyItemInputEnvelope
    connect?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
  }

  export type TransferenciaUncheckedCreateNestedManyWithoutItemInput = {
    create?: XOR<TransferenciaCreateWithoutItemInput, TransferenciaUncheckedCreateWithoutItemInput> | TransferenciaCreateWithoutItemInput[] | TransferenciaUncheckedCreateWithoutItemInput[]
    connectOrCreate?: TransferenciaCreateOrConnectWithoutItemInput | TransferenciaCreateOrConnectWithoutItemInput[]
    createMany?: TransferenciaCreateManyItemInputEnvelope
    connect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
  }

  export type EstoqueItemUncheckedCreateNestedManyWithoutItemInput = {
    create?: XOR<EstoqueItemCreateWithoutItemInput, EstoqueItemUncheckedCreateWithoutItemInput> | EstoqueItemCreateWithoutItemInput[] | EstoqueItemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: EstoqueItemCreateOrConnectWithoutItemInput | EstoqueItemCreateOrConnectWithoutItemInput[]
    createMany?: EstoqueItemCreateManyItemInputEnvelope
    connect?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type TransferenciaUpdateManyWithoutItemNestedInput = {
    create?: XOR<TransferenciaCreateWithoutItemInput, TransferenciaUncheckedCreateWithoutItemInput> | TransferenciaCreateWithoutItemInput[] | TransferenciaUncheckedCreateWithoutItemInput[]
    connectOrCreate?: TransferenciaCreateOrConnectWithoutItemInput | TransferenciaCreateOrConnectWithoutItemInput[]
    upsert?: TransferenciaUpsertWithWhereUniqueWithoutItemInput | TransferenciaUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: TransferenciaCreateManyItemInputEnvelope
    set?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    disconnect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    delete?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    connect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    update?: TransferenciaUpdateWithWhereUniqueWithoutItemInput | TransferenciaUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: TransferenciaUpdateManyWithWhereWithoutItemInput | TransferenciaUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: TransferenciaScalarWhereInput | TransferenciaScalarWhereInput[]
  }

  export type EstoqueItemUpdateManyWithoutItemNestedInput = {
    create?: XOR<EstoqueItemCreateWithoutItemInput, EstoqueItemUncheckedCreateWithoutItemInput> | EstoqueItemCreateWithoutItemInput[] | EstoqueItemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: EstoqueItemCreateOrConnectWithoutItemInput | EstoqueItemCreateOrConnectWithoutItemInput[]
    upsert?: EstoqueItemUpsertWithWhereUniqueWithoutItemInput | EstoqueItemUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: EstoqueItemCreateManyItemInputEnvelope
    set?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
    disconnect?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
    delete?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
    connect?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
    update?: EstoqueItemUpdateWithWhereUniqueWithoutItemInput | EstoqueItemUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: EstoqueItemUpdateManyWithWhereWithoutItemInput | EstoqueItemUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: EstoqueItemScalarWhereInput | EstoqueItemScalarWhereInput[]
  }

  export type TransferenciaUncheckedUpdateManyWithoutItemNestedInput = {
    create?: XOR<TransferenciaCreateWithoutItemInput, TransferenciaUncheckedCreateWithoutItemInput> | TransferenciaCreateWithoutItemInput[] | TransferenciaUncheckedCreateWithoutItemInput[]
    connectOrCreate?: TransferenciaCreateOrConnectWithoutItemInput | TransferenciaCreateOrConnectWithoutItemInput[]
    upsert?: TransferenciaUpsertWithWhereUniqueWithoutItemInput | TransferenciaUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: TransferenciaCreateManyItemInputEnvelope
    set?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    disconnect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    delete?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    connect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    update?: TransferenciaUpdateWithWhereUniqueWithoutItemInput | TransferenciaUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: TransferenciaUpdateManyWithWhereWithoutItemInput | TransferenciaUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: TransferenciaScalarWhereInput | TransferenciaScalarWhereInput[]
  }

  export type EstoqueItemUncheckedUpdateManyWithoutItemNestedInput = {
    create?: XOR<EstoqueItemCreateWithoutItemInput, EstoqueItemUncheckedCreateWithoutItemInput> | EstoqueItemCreateWithoutItemInput[] | EstoqueItemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: EstoqueItemCreateOrConnectWithoutItemInput | EstoqueItemCreateOrConnectWithoutItemInput[]
    upsert?: EstoqueItemUpsertWithWhereUniqueWithoutItemInput | EstoqueItemUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: EstoqueItemCreateManyItemInputEnvelope
    set?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
    disconnect?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
    delete?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
    connect?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
    update?: EstoqueItemUpdateWithWhereUniqueWithoutItemInput | EstoqueItemUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: EstoqueItemUpdateManyWithWhereWithoutItemInput | EstoqueItemUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: EstoqueItemScalarWhereInput | EstoqueItemScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutPasswordResetTokenInput = {
    create?: XOR<UsuarioCreateWithoutPasswordResetTokenInput, UsuarioUncheckedCreateWithoutPasswordResetTokenInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPasswordResetTokenInput
    connect?: UsuarioWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UsuarioUpdateOneRequiredWithoutPasswordResetTokenNestedInput = {
    create?: XOR<UsuarioCreateWithoutPasswordResetTokenInput, UsuarioUncheckedCreateWithoutPasswordResetTokenInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPasswordResetTokenInput
    upsert?: UsuarioUpsertWithoutPasswordResetTokenInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutPasswordResetTokenInput, UsuarioUpdateWithoutPasswordResetTokenInput>, UsuarioUncheckedUpdateWithoutPasswordResetTokenInput>
  }

  export type TransferenciaCreateNestedManyWithoutDestinoInput = {
    create?: XOR<TransferenciaCreateWithoutDestinoInput, TransferenciaUncheckedCreateWithoutDestinoInput> | TransferenciaCreateWithoutDestinoInput[] | TransferenciaUncheckedCreateWithoutDestinoInput[]
    connectOrCreate?: TransferenciaCreateOrConnectWithoutDestinoInput | TransferenciaCreateOrConnectWithoutDestinoInput[]
    createMany?: TransferenciaCreateManyDestinoInputEnvelope
    connect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
  }

  export type TransferenciaCreateNestedManyWithoutOrigemInput = {
    create?: XOR<TransferenciaCreateWithoutOrigemInput, TransferenciaUncheckedCreateWithoutOrigemInput> | TransferenciaCreateWithoutOrigemInput[] | TransferenciaUncheckedCreateWithoutOrigemInput[]
    connectOrCreate?: TransferenciaCreateOrConnectWithoutOrigemInput | TransferenciaCreateOrConnectWithoutOrigemInput[]
    createMany?: TransferenciaCreateManyOrigemInputEnvelope
    connect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
  }

  export type EstoqueItemCreateNestedManyWithoutEstoqueInput = {
    create?: XOR<EstoqueItemCreateWithoutEstoqueInput, EstoqueItemUncheckedCreateWithoutEstoqueInput> | EstoqueItemCreateWithoutEstoqueInput[] | EstoqueItemUncheckedCreateWithoutEstoqueInput[]
    connectOrCreate?: EstoqueItemCreateOrConnectWithoutEstoqueInput | EstoqueItemCreateOrConnectWithoutEstoqueInput[]
    createMany?: EstoqueItemCreateManyEstoqueInputEnvelope
    connect?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
  }

  export type UsuarioEstoqueCreateNestedManyWithoutEstoqueInput = {
    create?: XOR<UsuarioEstoqueCreateWithoutEstoqueInput, UsuarioEstoqueUncheckedCreateWithoutEstoqueInput> | UsuarioEstoqueCreateWithoutEstoqueInput[] | UsuarioEstoqueUncheckedCreateWithoutEstoqueInput[]
    connectOrCreate?: UsuarioEstoqueCreateOrConnectWithoutEstoqueInput | UsuarioEstoqueCreateOrConnectWithoutEstoqueInput[]
    createMany?: UsuarioEstoqueCreateManyEstoqueInputEnvelope
    connect?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
  }

  export type TransferenciaUncheckedCreateNestedManyWithoutDestinoInput = {
    create?: XOR<TransferenciaCreateWithoutDestinoInput, TransferenciaUncheckedCreateWithoutDestinoInput> | TransferenciaCreateWithoutDestinoInput[] | TransferenciaUncheckedCreateWithoutDestinoInput[]
    connectOrCreate?: TransferenciaCreateOrConnectWithoutDestinoInput | TransferenciaCreateOrConnectWithoutDestinoInput[]
    createMany?: TransferenciaCreateManyDestinoInputEnvelope
    connect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
  }

  export type TransferenciaUncheckedCreateNestedManyWithoutOrigemInput = {
    create?: XOR<TransferenciaCreateWithoutOrigemInput, TransferenciaUncheckedCreateWithoutOrigemInput> | TransferenciaCreateWithoutOrigemInput[] | TransferenciaUncheckedCreateWithoutOrigemInput[]
    connectOrCreate?: TransferenciaCreateOrConnectWithoutOrigemInput | TransferenciaCreateOrConnectWithoutOrigemInput[]
    createMany?: TransferenciaCreateManyOrigemInputEnvelope
    connect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
  }

  export type EstoqueItemUncheckedCreateNestedManyWithoutEstoqueInput = {
    create?: XOR<EstoqueItemCreateWithoutEstoqueInput, EstoqueItemUncheckedCreateWithoutEstoqueInput> | EstoqueItemCreateWithoutEstoqueInput[] | EstoqueItemUncheckedCreateWithoutEstoqueInput[]
    connectOrCreate?: EstoqueItemCreateOrConnectWithoutEstoqueInput | EstoqueItemCreateOrConnectWithoutEstoqueInput[]
    createMany?: EstoqueItemCreateManyEstoqueInputEnvelope
    connect?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
  }

  export type UsuarioEstoqueUncheckedCreateNestedManyWithoutEstoqueInput = {
    create?: XOR<UsuarioEstoqueCreateWithoutEstoqueInput, UsuarioEstoqueUncheckedCreateWithoutEstoqueInput> | UsuarioEstoqueCreateWithoutEstoqueInput[] | UsuarioEstoqueUncheckedCreateWithoutEstoqueInput[]
    connectOrCreate?: UsuarioEstoqueCreateOrConnectWithoutEstoqueInput | UsuarioEstoqueCreateOrConnectWithoutEstoqueInput[]
    createMany?: UsuarioEstoqueCreateManyEstoqueInputEnvelope
    connect?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
  }

  export type TransferenciaUpdateManyWithoutDestinoNestedInput = {
    create?: XOR<TransferenciaCreateWithoutDestinoInput, TransferenciaUncheckedCreateWithoutDestinoInput> | TransferenciaCreateWithoutDestinoInput[] | TransferenciaUncheckedCreateWithoutDestinoInput[]
    connectOrCreate?: TransferenciaCreateOrConnectWithoutDestinoInput | TransferenciaCreateOrConnectWithoutDestinoInput[]
    upsert?: TransferenciaUpsertWithWhereUniqueWithoutDestinoInput | TransferenciaUpsertWithWhereUniqueWithoutDestinoInput[]
    createMany?: TransferenciaCreateManyDestinoInputEnvelope
    set?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    disconnect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    delete?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    connect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    update?: TransferenciaUpdateWithWhereUniqueWithoutDestinoInput | TransferenciaUpdateWithWhereUniqueWithoutDestinoInput[]
    updateMany?: TransferenciaUpdateManyWithWhereWithoutDestinoInput | TransferenciaUpdateManyWithWhereWithoutDestinoInput[]
    deleteMany?: TransferenciaScalarWhereInput | TransferenciaScalarWhereInput[]
  }

  export type TransferenciaUpdateManyWithoutOrigemNestedInput = {
    create?: XOR<TransferenciaCreateWithoutOrigemInput, TransferenciaUncheckedCreateWithoutOrigemInput> | TransferenciaCreateWithoutOrigemInput[] | TransferenciaUncheckedCreateWithoutOrigemInput[]
    connectOrCreate?: TransferenciaCreateOrConnectWithoutOrigemInput | TransferenciaCreateOrConnectWithoutOrigemInput[]
    upsert?: TransferenciaUpsertWithWhereUniqueWithoutOrigemInput | TransferenciaUpsertWithWhereUniqueWithoutOrigemInput[]
    createMany?: TransferenciaCreateManyOrigemInputEnvelope
    set?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    disconnect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    delete?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    connect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    update?: TransferenciaUpdateWithWhereUniqueWithoutOrigemInput | TransferenciaUpdateWithWhereUniqueWithoutOrigemInput[]
    updateMany?: TransferenciaUpdateManyWithWhereWithoutOrigemInput | TransferenciaUpdateManyWithWhereWithoutOrigemInput[]
    deleteMany?: TransferenciaScalarWhereInput | TransferenciaScalarWhereInput[]
  }

  export type EstoqueItemUpdateManyWithoutEstoqueNestedInput = {
    create?: XOR<EstoqueItemCreateWithoutEstoqueInput, EstoqueItemUncheckedCreateWithoutEstoqueInput> | EstoqueItemCreateWithoutEstoqueInput[] | EstoqueItemUncheckedCreateWithoutEstoqueInput[]
    connectOrCreate?: EstoqueItemCreateOrConnectWithoutEstoqueInput | EstoqueItemCreateOrConnectWithoutEstoqueInput[]
    upsert?: EstoqueItemUpsertWithWhereUniqueWithoutEstoqueInput | EstoqueItemUpsertWithWhereUniqueWithoutEstoqueInput[]
    createMany?: EstoqueItemCreateManyEstoqueInputEnvelope
    set?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
    disconnect?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
    delete?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
    connect?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
    update?: EstoqueItemUpdateWithWhereUniqueWithoutEstoqueInput | EstoqueItemUpdateWithWhereUniqueWithoutEstoqueInput[]
    updateMany?: EstoqueItemUpdateManyWithWhereWithoutEstoqueInput | EstoqueItemUpdateManyWithWhereWithoutEstoqueInput[]
    deleteMany?: EstoqueItemScalarWhereInput | EstoqueItemScalarWhereInput[]
  }

  export type UsuarioEstoqueUpdateManyWithoutEstoqueNestedInput = {
    create?: XOR<UsuarioEstoqueCreateWithoutEstoqueInput, UsuarioEstoqueUncheckedCreateWithoutEstoqueInput> | UsuarioEstoqueCreateWithoutEstoqueInput[] | UsuarioEstoqueUncheckedCreateWithoutEstoqueInput[]
    connectOrCreate?: UsuarioEstoqueCreateOrConnectWithoutEstoqueInput | UsuarioEstoqueCreateOrConnectWithoutEstoqueInput[]
    upsert?: UsuarioEstoqueUpsertWithWhereUniqueWithoutEstoqueInput | UsuarioEstoqueUpsertWithWhereUniqueWithoutEstoqueInput[]
    createMany?: UsuarioEstoqueCreateManyEstoqueInputEnvelope
    set?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
    disconnect?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
    delete?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
    connect?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
    update?: UsuarioEstoqueUpdateWithWhereUniqueWithoutEstoqueInput | UsuarioEstoqueUpdateWithWhereUniqueWithoutEstoqueInput[]
    updateMany?: UsuarioEstoqueUpdateManyWithWhereWithoutEstoqueInput | UsuarioEstoqueUpdateManyWithWhereWithoutEstoqueInput[]
    deleteMany?: UsuarioEstoqueScalarWhereInput | UsuarioEstoqueScalarWhereInput[]
  }

  export type TransferenciaUncheckedUpdateManyWithoutDestinoNestedInput = {
    create?: XOR<TransferenciaCreateWithoutDestinoInput, TransferenciaUncheckedCreateWithoutDestinoInput> | TransferenciaCreateWithoutDestinoInput[] | TransferenciaUncheckedCreateWithoutDestinoInput[]
    connectOrCreate?: TransferenciaCreateOrConnectWithoutDestinoInput | TransferenciaCreateOrConnectWithoutDestinoInput[]
    upsert?: TransferenciaUpsertWithWhereUniqueWithoutDestinoInput | TransferenciaUpsertWithWhereUniqueWithoutDestinoInput[]
    createMany?: TransferenciaCreateManyDestinoInputEnvelope
    set?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    disconnect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    delete?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    connect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    update?: TransferenciaUpdateWithWhereUniqueWithoutDestinoInput | TransferenciaUpdateWithWhereUniqueWithoutDestinoInput[]
    updateMany?: TransferenciaUpdateManyWithWhereWithoutDestinoInput | TransferenciaUpdateManyWithWhereWithoutDestinoInput[]
    deleteMany?: TransferenciaScalarWhereInput | TransferenciaScalarWhereInput[]
  }

  export type TransferenciaUncheckedUpdateManyWithoutOrigemNestedInput = {
    create?: XOR<TransferenciaCreateWithoutOrigemInput, TransferenciaUncheckedCreateWithoutOrigemInput> | TransferenciaCreateWithoutOrigemInput[] | TransferenciaUncheckedCreateWithoutOrigemInput[]
    connectOrCreate?: TransferenciaCreateOrConnectWithoutOrigemInput | TransferenciaCreateOrConnectWithoutOrigemInput[]
    upsert?: TransferenciaUpsertWithWhereUniqueWithoutOrigemInput | TransferenciaUpsertWithWhereUniqueWithoutOrigemInput[]
    createMany?: TransferenciaCreateManyOrigemInputEnvelope
    set?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    disconnect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    delete?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    connect?: TransferenciaWhereUniqueInput | TransferenciaWhereUniqueInput[]
    update?: TransferenciaUpdateWithWhereUniqueWithoutOrigemInput | TransferenciaUpdateWithWhereUniqueWithoutOrigemInput[]
    updateMany?: TransferenciaUpdateManyWithWhereWithoutOrigemInput | TransferenciaUpdateManyWithWhereWithoutOrigemInput[]
    deleteMany?: TransferenciaScalarWhereInput | TransferenciaScalarWhereInput[]
  }

  export type EstoqueItemUncheckedUpdateManyWithoutEstoqueNestedInput = {
    create?: XOR<EstoqueItemCreateWithoutEstoqueInput, EstoqueItemUncheckedCreateWithoutEstoqueInput> | EstoqueItemCreateWithoutEstoqueInput[] | EstoqueItemUncheckedCreateWithoutEstoqueInput[]
    connectOrCreate?: EstoqueItemCreateOrConnectWithoutEstoqueInput | EstoqueItemCreateOrConnectWithoutEstoqueInput[]
    upsert?: EstoqueItemUpsertWithWhereUniqueWithoutEstoqueInput | EstoqueItemUpsertWithWhereUniqueWithoutEstoqueInput[]
    createMany?: EstoqueItemCreateManyEstoqueInputEnvelope
    set?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
    disconnect?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
    delete?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
    connect?: EstoqueItemWhereUniqueInput | EstoqueItemWhereUniqueInput[]
    update?: EstoqueItemUpdateWithWhereUniqueWithoutEstoqueInput | EstoqueItemUpdateWithWhereUniqueWithoutEstoqueInput[]
    updateMany?: EstoqueItemUpdateManyWithWhereWithoutEstoqueInput | EstoqueItemUpdateManyWithWhereWithoutEstoqueInput[]
    deleteMany?: EstoqueItemScalarWhereInput | EstoqueItemScalarWhereInput[]
  }

  export type UsuarioEstoqueUncheckedUpdateManyWithoutEstoqueNestedInput = {
    create?: XOR<UsuarioEstoqueCreateWithoutEstoqueInput, UsuarioEstoqueUncheckedCreateWithoutEstoqueInput> | UsuarioEstoqueCreateWithoutEstoqueInput[] | UsuarioEstoqueUncheckedCreateWithoutEstoqueInput[]
    connectOrCreate?: UsuarioEstoqueCreateOrConnectWithoutEstoqueInput | UsuarioEstoqueCreateOrConnectWithoutEstoqueInput[]
    upsert?: UsuarioEstoqueUpsertWithWhereUniqueWithoutEstoqueInput | UsuarioEstoqueUpsertWithWhereUniqueWithoutEstoqueInput[]
    createMany?: UsuarioEstoqueCreateManyEstoqueInputEnvelope
    set?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
    disconnect?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
    delete?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
    connect?: UsuarioEstoqueWhereUniqueInput | UsuarioEstoqueWhereUniqueInput[]
    update?: UsuarioEstoqueUpdateWithWhereUniqueWithoutEstoqueInput | UsuarioEstoqueUpdateWithWhereUniqueWithoutEstoqueInput[]
    updateMany?: UsuarioEstoqueUpdateManyWithWhereWithoutEstoqueInput | UsuarioEstoqueUpdateManyWithWhereWithoutEstoqueInput[]
    deleteMany?: UsuarioEstoqueScalarWhereInput | UsuarioEstoqueScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutEstoquesInput = {
    create?: XOR<UsuarioCreateWithoutEstoquesInput, UsuarioUncheckedCreateWithoutEstoquesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEstoquesInput
    connect?: UsuarioWhereUniqueInput
  }

  export type EstoqueCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<EstoqueCreateWithoutUsuariosInput, EstoqueUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: EstoqueCreateOrConnectWithoutUsuariosInput
    connect?: EstoqueWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutEstoquesNestedInput = {
    create?: XOR<UsuarioCreateWithoutEstoquesInput, UsuarioUncheckedCreateWithoutEstoquesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEstoquesInput
    upsert?: UsuarioUpsertWithoutEstoquesInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutEstoquesInput, UsuarioUpdateWithoutEstoquesInput>, UsuarioUncheckedUpdateWithoutEstoquesInput>
  }

  export type EstoqueUpdateOneRequiredWithoutUsuariosNestedInput = {
    create?: XOR<EstoqueCreateWithoutUsuariosInput, EstoqueUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: EstoqueCreateOrConnectWithoutUsuariosInput
    upsert?: EstoqueUpsertWithoutUsuariosInput
    connect?: EstoqueWhereUniqueInput
    update?: XOR<XOR<EstoqueUpdateToOneWithWhereWithoutUsuariosInput, EstoqueUpdateWithoutUsuariosInput>, EstoqueUncheckedUpdateWithoutUsuariosInput>
  }

  export type EquipamentoCreateNestedOneWithoutTransferenciasInput = {
    create?: XOR<EquipamentoCreateWithoutTransferenciasInput, EquipamentoUncheckedCreateWithoutTransferenciasInput>
    connectOrCreate?: EquipamentoCreateOrConnectWithoutTransferenciasInput
    connect?: EquipamentoWhereUniqueInput
  }

  export type EstoqueCreateNestedOneWithoutTransferenciasOrigemInput = {
    create?: XOR<EstoqueCreateWithoutTransferenciasOrigemInput, EstoqueUncheckedCreateWithoutTransferenciasOrigemInput>
    connectOrCreate?: EstoqueCreateOrConnectWithoutTransferenciasOrigemInput
    connect?: EstoqueWhereUniqueInput
  }

  export type EstoqueCreateNestedOneWithoutTransferenciasDestinoInput = {
    create?: XOR<EstoqueCreateWithoutTransferenciasDestinoInput, EstoqueUncheckedCreateWithoutTransferenciasDestinoInput>
    connectOrCreate?: EstoqueCreateOrConnectWithoutTransferenciasDestinoInput
    connect?: EstoqueWhereUniqueInput
  }

  export type EquipamentoUpdateOneRequiredWithoutTransferenciasNestedInput = {
    create?: XOR<EquipamentoCreateWithoutTransferenciasInput, EquipamentoUncheckedCreateWithoutTransferenciasInput>
    connectOrCreate?: EquipamentoCreateOrConnectWithoutTransferenciasInput
    upsert?: EquipamentoUpsertWithoutTransferenciasInput
    connect?: EquipamentoWhereUniqueInput
    update?: XOR<XOR<EquipamentoUpdateToOneWithWhereWithoutTransferenciasInput, EquipamentoUpdateWithoutTransferenciasInput>, EquipamentoUncheckedUpdateWithoutTransferenciasInput>
  }

  export type EstoqueUpdateOneRequiredWithoutTransferenciasOrigemNestedInput = {
    create?: XOR<EstoqueCreateWithoutTransferenciasOrigemInput, EstoqueUncheckedCreateWithoutTransferenciasOrigemInput>
    connectOrCreate?: EstoqueCreateOrConnectWithoutTransferenciasOrigemInput
    upsert?: EstoqueUpsertWithoutTransferenciasOrigemInput
    connect?: EstoqueWhereUniqueInput
    update?: XOR<XOR<EstoqueUpdateToOneWithWhereWithoutTransferenciasOrigemInput, EstoqueUpdateWithoutTransferenciasOrigemInput>, EstoqueUncheckedUpdateWithoutTransferenciasOrigemInput>
  }

  export type EstoqueUpdateOneRequiredWithoutTransferenciasDestinoNestedInput = {
    create?: XOR<EstoqueCreateWithoutTransferenciasDestinoInput, EstoqueUncheckedCreateWithoutTransferenciasDestinoInput>
    connectOrCreate?: EstoqueCreateOrConnectWithoutTransferenciasDestinoInput
    upsert?: EstoqueUpsertWithoutTransferenciasDestinoInput
    connect?: EstoqueWhereUniqueInput
    update?: XOR<XOR<EstoqueUpdateToOneWithWhereWithoutTransferenciasDestinoInput, EstoqueUpdateWithoutTransferenciasDestinoInput>, EstoqueUncheckedUpdateWithoutTransferenciasDestinoInput>
  }

  export type EstoqueCreateNestedOneWithoutItensInput = {
    create?: XOR<EstoqueCreateWithoutItensInput, EstoqueUncheckedCreateWithoutItensInput>
    connectOrCreate?: EstoqueCreateOrConnectWithoutItensInput
    connect?: EstoqueWhereUniqueInput
  }

  export type EquipamentoCreateNestedOneWithoutEstoqueItensInput = {
    create?: XOR<EquipamentoCreateWithoutEstoqueItensInput, EquipamentoUncheckedCreateWithoutEstoqueItensInput>
    connectOrCreate?: EquipamentoCreateOrConnectWithoutEstoqueItensInput
    connect?: EquipamentoWhereUniqueInput
  }

  export type EstoqueUpdateOneRequiredWithoutItensNestedInput = {
    create?: XOR<EstoqueCreateWithoutItensInput, EstoqueUncheckedCreateWithoutItensInput>
    connectOrCreate?: EstoqueCreateOrConnectWithoutItensInput
    upsert?: EstoqueUpsertWithoutItensInput
    connect?: EstoqueWhereUniqueInput
    update?: XOR<XOR<EstoqueUpdateToOneWithWhereWithoutItensInput, EstoqueUpdateWithoutItensInput>, EstoqueUncheckedUpdateWithoutItensInput>
  }

  export type EquipamentoUpdateOneRequiredWithoutEstoqueItensNestedInput = {
    create?: XOR<EquipamentoCreateWithoutEstoqueItensInput, EquipamentoUncheckedCreateWithoutEstoqueItensInput>
    connectOrCreate?: EquipamentoCreateOrConnectWithoutEstoqueItensInput
    upsert?: EquipamentoUpsertWithoutEstoqueItensInput
    connect?: EquipamentoWhereUniqueInput
    update?: XOR<XOR<EquipamentoUpdateToOneWithWhereWithoutEstoqueItensInput, EquipamentoUpdateWithoutEstoqueItensInput>, EquipamentoUncheckedUpdateWithoutEstoqueItensInput>
  }

  export type UsuarioPermissaoCreateNestedManyWithoutPermissaoInput = {
    create?: XOR<UsuarioPermissaoCreateWithoutPermissaoInput, UsuarioPermissaoUncheckedCreateWithoutPermissaoInput> | UsuarioPermissaoCreateWithoutPermissaoInput[] | UsuarioPermissaoUncheckedCreateWithoutPermissaoInput[]
    connectOrCreate?: UsuarioPermissaoCreateOrConnectWithoutPermissaoInput | UsuarioPermissaoCreateOrConnectWithoutPermissaoInput[]
    createMany?: UsuarioPermissaoCreateManyPermissaoInputEnvelope
    connect?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
  }

  export type PermissaoOnRouteCreateNestedManyWithoutPermissaoInput = {
    create?: XOR<PermissaoOnRouteCreateWithoutPermissaoInput, PermissaoOnRouteUncheckedCreateWithoutPermissaoInput> | PermissaoOnRouteCreateWithoutPermissaoInput[] | PermissaoOnRouteUncheckedCreateWithoutPermissaoInput[]
    connectOrCreate?: PermissaoOnRouteCreateOrConnectWithoutPermissaoInput | PermissaoOnRouteCreateOrConnectWithoutPermissaoInput[]
    createMany?: PermissaoOnRouteCreateManyPermissaoInputEnvelope
    connect?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
  }

  export type UsuarioPermissaoUncheckedCreateNestedManyWithoutPermissaoInput = {
    create?: XOR<UsuarioPermissaoCreateWithoutPermissaoInput, UsuarioPermissaoUncheckedCreateWithoutPermissaoInput> | UsuarioPermissaoCreateWithoutPermissaoInput[] | UsuarioPermissaoUncheckedCreateWithoutPermissaoInput[]
    connectOrCreate?: UsuarioPermissaoCreateOrConnectWithoutPermissaoInput | UsuarioPermissaoCreateOrConnectWithoutPermissaoInput[]
    createMany?: UsuarioPermissaoCreateManyPermissaoInputEnvelope
    connect?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
  }

  export type PermissaoOnRouteUncheckedCreateNestedManyWithoutPermissaoInput = {
    create?: XOR<PermissaoOnRouteCreateWithoutPermissaoInput, PermissaoOnRouteUncheckedCreateWithoutPermissaoInput> | PermissaoOnRouteCreateWithoutPermissaoInput[] | PermissaoOnRouteUncheckedCreateWithoutPermissaoInput[]
    connectOrCreate?: PermissaoOnRouteCreateOrConnectWithoutPermissaoInput | PermissaoOnRouteCreateOrConnectWithoutPermissaoInput[]
    createMany?: PermissaoOnRouteCreateManyPermissaoInputEnvelope
    connect?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
  }

  export type UsuarioPermissaoUpdateManyWithoutPermissaoNestedInput = {
    create?: XOR<UsuarioPermissaoCreateWithoutPermissaoInput, UsuarioPermissaoUncheckedCreateWithoutPermissaoInput> | UsuarioPermissaoCreateWithoutPermissaoInput[] | UsuarioPermissaoUncheckedCreateWithoutPermissaoInput[]
    connectOrCreate?: UsuarioPermissaoCreateOrConnectWithoutPermissaoInput | UsuarioPermissaoCreateOrConnectWithoutPermissaoInput[]
    upsert?: UsuarioPermissaoUpsertWithWhereUniqueWithoutPermissaoInput | UsuarioPermissaoUpsertWithWhereUniqueWithoutPermissaoInput[]
    createMany?: UsuarioPermissaoCreateManyPermissaoInputEnvelope
    set?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
    disconnect?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
    delete?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
    connect?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
    update?: UsuarioPermissaoUpdateWithWhereUniqueWithoutPermissaoInput | UsuarioPermissaoUpdateWithWhereUniqueWithoutPermissaoInput[]
    updateMany?: UsuarioPermissaoUpdateManyWithWhereWithoutPermissaoInput | UsuarioPermissaoUpdateManyWithWhereWithoutPermissaoInput[]
    deleteMany?: UsuarioPermissaoScalarWhereInput | UsuarioPermissaoScalarWhereInput[]
  }

  export type PermissaoOnRouteUpdateManyWithoutPermissaoNestedInput = {
    create?: XOR<PermissaoOnRouteCreateWithoutPermissaoInput, PermissaoOnRouteUncheckedCreateWithoutPermissaoInput> | PermissaoOnRouteCreateWithoutPermissaoInput[] | PermissaoOnRouteUncheckedCreateWithoutPermissaoInput[]
    connectOrCreate?: PermissaoOnRouteCreateOrConnectWithoutPermissaoInput | PermissaoOnRouteCreateOrConnectWithoutPermissaoInput[]
    upsert?: PermissaoOnRouteUpsertWithWhereUniqueWithoutPermissaoInput | PermissaoOnRouteUpsertWithWhereUniqueWithoutPermissaoInput[]
    createMany?: PermissaoOnRouteCreateManyPermissaoInputEnvelope
    set?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
    disconnect?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
    delete?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
    connect?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
    update?: PermissaoOnRouteUpdateWithWhereUniqueWithoutPermissaoInput | PermissaoOnRouteUpdateWithWhereUniqueWithoutPermissaoInput[]
    updateMany?: PermissaoOnRouteUpdateManyWithWhereWithoutPermissaoInput | PermissaoOnRouteUpdateManyWithWhereWithoutPermissaoInput[]
    deleteMany?: PermissaoOnRouteScalarWhereInput | PermissaoOnRouteScalarWhereInput[]
  }

  export type UsuarioPermissaoUncheckedUpdateManyWithoutPermissaoNestedInput = {
    create?: XOR<UsuarioPermissaoCreateWithoutPermissaoInput, UsuarioPermissaoUncheckedCreateWithoutPermissaoInput> | UsuarioPermissaoCreateWithoutPermissaoInput[] | UsuarioPermissaoUncheckedCreateWithoutPermissaoInput[]
    connectOrCreate?: UsuarioPermissaoCreateOrConnectWithoutPermissaoInput | UsuarioPermissaoCreateOrConnectWithoutPermissaoInput[]
    upsert?: UsuarioPermissaoUpsertWithWhereUniqueWithoutPermissaoInput | UsuarioPermissaoUpsertWithWhereUniqueWithoutPermissaoInput[]
    createMany?: UsuarioPermissaoCreateManyPermissaoInputEnvelope
    set?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
    disconnect?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
    delete?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
    connect?: UsuarioPermissaoWhereUniqueInput | UsuarioPermissaoWhereUniqueInput[]
    update?: UsuarioPermissaoUpdateWithWhereUniqueWithoutPermissaoInput | UsuarioPermissaoUpdateWithWhereUniqueWithoutPermissaoInput[]
    updateMany?: UsuarioPermissaoUpdateManyWithWhereWithoutPermissaoInput | UsuarioPermissaoUpdateManyWithWhereWithoutPermissaoInput[]
    deleteMany?: UsuarioPermissaoScalarWhereInput | UsuarioPermissaoScalarWhereInput[]
  }

  export type PermissaoOnRouteUncheckedUpdateManyWithoutPermissaoNestedInput = {
    create?: XOR<PermissaoOnRouteCreateWithoutPermissaoInput, PermissaoOnRouteUncheckedCreateWithoutPermissaoInput> | PermissaoOnRouteCreateWithoutPermissaoInput[] | PermissaoOnRouteUncheckedCreateWithoutPermissaoInput[]
    connectOrCreate?: PermissaoOnRouteCreateOrConnectWithoutPermissaoInput | PermissaoOnRouteCreateOrConnectWithoutPermissaoInput[]
    upsert?: PermissaoOnRouteUpsertWithWhereUniqueWithoutPermissaoInput | PermissaoOnRouteUpsertWithWhereUniqueWithoutPermissaoInput[]
    createMany?: PermissaoOnRouteCreateManyPermissaoInputEnvelope
    set?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
    disconnect?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
    delete?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
    connect?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
    update?: PermissaoOnRouteUpdateWithWhereUniqueWithoutPermissaoInput | PermissaoOnRouteUpdateWithWhereUniqueWithoutPermissaoInput[]
    updateMany?: PermissaoOnRouteUpdateManyWithWhereWithoutPermissaoInput | PermissaoOnRouteUpdateManyWithWhereWithoutPermissaoInput[]
    deleteMany?: PermissaoOnRouteScalarWhereInput | PermissaoOnRouteScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutPermissoesInput = {
    create?: XOR<UsuarioCreateWithoutPermissoesInput, UsuarioUncheckedCreateWithoutPermissoesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPermissoesInput
    connect?: UsuarioWhereUniqueInput
  }

  export type PermissaoCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<PermissaoCreateWithoutUsuariosInput, PermissaoUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: PermissaoCreateOrConnectWithoutUsuariosInput
    connect?: PermissaoWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutPermissoesNestedInput = {
    create?: XOR<UsuarioCreateWithoutPermissoesInput, UsuarioUncheckedCreateWithoutPermissoesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPermissoesInput
    upsert?: UsuarioUpsertWithoutPermissoesInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutPermissoesInput, UsuarioUpdateWithoutPermissoesInput>, UsuarioUncheckedUpdateWithoutPermissoesInput>
  }

  export type PermissaoUpdateOneRequiredWithoutUsuariosNestedInput = {
    create?: XOR<PermissaoCreateWithoutUsuariosInput, PermissaoUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: PermissaoCreateOrConnectWithoutUsuariosInput
    upsert?: PermissaoUpsertWithoutUsuariosInput
    connect?: PermissaoWhereUniqueInput
    update?: XOR<XOR<PermissaoUpdateToOneWithWhereWithoutUsuariosInput, PermissaoUpdateWithoutUsuariosInput>, PermissaoUncheckedUpdateWithoutUsuariosInput>
  }

  export type PermissaoOnRouteCreateNestedManyWithoutRouteInput = {
    create?: XOR<PermissaoOnRouteCreateWithoutRouteInput, PermissaoOnRouteUncheckedCreateWithoutRouteInput> | PermissaoOnRouteCreateWithoutRouteInput[] | PermissaoOnRouteUncheckedCreateWithoutRouteInput[]
    connectOrCreate?: PermissaoOnRouteCreateOrConnectWithoutRouteInput | PermissaoOnRouteCreateOrConnectWithoutRouteInput[]
    createMany?: PermissaoOnRouteCreateManyRouteInputEnvelope
    connect?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
  }

  export type PermissaoOnRouteUncheckedCreateNestedManyWithoutRouteInput = {
    create?: XOR<PermissaoOnRouteCreateWithoutRouteInput, PermissaoOnRouteUncheckedCreateWithoutRouteInput> | PermissaoOnRouteCreateWithoutRouteInput[] | PermissaoOnRouteUncheckedCreateWithoutRouteInput[]
    connectOrCreate?: PermissaoOnRouteCreateOrConnectWithoutRouteInput | PermissaoOnRouteCreateOrConnectWithoutRouteInput[]
    createMany?: PermissaoOnRouteCreateManyRouteInputEnvelope
    connect?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
  }

  export type PermissaoOnRouteUpdateManyWithoutRouteNestedInput = {
    create?: XOR<PermissaoOnRouteCreateWithoutRouteInput, PermissaoOnRouteUncheckedCreateWithoutRouteInput> | PermissaoOnRouteCreateWithoutRouteInput[] | PermissaoOnRouteUncheckedCreateWithoutRouteInput[]
    connectOrCreate?: PermissaoOnRouteCreateOrConnectWithoutRouteInput | PermissaoOnRouteCreateOrConnectWithoutRouteInput[]
    upsert?: PermissaoOnRouteUpsertWithWhereUniqueWithoutRouteInput | PermissaoOnRouteUpsertWithWhereUniqueWithoutRouteInput[]
    createMany?: PermissaoOnRouteCreateManyRouteInputEnvelope
    set?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
    disconnect?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
    delete?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
    connect?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
    update?: PermissaoOnRouteUpdateWithWhereUniqueWithoutRouteInput | PermissaoOnRouteUpdateWithWhereUniqueWithoutRouteInput[]
    updateMany?: PermissaoOnRouteUpdateManyWithWhereWithoutRouteInput | PermissaoOnRouteUpdateManyWithWhereWithoutRouteInput[]
    deleteMany?: PermissaoOnRouteScalarWhereInput | PermissaoOnRouteScalarWhereInput[]
  }

  export type PermissaoOnRouteUncheckedUpdateManyWithoutRouteNestedInput = {
    create?: XOR<PermissaoOnRouteCreateWithoutRouteInput, PermissaoOnRouteUncheckedCreateWithoutRouteInput> | PermissaoOnRouteCreateWithoutRouteInput[] | PermissaoOnRouteUncheckedCreateWithoutRouteInput[]
    connectOrCreate?: PermissaoOnRouteCreateOrConnectWithoutRouteInput | PermissaoOnRouteCreateOrConnectWithoutRouteInput[]
    upsert?: PermissaoOnRouteUpsertWithWhereUniqueWithoutRouteInput | PermissaoOnRouteUpsertWithWhereUniqueWithoutRouteInput[]
    createMany?: PermissaoOnRouteCreateManyRouteInputEnvelope
    set?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
    disconnect?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
    delete?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
    connect?: PermissaoOnRouteWhereUniqueInput | PermissaoOnRouteWhereUniqueInput[]
    update?: PermissaoOnRouteUpdateWithWhereUniqueWithoutRouteInput | PermissaoOnRouteUpdateWithWhereUniqueWithoutRouteInput[]
    updateMany?: PermissaoOnRouteUpdateManyWithWhereWithoutRouteInput | PermissaoOnRouteUpdateManyWithWhereWithoutRouteInput[]
    deleteMany?: PermissaoOnRouteScalarWhereInput | PermissaoOnRouteScalarWhereInput[]
  }

  export type PermissaoCreateNestedOneWithoutRotasPermitidasInput = {
    create?: XOR<PermissaoCreateWithoutRotasPermitidasInput, PermissaoUncheckedCreateWithoutRotasPermitidasInput>
    connectOrCreate?: PermissaoCreateOrConnectWithoutRotasPermitidasInput
    connect?: PermissaoWhereUniqueInput
  }

  export type RouteCreateNestedOneWithoutPermissoesInput = {
    create?: XOR<RouteCreateWithoutPermissoesInput, RouteUncheckedCreateWithoutPermissoesInput>
    connectOrCreate?: RouteCreateOrConnectWithoutPermissoesInput
    connect?: RouteWhereUniqueInput
  }

  export type PermissaoUpdateOneRequiredWithoutRotasPermitidasNestedInput = {
    create?: XOR<PermissaoCreateWithoutRotasPermitidasInput, PermissaoUncheckedCreateWithoutRotasPermitidasInput>
    connectOrCreate?: PermissaoCreateOrConnectWithoutRotasPermitidasInput
    upsert?: PermissaoUpsertWithoutRotasPermitidasInput
    connect?: PermissaoWhereUniqueInput
    update?: XOR<XOR<PermissaoUpdateToOneWithWhereWithoutRotasPermitidasInput, PermissaoUpdateWithoutRotasPermitidasInput>, PermissaoUncheckedUpdateWithoutRotasPermitidasInput>
  }

  export type RouteUpdateOneRequiredWithoutPermissoesNestedInput = {
    create?: XOR<RouteCreateWithoutPermissoesInput, RouteUncheckedCreateWithoutPermissoesInput>
    connectOrCreate?: RouteCreateOrConnectWithoutPermissoesInput
    upsert?: RouteUpsertWithoutPermissoesInput
    connect?: RouteWhereUniqueInput
    update?: XOR<XOR<RouteUpdateToOneWithWhereWithoutPermissoesInput, RouteUpdateWithoutPermissoesInput>, RouteUncheckedUpdateWithoutPermissoesInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type UsuarioPermissaoCreateWithoutUsuarioInput = {
    permissao: PermissaoCreateNestedOneWithoutUsuariosInput
  }

  export type UsuarioPermissaoUncheckedCreateWithoutUsuarioInput = {
    permissaoId: number
  }

  export type UsuarioPermissaoCreateOrConnectWithoutUsuarioInput = {
    where: UsuarioPermissaoWhereUniqueInput
    create: XOR<UsuarioPermissaoCreateWithoutUsuarioInput, UsuarioPermissaoUncheckedCreateWithoutUsuarioInput>
  }

  export type UsuarioPermissaoCreateManyUsuarioInputEnvelope = {
    data: UsuarioPermissaoCreateManyUsuarioInput | UsuarioPermissaoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioEstoqueCreateWithoutUsuarioInput = {
    estoque: EstoqueCreateNestedOneWithoutUsuariosInput
  }

  export type UsuarioEstoqueUncheckedCreateWithoutUsuarioInput = {
    estoqueId: number
  }

  export type UsuarioEstoqueCreateOrConnectWithoutUsuarioInput = {
    where: UsuarioEstoqueWhereUniqueInput
    create: XOR<UsuarioEstoqueCreateWithoutUsuarioInput, UsuarioEstoqueUncheckedCreateWithoutUsuarioInput>
  }

  export type UsuarioEstoqueCreateManyUsuarioInputEnvelope = {
    data: UsuarioEstoqueCreateManyUsuarioInput | UsuarioEstoqueCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type PasswordResetTokenCreateWithoutUserInput = {
    tokenHash: string
    expiresAt: Date | string
    usedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type PasswordResetTokenUncheckedCreateWithoutUserInput = {
    id?: number
    tokenHash: string
    expiresAt: Date | string
    usedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type PasswordResetTokenCreateOrConnectWithoutUserInput = {
    where: PasswordResetTokenWhereUniqueInput
    create: XOR<PasswordResetTokenCreateWithoutUserInput, PasswordResetTokenUncheckedCreateWithoutUserInput>
  }

  export type PasswordResetTokenCreateManyUserInputEnvelope = {
    data: PasswordResetTokenCreateManyUserInput | PasswordResetTokenCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioPermissaoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: UsuarioPermissaoWhereUniqueInput
    update: XOR<UsuarioPermissaoUpdateWithoutUsuarioInput, UsuarioPermissaoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<UsuarioPermissaoCreateWithoutUsuarioInput, UsuarioPermissaoUncheckedCreateWithoutUsuarioInput>
  }

  export type UsuarioPermissaoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: UsuarioPermissaoWhereUniqueInput
    data: XOR<UsuarioPermissaoUpdateWithoutUsuarioInput, UsuarioPermissaoUncheckedUpdateWithoutUsuarioInput>
  }

  export type UsuarioPermissaoUpdateManyWithWhereWithoutUsuarioInput = {
    where: UsuarioPermissaoScalarWhereInput
    data: XOR<UsuarioPermissaoUpdateManyMutationInput, UsuarioPermissaoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type UsuarioPermissaoScalarWhereInput = {
    AND?: UsuarioPermissaoScalarWhereInput | UsuarioPermissaoScalarWhereInput[]
    OR?: UsuarioPermissaoScalarWhereInput[]
    NOT?: UsuarioPermissaoScalarWhereInput | UsuarioPermissaoScalarWhereInput[]
    usuarioId?: IntFilter<"UsuarioPermissao"> | number
    permissaoId?: IntFilter<"UsuarioPermissao"> | number
  }

  export type UsuarioEstoqueUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: UsuarioEstoqueWhereUniqueInput
    update: XOR<UsuarioEstoqueUpdateWithoutUsuarioInput, UsuarioEstoqueUncheckedUpdateWithoutUsuarioInput>
    create: XOR<UsuarioEstoqueCreateWithoutUsuarioInput, UsuarioEstoqueUncheckedCreateWithoutUsuarioInput>
  }

  export type UsuarioEstoqueUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: UsuarioEstoqueWhereUniqueInput
    data: XOR<UsuarioEstoqueUpdateWithoutUsuarioInput, UsuarioEstoqueUncheckedUpdateWithoutUsuarioInput>
  }

  export type UsuarioEstoqueUpdateManyWithWhereWithoutUsuarioInput = {
    where: UsuarioEstoqueScalarWhereInput
    data: XOR<UsuarioEstoqueUpdateManyMutationInput, UsuarioEstoqueUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type UsuarioEstoqueScalarWhereInput = {
    AND?: UsuarioEstoqueScalarWhereInput | UsuarioEstoqueScalarWhereInput[]
    OR?: UsuarioEstoqueScalarWhereInput[]
    NOT?: UsuarioEstoqueScalarWhereInput | UsuarioEstoqueScalarWhereInput[]
    usuarioId?: IntFilter<"UsuarioEstoque"> | number
    estoqueId?: IntFilter<"UsuarioEstoque"> | number
  }

  export type PasswordResetTokenUpsertWithWhereUniqueWithoutUserInput = {
    where: PasswordResetTokenWhereUniqueInput
    update: XOR<PasswordResetTokenUpdateWithoutUserInput, PasswordResetTokenUncheckedUpdateWithoutUserInput>
    create: XOR<PasswordResetTokenCreateWithoutUserInput, PasswordResetTokenUncheckedCreateWithoutUserInput>
  }

  export type PasswordResetTokenUpdateWithWhereUniqueWithoutUserInput = {
    where: PasswordResetTokenWhereUniqueInput
    data: XOR<PasswordResetTokenUpdateWithoutUserInput, PasswordResetTokenUncheckedUpdateWithoutUserInput>
  }

  export type PasswordResetTokenUpdateManyWithWhereWithoutUserInput = {
    where: PasswordResetTokenScalarWhereInput
    data: XOR<PasswordResetTokenUpdateManyMutationInput, PasswordResetTokenUncheckedUpdateManyWithoutUserInput>
  }

  export type PasswordResetTokenScalarWhereInput = {
    AND?: PasswordResetTokenScalarWhereInput | PasswordResetTokenScalarWhereInput[]
    OR?: PasswordResetTokenScalarWhereInput[]
    NOT?: PasswordResetTokenScalarWhereInput | PasswordResetTokenScalarWhereInput[]
    id?: IntFilter<"PasswordResetToken"> | number
    userId?: IntFilter<"PasswordResetToken"> | number
    tokenHash?: StringFilter<"PasswordResetToken"> | string
    expiresAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
    usedAt?: DateTimeNullableFilter<"PasswordResetToken"> | Date | string | null
    createdAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
  }

  export type TransferenciaCreateWithoutItemInput = {
    quantidade: number
    dataTransferencia?: Date | string | null
    origem: EstoqueCreateNestedOneWithoutTransferenciasOrigemInput
    destino: EstoqueCreateNestedOneWithoutTransferenciasDestinoInput
  }

  export type TransferenciaUncheckedCreateWithoutItemInput = {
    id?: number
    estoqueOrigemId: number
    estoqueDestinoId: number
    quantidade: number
    dataTransferencia?: Date | string | null
  }

  export type TransferenciaCreateOrConnectWithoutItemInput = {
    where: TransferenciaWhereUniqueInput
    create: XOR<TransferenciaCreateWithoutItemInput, TransferenciaUncheckedCreateWithoutItemInput>
  }

  export type TransferenciaCreateManyItemInputEnvelope = {
    data: TransferenciaCreateManyItemInput | TransferenciaCreateManyItemInput[]
    skipDuplicates?: boolean
  }

  export type EstoqueItemCreateWithoutItemInput = {
    quantidade: number
    estoque: EstoqueCreateNestedOneWithoutItensInput
  }

  export type EstoqueItemUncheckedCreateWithoutItemInput = {
    id?: number
    estoqueId: number
    quantidade: number
  }

  export type EstoqueItemCreateOrConnectWithoutItemInput = {
    where: EstoqueItemWhereUniqueInput
    create: XOR<EstoqueItemCreateWithoutItemInput, EstoqueItemUncheckedCreateWithoutItemInput>
  }

  export type EstoqueItemCreateManyItemInputEnvelope = {
    data: EstoqueItemCreateManyItemInput | EstoqueItemCreateManyItemInput[]
    skipDuplicates?: boolean
  }

  export type TransferenciaUpsertWithWhereUniqueWithoutItemInput = {
    where: TransferenciaWhereUniqueInput
    update: XOR<TransferenciaUpdateWithoutItemInput, TransferenciaUncheckedUpdateWithoutItemInput>
    create: XOR<TransferenciaCreateWithoutItemInput, TransferenciaUncheckedCreateWithoutItemInput>
  }

  export type TransferenciaUpdateWithWhereUniqueWithoutItemInput = {
    where: TransferenciaWhereUniqueInput
    data: XOR<TransferenciaUpdateWithoutItemInput, TransferenciaUncheckedUpdateWithoutItemInput>
  }

  export type TransferenciaUpdateManyWithWhereWithoutItemInput = {
    where: TransferenciaScalarWhereInput
    data: XOR<TransferenciaUpdateManyMutationInput, TransferenciaUncheckedUpdateManyWithoutItemInput>
  }

  export type TransferenciaScalarWhereInput = {
    AND?: TransferenciaScalarWhereInput | TransferenciaScalarWhereInput[]
    OR?: TransferenciaScalarWhereInput[]
    NOT?: TransferenciaScalarWhereInput | TransferenciaScalarWhereInput[]
    id?: IntFilter<"Transferencia"> | number
    itemId?: IntFilter<"Transferencia"> | number
    estoqueOrigemId?: IntFilter<"Transferencia"> | number
    estoqueDestinoId?: IntFilter<"Transferencia"> | number
    quantidade?: IntFilter<"Transferencia"> | number
    dataTransferencia?: DateTimeNullableFilter<"Transferencia"> | Date | string | null
  }

  export type EstoqueItemUpsertWithWhereUniqueWithoutItemInput = {
    where: EstoqueItemWhereUniqueInput
    update: XOR<EstoqueItemUpdateWithoutItemInput, EstoqueItemUncheckedUpdateWithoutItemInput>
    create: XOR<EstoqueItemCreateWithoutItemInput, EstoqueItemUncheckedCreateWithoutItemInput>
  }

  export type EstoqueItemUpdateWithWhereUniqueWithoutItemInput = {
    where: EstoqueItemWhereUniqueInput
    data: XOR<EstoqueItemUpdateWithoutItemInput, EstoqueItemUncheckedUpdateWithoutItemInput>
  }

  export type EstoqueItemUpdateManyWithWhereWithoutItemInput = {
    where: EstoqueItemScalarWhereInput
    data: XOR<EstoqueItemUpdateManyMutationInput, EstoqueItemUncheckedUpdateManyWithoutItemInput>
  }

  export type EstoqueItemScalarWhereInput = {
    AND?: EstoqueItemScalarWhereInput | EstoqueItemScalarWhereInput[]
    OR?: EstoqueItemScalarWhereInput[]
    NOT?: EstoqueItemScalarWhereInput | EstoqueItemScalarWhereInput[]
    id?: IntFilter<"EstoqueItem"> | number
    estoqueId?: IntFilter<"EstoqueItem"> | number
    itemId?: IntFilter<"EstoqueItem"> | number
    quantidade?: IntFilter<"EstoqueItem"> | number
  }

  export type UsuarioCreateWithoutPasswordResetTokenInput = {
    nome?: string | null
    email: string
    matricula?: number | null
    senha?: string | null
    permissoes?: UsuarioPermissaoCreateNestedManyWithoutUsuarioInput
    estoques?: UsuarioEstoqueCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutPasswordResetTokenInput = {
    id?: number
    nome?: string | null
    email: string
    matricula?: number | null
    senha?: string | null
    permissoes?: UsuarioPermissaoUncheckedCreateNestedManyWithoutUsuarioInput
    estoques?: UsuarioEstoqueUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutPasswordResetTokenInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutPasswordResetTokenInput, UsuarioUncheckedCreateWithoutPasswordResetTokenInput>
  }

  export type UsuarioUpsertWithoutPasswordResetTokenInput = {
    update: XOR<UsuarioUpdateWithoutPasswordResetTokenInput, UsuarioUncheckedUpdateWithoutPasswordResetTokenInput>
    create: XOR<UsuarioCreateWithoutPasswordResetTokenInput, UsuarioUncheckedCreateWithoutPasswordResetTokenInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutPasswordResetTokenInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutPasswordResetTokenInput, UsuarioUncheckedUpdateWithoutPasswordResetTokenInput>
  }

  export type UsuarioUpdateWithoutPasswordResetTokenInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    matricula?: NullableIntFieldUpdateOperationsInput | number | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    permissoes?: UsuarioPermissaoUpdateManyWithoutUsuarioNestedInput
    estoques?: UsuarioEstoqueUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutPasswordResetTokenInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    matricula?: NullableIntFieldUpdateOperationsInput | number | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    permissoes?: UsuarioPermissaoUncheckedUpdateManyWithoutUsuarioNestedInput
    estoques?: UsuarioEstoqueUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type TransferenciaCreateWithoutDestinoInput = {
    quantidade: number
    dataTransferencia?: Date | string | null
    item: EquipamentoCreateNestedOneWithoutTransferenciasInput
    origem: EstoqueCreateNestedOneWithoutTransferenciasOrigemInput
  }

  export type TransferenciaUncheckedCreateWithoutDestinoInput = {
    id?: number
    itemId: number
    estoqueOrigemId: number
    quantidade: number
    dataTransferencia?: Date | string | null
  }

  export type TransferenciaCreateOrConnectWithoutDestinoInput = {
    where: TransferenciaWhereUniqueInput
    create: XOR<TransferenciaCreateWithoutDestinoInput, TransferenciaUncheckedCreateWithoutDestinoInput>
  }

  export type TransferenciaCreateManyDestinoInputEnvelope = {
    data: TransferenciaCreateManyDestinoInput | TransferenciaCreateManyDestinoInput[]
    skipDuplicates?: boolean
  }

  export type TransferenciaCreateWithoutOrigemInput = {
    quantidade: number
    dataTransferencia?: Date | string | null
    item: EquipamentoCreateNestedOneWithoutTransferenciasInput
    destino: EstoqueCreateNestedOneWithoutTransferenciasDestinoInput
  }

  export type TransferenciaUncheckedCreateWithoutOrigemInput = {
    id?: number
    itemId: number
    estoqueDestinoId: number
    quantidade: number
    dataTransferencia?: Date | string | null
  }

  export type TransferenciaCreateOrConnectWithoutOrigemInput = {
    where: TransferenciaWhereUniqueInput
    create: XOR<TransferenciaCreateWithoutOrigemInput, TransferenciaUncheckedCreateWithoutOrigemInput>
  }

  export type TransferenciaCreateManyOrigemInputEnvelope = {
    data: TransferenciaCreateManyOrigemInput | TransferenciaCreateManyOrigemInput[]
    skipDuplicates?: boolean
  }

  export type EstoqueItemCreateWithoutEstoqueInput = {
    quantidade: number
    item: EquipamentoCreateNestedOneWithoutEstoqueItensInput
  }

  export type EstoqueItemUncheckedCreateWithoutEstoqueInput = {
    id?: number
    itemId: number
    quantidade: number
  }

  export type EstoqueItemCreateOrConnectWithoutEstoqueInput = {
    where: EstoqueItemWhereUniqueInput
    create: XOR<EstoqueItemCreateWithoutEstoqueInput, EstoqueItemUncheckedCreateWithoutEstoqueInput>
  }

  export type EstoqueItemCreateManyEstoqueInputEnvelope = {
    data: EstoqueItemCreateManyEstoqueInput | EstoqueItemCreateManyEstoqueInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioEstoqueCreateWithoutEstoqueInput = {
    usuario: UsuarioCreateNestedOneWithoutEstoquesInput
  }

  export type UsuarioEstoqueUncheckedCreateWithoutEstoqueInput = {
    usuarioId: number
  }

  export type UsuarioEstoqueCreateOrConnectWithoutEstoqueInput = {
    where: UsuarioEstoqueWhereUniqueInput
    create: XOR<UsuarioEstoqueCreateWithoutEstoqueInput, UsuarioEstoqueUncheckedCreateWithoutEstoqueInput>
  }

  export type UsuarioEstoqueCreateManyEstoqueInputEnvelope = {
    data: UsuarioEstoqueCreateManyEstoqueInput | UsuarioEstoqueCreateManyEstoqueInput[]
    skipDuplicates?: boolean
  }

  export type TransferenciaUpsertWithWhereUniqueWithoutDestinoInput = {
    where: TransferenciaWhereUniqueInput
    update: XOR<TransferenciaUpdateWithoutDestinoInput, TransferenciaUncheckedUpdateWithoutDestinoInput>
    create: XOR<TransferenciaCreateWithoutDestinoInput, TransferenciaUncheckedCreateWithoutDestinoInput>
  }

  export type TransferenciaUpdateWithWhereUniqueWithoutDestinoInput = {
    where: TransferenciaWhereUniqueInput
    data: XOR<TransferenciaUpdateWithoutDestinoInput, TransferenciaUncheckedUpdateWithoutDestinoInput>
  }

  export type TransferenciaUpdateManyWithWhereWithoutDestinoInput = {
    where: TransferenciaScalarWhereInput
    data: XOR<TransferenciaUpdateManyMutationInput, TransferenciaUncheckedUpdateManyWithoutDestinoInput>
  }

  export type TransferenciaUpsertWithWhereUniqueWithoutOrigemInput = {
    where: TransferenciaWhereUniqueInput
    update: XOR<TransferenciaUpdateWithoutOrigemInput, TransferenciaUncheckedUpdateWithoutOrigemInput>
    create: XOR<TransferenciaCreateWithoutOrigemInput, TransferenciaUncheckedCreateWithoutOrigemInput>
  }

  export type TransferenciaUpdateWithWhereUniqueWithoutOrigemInput = {
    where: TransferenciaWhereUniqueInput
    data: XOR<TransferenciaUpdateWithoutOrigemInput, TransferenciaUncheckedUpdateWithoutOrigemInput>
  }

  export type TransferenciaUpdateManyWithWhereWithoutOrigemInput = {
    where: TransferenciaScalarWhereInput
    data: XOR<TransferenciaUpdateManyMutationInput, TransferenciaUncheckedUpdateManyWithoutOrigemInput>
  }

  export type EstoqueItemUpsertWithWhereUniqueWithoutEstoqueInput = {
    where: EstoqueItemWhereUniqueInput
    update: XOR<EstoqueItemUpdateWithoutEstoqueInput, EstoqueItemUncheckedUpdateWithoutEstoqueInput>
    create: XOR<EstoqueItemCreateWithoutEstoqueInput, EstoqueItemUncheckedCreateWithoutEstoqueInput>
  }

  export type EstoqueItemUpdateWithWhereUniqueWithoutEstoqueInput = {
    where: EstoqueItemWhereUniqueInput
    data: XOR<EstoqueItemUpdateWithoutEstoqueInput, EstoqueItemUncheckedUpdateWithoutEstoqueInput>
  }

  export type EstoqueItemUpdateManyWithWhereWithoutEstoqueInput = {
    where: EstoqueItemScalarWhereInput
    data: XOR<EstoqueItemUpdateManyMutationInput, EstoqueItemUncheckedUpdateManyWithoutEstoqueInput>
  }

  export type UsuarioEstoqueUpsertWithWhereUniqueWithoutEstoqueInput = {
    where: UsuarioEstoqueWhereUniqueInput
    update: XOR<UsuarioEstoqueUpdateWithoutEstoqueInput, UsuarioEstoqueUncheckedUpdateWithoutEstoqueInput>
    create: XOR<UsuarioEstoqueCreateWithoutEstoqueInput, UsuarioEstoqueUncheckedCreateWithoutEstoqueInput>
  }

  export type UsuarioEstoqueUpdateWithWhereUniqueWithoutEstoqueInput = {
    where: UsuarioEstoqueWhereUniqueInput
    data: XOR<UsuarioEstoqueUpdateWithoutEstoqueInput, UsuarioEstoqueUncheckedUpdateWithoutEstoqueInput>
  }

  export type UsuarioEstoqueUpdateManyWithWhereWithoutEstoqueInput = {
    where: UsuarioEstoqueScalarWhereInput
    data: XOR<UsuarioEstoqueUpdateManyMutationInput, UsuarioEstoqueUncheckedUpdateManyWithoutEstoqueInput>
  }

  export type UsuarioCreateWithoutEstoquesInput = {
    nome?: string | null
    email: string
    matricula?: number | null
    senha?: string | null
    permissoes?: UsuarioPermissaoCreateNestedManyWithoutUsuarioInput
    passwordResetToken?: PasswordResetTokenCreateNestedManyWithoutUserInput
  }

  export type UsuarioUncheckedCreateWithoutEstoquesInput = {
    id?: number
    nome?: string | null
    email: string
    matricula?: number | null
    senha?: string | null
    permissoes?: UsuarioPermissaoUncheckedCreateNestedManyWithoutUsuarioInput
    passwordResetToken?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
  }

  export type UsuarioCreateOrConnectWithoutEstoquesInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutEstoquesInput, UsuarioUncheckedCreateWithoutEstoquesInput>
  }

  export type EstoqueCreateWithoutUsuariosInput = {
    nome: string
    transferenciasDestino?: TransferenciaCreateNestedManyWithoutDestinoInput
    transferenciasOrigem?: TransferenciaCreateNestedManyWithoutOrigemInput
    itens?: EstoqueItemCreateNestedManyWithoutEstoqueInput
  }

  export type EstoqueUncheckedCreateWithoutUsuariosInput = {
    id?: number
    nome: string
    transferenciasDestino?: TransferenciaUncheckedCreateNestedManyWithoutDestinoInput
    transferenciasOrigem?: TransferenciaUncheckedCreateNestedManyWithoutOrigemInput
    itens?: EstoqueItemUncheckedCreateNestedManyWithoutEstoqueInput
  }

  export type EstoqueCreateOrConnectWithoutUsuariosInput = {
    where: EstoqueWhereUniqueInput
    create: XOR<EstoqueCreateWithoutUsuariosInput, EstoqueUncheckedCreateWithoutUsuariosInput>
  }

  export type UsuarioUpsertWithoutEstoquesInput = {
    update: XOR<UsuarioUpdateWithoutEstoquesInput, UsuarioUncheckedUpdateWithoutEstoquesInput>
    create: XOR<UsuarioCreateWithoutEstoquesInput, UsuarioUncheckedCreateWithoutEstoquesInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutEstoquesInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutEstoquesInput, UsuarioUncheckedUpdateWithoutEstoquesInput>
  }

  export type UsuarioUpdateWithoutEstoquesInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    matricula?: NullableIntFieldUpdateOperationsInput | number | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    permissoes?: UsuarioPermissaoUpdateManyWithoutUsuarioNestedInput
    passwordResetToken?: PasswordResetTokenUpdateManyWithoutUserNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutEstoquesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    matricula?: NullableIntFieldUpdateOperationsInput | number | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    permissoes?: UsuarioPermissaoUncheckedUpdateManyWithoutUsuarioNestedInput
    passwordResetToken?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
  }

  export type EstoqueUpsertWithoutUsuariosInput = {
    update: XOR<EstoqueUpdateWithoutUsuariosInput, EstoqueUncheckedUpdateWithoutUsuariosInput>
    create: XOR<EstoqueCreateWithoutUsuariosInput, EstoqueUncheckedCreateWithoutUsuariosInput>
    where?: EstoqueWhereInput
  }

  export type EstoqueUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: EstoqueWhereInput
    data: XOR<EstoqueUpdateWithoutUsuariosInput, EstoqueUncheckedUpdateWithoutUsuariosInput>
  }

  export type EstoqueUpdateWithoutUsuariosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    transferenciasDestino?: TransferenciaUpdateManyWithoutDestinoNestedInput
    transferenciasOrigem?: TransferenciaUpdateManyWithoutOrigemNestedInput
    itens?: EstoqueItemUpdateManyWithoutEstoqueNestedInput
  }

  export type EstoqueUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    transferenciasDestino?: TransferenciaUncheckedUpdateManyWithoutDestinoNestedInput
    transferenciasOrigem?: TransferenciaUncheckedUpdateManyWithoutOrigemNestedInput
    itens?: EstoqueItemUncheckedUpdateManyWithoutEstoqueNestedInput
  }

  export type EquipamentoCreateWithoutTransferenciasInput = {
    nome?: string | null
    quantidade?: number | null
    data?: Date | string | null
    estoqueItens?: EstoqueItemCreateNestedManyWithoutItemInput
  }

  export type EquipamentoUncheckedCreateWithoutTransferenciasInput = {
    id?: number
    nome?: string | null
    quantidade?: number | null
    data?: Date | string | null
    estoqueItens?: EstoqueItemUncheckedCreateNestedManyWithoutItemInput
  }

  export type EquipamentoCreateOrConnectWithoutTransferenciasInput = {
    where: EquipamentoWhereUniqueInput
    create: XOR<EquipamentoCreateWithoutTransferenciasInput, EquipamentoUncheckedCreateWithoutTransferenciasInput>
  }

  export type EstoqueCreateWithoutTransferenciasOrigemInput = {
    nome: string
    transferenciasDestino?: TransferenciaCreateNestedManyWithoutDestinoInput
    itens?: EstoqueItemCreateNestedManyWithoutEstoqueInput
    usuarios?: UsuarioEstoqueCreateNestedManyWithoutEstoqueInput
  }

  export type EstoqueUncheckedCreateWithoutTransferenciasOrigemInput = {
    id?: number
    nome: string
    transferenciasDestino?: TransferenciaUncheckedCreateNestedManyWithoutDestinoInput
    itens?: EstoqueItemUncheckedCreateNestedManyWithoutEstoqueInput
    usuarios?: UsuarioEstoqueUncheckedCreateNestedManyWithoutEstoqueInput
  }

  export type EstoqueCreateOrConnectWithoutTransferenciasOrigemInput = {
    where: EstoqueWhereUniqueInput
    create: XOR<EstoqueCreateWithoutTransferenciasOrigemInput, EstoqueUncheckedCreateWithoutTransferenciasOrigemInput>
  }

  export type EstoqueCreateWithoutTransferenciasDestinoInput = {
    nome: string
    transferenciasOrigem?: TransferenciaCreateNestedManyWithoutOrigemInput
    itens?: EstoqueItemCreateNestedManyWithoutEstoqueInput
    usuarios?: UsuarioEstoqueCreateNestedManyWithoutEstoqueInput
  }

  export type EstoqueUncheckedCreateWithoutTransferenciasDestinoInput = {
    id?: number
    nome: string
    transferenciasOrigem?: TransferenciaUncheckedCreateNestedManyWithoutOrigemInput
    itens?: EstoqueItemUncheckedCreateNestedManyWithoutEstoqueInput
    usuarios?: UsuarioEstoqueUncheckedCreateNestedManyWithoutEstoqueInput
  }

  export type EstoqueCreateOrConnectWithoutTransferenciasDestinoInput = {
    where: EstoqueWhereUniqueInput
    create: XOR<EstoqueCreateWithoutTransferenciasDestinoInput, EstoqueUncheckedCreateWithoutTransferenciasDestinoInput>
  }

  export type EquipamentoUpsertWithoutTransferenciasInput = {
    update: XOR<EquipamentoUpdateWithoutTransferenciasInput, EquipamentoUncheckedUpdateWithoutTransferenciasInput>
    create: XOR<EquipamentoCreateWithoutTransferenciasInput, EquipamentoUncheckedCreateWithoutTransferenciasInput>
    where?: EquipamentoWhereInput
  }

  export type EquipamentoUpdateToOneWithWhereWithoutTransferenciasInput = {
    where?: EquipamentoWhereInput
    data: XOR<EquipamentoUpdateWithoutTransferenciasInput, EquipamentoUncheckedUpdateWithoutTransferenciasInput>
  }

  export type EquipamentoUpdateWithoutTransferenciasInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estoqueItens?: EstoqueItemUpdateManyWithoutItemNestedInput
  }

  export type EquipamentoUncheckedUpdateWithoutTransferenciasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estoqueItens?: EstoqueItemUncheckedUpdateManyWithoutItemNestedInput
  }

  export type EstoqueUpsertWithoutTransferenciasOrigemInput = {
    update: XOR<EstoqueUpdateWithoutTransferenciasOrigemInput, EstoqueUncheckedUpdateWithoutTransferenciasOrigemInput>
    create: XOR<EstoqueCreateWithoutTransferenciasOrigemInput, EstoqueUncheckedCreateWithoutTransferenciasOrigemInput>
    where?: EstoqueWhereInput
  }

  export type EstoqueUpdateToOneWithWhereWithoutTransferenciasOrigemInput = {
    where?: EstoqueWhereInput
    data: XOR<EstoqueUpdateWithoutTransferenciasOrigemInput, EstoqueUncheckedUpdateWithoutTransferenciasOrigemInput>
  }

  export type EstoqueUpdateWithoutTransferenciasOrigemInput = {
    nome?: StringFieldUpdateOperationsInput | string
    transferenciasDestino?: TransferenciaUpdateManyWithoutDestinoNestedInput
    itens?: EstoqueItemUpdateManyWithoutEstoqueNestedInput
    usuarios?: UsuarioEstoqueUpdateManyWithoutEstoqueNestedInput
  }

  export type EstoqueUncheckedUpdateWithoutTransferenciasOrigemInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    transferenciasDestino?: TransferenciaUncheckedUpdateManyWithoutDestinoNestedInput
    itens?: EstoqueItemUncheckedUpdateManyWithoutEstoqueNestedInput
    usuarios?: UsuarioEstoqueUncheckedUpdateManyWithoutEstoqueNestedInput
  }

  export type EstoqueUpsertWithoutTransferenciasDestinoInput = {
    update: XOR<EstoqueUpdateWithoutTransferenciasDestinoInput, EstoqueUncheckedUpdateWithoutTransferenciasDestinoInput>
    create: XOR<EstoqueCreateWithoutTransferenciasDestinoInput, EstoqueUncheckedCreateWithoutTransferenciasDestinoInput>
    where?: EstoqueWhereInput
  }

  export type EstoqueUpdateToOneWithWhereWithoutTransferenciasDestinoInput = {
    where?: EstoqueWhereInput
    data: XOR<EstoqueUpdateWithoutTransferenciasDestinoInput, EstoqueUncheckedUpdateWithoutTransferenciasDestinoInput>
  }

  export type EstoqueUpdateWithoutTransferenciasDestinoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    transferenciasOrigem?: TransferenciaUpdateManyWithoutOrigemNestedInput
    itens?: EstoqueItemUpdateManyWithoutEstoqueNestedInput
    usuarios?: UsuarioEstoqueUpdateManyWithoutEstoqueNestedInput
  }

  export type EstoqueUncheckedUpdateWithoutTransferenciasDestinoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    transferenciasOrigem?: TransferenciaUncheckedUpdateManyWithoutOrigemNestedInput
    itens?: EstoqueItemUncheckedUpdateManyWithoutEstoqueNestedInput
    usuarios?: UsuarioEstoqueUncheckedUpdateManyWithoutEstoqueNestedInput
  }

  export type EstoqueCreateWithoutItensInput = {
    nome: string
    transferenciasDestino?: TransferenciaCreateNestedManyWithoutDestinoInput
    transferenciasOrigem?: TransferenciaCreateNestedManyWithoutOrigemInput
    usuarios?: UsuarioEstoqueCreateNestedManyWithoutEstoqueInput
  }

  export type EstoqueUncheckedCreateWithoutItensInput = {
    id?: number
    nome: string
    transferenciasDestino?: TransferenciaUncheckedCreateNestedManyWithoutDestinoInput
    transferenciasOrigem?: TransferenciaUncheckedCreateNestedManyWithoutOrigemInput
    usuarios?: UsuarioEstoqueUncheckedCreateNestedManyWithoutEstoqueInput
  }

  export type EstoqueCreateOrConnectWithoutItensInput = {
    where: EstoqueWhereUniqueInput
    create: XOR<EstoqueCreateWithoutItensInput, EstoqueUncheckedCreateWithoutItensInput>
  }

  export type EquipamentoCreateWithoutEstoqueItensInput = {
    nome?: string | null
    quantidade?: number | null
    data?: Date | string | null
    transferencias?: TransferenciaCreateNestedManyWithoutItemInput
  }

  export type EquipamentoUncheckedCreateWithoutEstoqueItensInput = {
    id?: number
    nome?: string | null
    quantidade?: number | null
    data?: Date | string | null
    transferencias?: TransferenciaUncheckedCreateNestedManyWithoutItemInput
  }

  export type EquipamentoCreateOrConnectWithoutEstoqueItensInput = {
    where: EquipamentoWhereUniqueInput
    create: XOR<EquipamentoCreateWithoutEstoqueItensInput, EquipamentoUncheckedCreateWithoutEstoqueItensInput>
  }

  export type EstoqueUpsertWithoutItensInput = {
    update: XOR<EstoqueUpdateWithoutItensInput, EstoqueUncheckedUpdateWithoutItensInput>
    create: XOR<EstoqueCreateWithoutItensInput, EstoqueUncheckedCreateWithoutItensInput>
    where?: EstoqueWhereInput
  }

  export type EstoqueUpdateToOneWithWhereWithoutItensInput = {
    where?: EstoqueWhereInput
    data: XOR<EstoqueUpdateWithoutItensInput, EstoqueUncheckedUpdateWithoutItensInput>
  }

  export type EstoqueUpdateWithoutItensInput = {
    nome?: StringFieldUpdateOperationsInput | string
    transferenciasDestino?: TransferenciaUpdateManyWithoutDestinoNestedInput
    transferenciasOrigem?: TransferenciaUpdateManyWithoutOrigemNestedInput
    usuarios?: UsuarioEstoqueUpdateManyWithoutEstoqueNestedInput
  }

  export type EstoqueUncheckedUpdateWithoutItensInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    transferenciasDestino?: TransferenciaUncheckedUpdateManyWithoutDestinoNestedInput
    transferenciasOrigem?: TransferenciaUncheckedUpdateManyWithoutOrigemNestedInput
    usuarios?: UsuarioEstoqueUncheckedUpdateManyWithoutEstoqueNestedInput
  }

  export type EquipamentoUpsertWithoutEstoqueItensInput = {
    update: XOR<EquipamentoUpdateWithoutEstoqueItensInput, EquipamentoUncheckedUpdateWithoutEstoqueItensInput>
    create: XOR<EquipamentoCreateWithoutEstoqueItensInput, EquipamentoUncheckedCreateWithoutEstoqueItensInput>
    where?: EquipamentoWhereInput
  }

  export type EquipamentoUpdateToOneWithWhereWithoutEstoqueItensInput = {
    where?: EquipamentoWhereInput
    data: XOR<EquipamentoUpdateWithoutEstoqueItensInput, EquipamentoUncheckedUpdateWithoutEstoqueItensInput>
  }

  export type EquipamentoUpdateWithoutEstoqueItensInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferencias?: TransferenciaUpdateManyWithoutItemNestedInput
  }

  export type EquipamentoUncheckedUpdateWithoutEstoqueItensInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transferencias?: TransferenciaUncheckedUpdateManyWithoutItemNestedInput
  }

  export type UsuarioPermissaoCreateWithoutPermissaoInput = {
    usuario: UsuarioCreateNestedOneWithoutPermissoesInput
  }

  export type UsuarioPermissaoUncheckedCreateWithoutPermissaoInput = {
    usuarioId: number
  }

  export type UsuarioPermissaoCreateOrConnectWithoutPermissaoInput = {
    where: UsuarioPermissaoWhereUniqueInput
    create: XOR<UsuarioPermissaoCreateWithoutPermissaoInput, UsuarioPermissaoUncheckedCreateWithoutPermissaoInput>
  }

  export type UsuarioPermissaoCreateManyPermissaoInputEnvelope = {
    data: UsuarioPermissaoCreateManyPermissaoInput | UsuarioPermissaoCreateManyPermissaoInput[]
    skipDuplicates?: boolean
  }

  export type PermissaoOnRouteCreateWithoutPermissaoInput = {
    route: RouteCreateNestedOneWithoutPermissoesInput
  }

  export type PermissaoOnRouteUncheckedCreateWithoutPermissaoInput = {
    id?: number
    routeId: number
  }

  export type PermissaoOnRouteCreateOrConnectWithoutPermissaoInput = {
    where: PermissaoOnRouteWhereUniqueInput
    create: XOR<PermissaoOnRouteCreateWithoutPermissaoInput, PermissaoOnRouteUncheckedCreateWithoutPermissaoInput>
  }

  export type PermissaoOnRouteCreateManyPermissaoInputEnvelope = {
    data: PermissaoOnRouteCreateManyPermissaoInput | PermissaoOnRouteCreateManyPermissaoInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioPermissaoUpsertWithWhereUniqueWithoutPermissaoInput = {
    where: UsuarioPermissaoWhereUniqueInput
    update: XOR<UsuarioPermissaoUpdateWithoutPermissaoInput, UsuarioPermissaoUncheckedUpdateWithoutPermissaoInput>
    create: XOR<UsuarioPermissaoCreateWithoutPermissaoInput, UsuarioPermissaoUncheckedCreateWithoutPermissaoInput>
  }

  export type UsuarioPermissaoUpdateWithWhereUniqueWithoutPermissaoInput = {
    where: UsuarioPermissaoWhereUniqueInput
    data: XOR<UsuarioPermissaoUpdateWithoutPermissaoInput, UsuarioPermissaoUncheckedUpdateWithoutPermissaoInput>
  }

  export type UsuarioPermissaoUpdateManyWithWhereWithoutPermissaoInput = {
    where: UsuarioPermissaoScalarWhereInput
    data: XOR<UsuarioPermissaoUpdateManyMutationInput, UsuarioPermissaoUncheckedUpdateManyWithoutPermissaoInput>
  }

  export type PermissaoOnRouteUpsertWithWhereUniqueWithoutPermissaoInput = {
    where: PermissaoOnRouteWhereUniqueInput
    update: XOR<PermissaoOnRouteUpdateWithoutPermissaoInput, PermissaoOnRouteUncheckedUpdateWithoutPermissaoInput>
    create: XOR<PermissaoOnRouteCreateWithoutPermissaoInput, PermissaoOnRouteUncheckedCreateWithoutPermissaoInput>
  }

  export type PermissaoOnRouteUpdateWithWhereUniqueWithoutPermissaoInput = {
    where: PermissaoOnRouteWhereUniqueInput
    data: XOR<PermissaoOnRouteUpdateWithoutPermissaoInput, PermissaoOnRouteUncheckedUpdateWithoutPermissaoInput>
  }

  export type PermissaoOnRouteUpdateManyWithWhereWithoutPermissaoInput = {
    where: PermissaoOnRouteScalarWhereInput
    data: XOR<PermissaoOnRouteUpdateManyMutationInput, PermissaoOnRouteUncheckedUpdateManyWithoutPermissaoInput>
  }

  export type PermissaoOnRouteScalarWhereInput = {
    AND?: PermissaoOnRouteScalarWhereInput | PermissaoOnRouteScalarWhereInput[]
    OR?: PermissaoOnRouteScalarWhereInput[]
    NOT?: PermissaoOnRouteScalarWhereInput | PermissaoOnRouteScalarWhereInput[]
    id?: IntFilter<"PermissaoOnRoute"> | number
    permissaoId?: IntFilter<"PermissaoOnRoute"> | number
    routeId?: IntFilter<"PermissaoOnRoute"> | number
  }

  export type UsuarioCreateWithoutPermissoesInput = {
    nome?: string | null
    email: string
    matricula?: number | null
    senha?: string | null
    estoques?: UsuarioEstoqueCreateNestedManyWithoutUsuarioInput
    passwordResetToken?: PasswordResetTokenCreateNestedManyWithoutUserInput
  }

  export type UsuarioUncheckedCreateWithoutPermissoesInput = {
    id?: number
    nome?: string | null
    email: string
    matricula?: number | null
    senha?: string | null
    estoques?: UsuarioEstoqueUncheckedCreateNestedManyWithoutUsuarioInput
    passwordResetToken?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
  }

  export type UsuarioCreateOrConnectWithoutPermissoesInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutPermissoesInput, UsuarioUncheckedCreateWithoutPermissoesInput>
  }

  export type PermissaoCreateWithoutUsuariosInput = {
    nome: string
    rotasPermitidas?: PermissaoOnRouteCreateNestedManyWithoutPermissaoInput
  }

  export type PermissaoUncheckedCreateWithoutUsuariosInput = {
    id?: number
    nome: string
    rotasPermitidas?: PermissaoOnRouteUncheckedCreateNestedManyWithoutPermissaoInput
  }

  export type PermissaoCreateOrConnectWithoutUsuariosInput = {
    where: PermissaoWhereUniqueInput
    create: XOR<PermissaoCreateWithoutUsuariosInput, PermissaoUncheckedCreateWithoutUsuariosInput>
  }

  export type UsuarioUpsertWithoutPermissoesInput = {
    update: XOR<UsuarioUpdateWithoutPermissoesInput, UsuarioUncheckedUpdateWithoutPermissoesInput>
    create: XOR<UsuarioCreateWithoutPermissoesInput, UsuarioUncheckedCreateWithoutPermissoesInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutPermissoesInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutPermissoesInput, UsuarioUncheckedUpdateWithoutPermissoesInput>
  }

  export type UsuarioUpdateWithoutPermissoesInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    matricula?: NullableIntFieldUpdateOperationsInput | number | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    estoques?: UsuarioEstoqueUpdateManyWithoutUsuarioNestedInput
    passwordResetToken?: PasswordResetTokenUpdateManyWithoutUserNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutPermissoesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    matricula?: NullableIntFieldUpdateOperationsInput | number | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    estoques?: UsuarioEstoqueUncheckedUpdateManyWithoutUsuarioNestedInput
    passwordResetToken?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PermissaoUpsertWithoutUsuariosInput = {
    update: XOR<PermissaoUpdateWithoutUsuariosInput, PermissaoUncheckedUpdateWithoutUsuariosInput>
    create: XOR<PermissaoCreateWithoutUsuariosInput, PermissaoUncheckedCreateWithoutUsuariosInput>
    where?: PermissaoWhereInput
  }

  export type PermissaoUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: PermissaoWhereInput
    data: XOR<PermissaoUpdateWithoutUsuariosInput, PermissaoUncheckedUpdateWithoutUsuariosInput>
  }

  export type PermissaoUpdateWithoutUsuariosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    rotasPermitidas?: PermissaoOnRouteUpdateManyWithoutPermissaoNestedInput
  }

  export type PermissaoUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    rotasPermitidas?: PermissaoOnRouteUncheckedUpdateManyWithoutPermissaoNestedInput
  }

  export type PermissaoOnRouteCreateWithoutRouteInput = {
    permissao: PermissaoCreateNestedOneWithoutRotasPermitidasInput
  }

  export type PermissaoOnRouteUncheckedCreateWithoutRouteInput = {
    id?: number
    permissaoId: number
  }

  export type PermissaoOnRouteCreateOrConnectWithoutRouteInput = {
    where: PermissaoOnRouteWhereUniqueInput
    create: XOR<PermissaoOnRouteCreateWithoutRouteInput, PermissaoOnRouteUncheckedCreateWithoutRouteInput>
  }

  export type PermissaoOnRouteCreateManyRouteInputEnvelope = {
    data: PermissaoOnRouteCreateManyRouteInput | PermissaoOnRouteCreateManyRouteInput[]
    skipDuplicates?: boolean
  }

  export type PermissaoOnRouteUpsertWithWhereUniqueWithoutRouteInput = {
    where: PermissaoOnRouteWhereUniqueInput
    update: XOR<PermissaoOnRouteUpdateWithoutRouteInput, PermissaoOnRouteUncheckedUpdateWithoutRouteInput>
    create: XOR<PermissaoOnRouteCreateWithoutRouteInput, PermissaoOnRouteUncheckedCreateWithoutRouteInput>
  }

  export type PermissaoOnRouteUpdateWithWhereUniqueWithoutRouteInput = {
    where: PermissaoOnRouteWhereUniqueInput
    data: XOR<PermissaoOnRouteUpdateWithoutRouteInput, PermissaoOnRouteUncheckedUpdateWithoutRouteInput>
  }

  export type PermissaoOnRouteUpdateManyWithWhereWithoutRouteInput = {
    where: PermissaoOnRouteScalarWhereInput
    data: XOR<PermissaoOnRouteUpdateManyMutationInput, PermissaoOnRouteUncheckedUpdateManyWithoutRouteInput>
  }

  export type PermissaoCreateWithoutRotasPermitidasInput = {
    nome: string
    usuarios?: UsuarioPermissaoCreateNestedManyWithoutPermissaoInput
  }

  export type PermissaoUncheckedCreateWithoutRotasPermitidasInput = {
    id?: number
    nome: string
    usuarios?: UsuarioPermissaoUncheckedCreateNestedManyWithoutPermissaoInput
  }

  export type PermissaoCreateOrConnectWithoutRotasPermitidasInput = {
    where: PermissaoWhereUniqueInput
    create: XOR<PermissaoCreateWithoutRotasPermitidasInput, PermissaoUncheckedCreateWithoutRotasPermitidasInput>
  }

  export type RouteCreateWithoutPermissoesInput = {
    nome: string
    path: string
    createdAt?: Date | string
  }

  export type RouteUncheckedCreateWithoutPermissoesInput = {
    id?: number
    nome: string
    path: string
    createdAt?: Date | string
  }

  export type RouteCreateOrConnectWithoutPermissoesInput = {
    where: RouteWhereUniqueInput
    create: XOR<RouteCreateWithoutPermissoesInput, RouteUncheckedCreateWithoutPermissoesInput>
  }

  export type PermissaoUpsertWithoutRotasPermitidasInput = {
    update: XOR<PermissaoUpdateWithoutRotasPermitidasInput, PermissaoUncheckedUpdateWithoutRotasPermitidasInput>
    create: XOR<PermissaoCreateWithoutRotasPermitidasInput, PermissaoUncheckedCreateWithoutRotasPermitidasInput>
    where?: PermissaoWhereInput
  }

  export type PermissaoUpdateToOneWithWhereWithoutRotasPermitidasInput = {
    where?: PermissaoWhereInput
    data: XOR<PermissaoUpdateWithoutRotasPermitidasInput, PermissaoUncheckedUpdateWithoutRotasPermitidasInput>
  }

  export type PermissaoUpdateWithoutRotasPermitidasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuarioPermissaoUpdateManyWithoutPermissaoNestedInput
  }

  export type PermissaoUncheckedUpdateWithoutRotasPermitidasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuarioPermissaoUncheckedUpdateManyWithoutPermissaoNestedInput
  }

  export type RouteUpsertWithoutPermissoesInput = {
    update: XOR<RouteUpdateWithoutPermissoesInput, RouteUncheckedUpdateWithoutPermissoesInput>
    create: XOR<RouteCreateWithoutPermissoesInput, RouteUncheckedCreateWithoutPermissoesInput>
    where?: RouteWhereInput
  }

  export type RouteUpdateToOneWithWhereWithoutPermissoesInput = {
    where?: RouteWhereInput
    data: XOR<RouteUpdateWithoutPermissoesInput, RouteUncheckedUpdateWithoutPermissoesInput>
  }

  export type RouteUpdateWithoutPermissoesInput = {
    nome?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RouteUncheckedUpdateWithoutPermissoesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioPermissaoCreateManyUsuarioInput = {
    permissaoId: number
  }

  export type UsuarioEstoqueCreateManyUsuarioInput = {
    estoqueId: number
  }

  export type PasswordResetTokenCreateManyUserInput = {
    id?: number
    tokenHash: string
    expiresAt: Date | string
    usedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type UsuarioPermissaoUpdateWithoutUsuarioInput = {
    permissao?: PermissaoUpdateOneRequiredWithoutUsuariosNestedInput
  }

  export type UsuarioPermissaoUncheckedUpdateWithoutUsuarioInput = {
    permissaoId?: IntFieldUpdateOperationsInput | number
  }

  export type UsuarioPermissaoUncheckedUpdateManyWithoutUsuarioInput = {
    permissaoId?: IntFieldUpdateOperationsInput | number
  }

  export type UsuarioEstoqueUpdateWithoutUsuarioInput = {
    estoque?: EstoqueUpdateOneRequiredWithoutUsuariosNestedInput
  }

  export type UsuarioEstoqueUncheckedUpdateWithoutUsuarioInput = {
    estoqueId?: IntFieldUpdateOperationsInput | number
  }

  export type UsuarioEstoqueUncheckedUpdateManyWithoutUsuarioInput = {
    estoqueId?: IntFieldUpdateOperationsInput | number
  }

  export type PasswordResetTokenUpdateWithoutUserInput = {
    tokenHash?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PasswordResetTokenUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    tokenHash?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PasswordResetTokenUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    tokenHash?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransferenciaCreateManyItemInput = {
    id?: number
    estoqueOrigemId: number
    estoqueDestinoId: number
    quantidade: number
    dataTransferencia?: Date | string | null
  }

  export type EstoqueItemCreateManyItemInput = {
    id?: number
    estoqueId: number
    quantidade: number
  }

  export type TransferenciaUpdateWithoutItemInput = {
    quantidade?: IntFieldUpdateOperationsInput | number
    dataTransferencia?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    origem?: EstoqueUpdateOneRequiredWithoutTransferenciasOrigemNestedInput
    destino?: EstoqueUpdateOneRequiredWithoutTransferenciasDestinoNestedInput
  }

  export type TransferenciaUncheckedUpdateWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    estoqueOrigemId?: IntFieldUpdateOperationsInput | number
    estoqueDestinoId?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    dataTransferencia?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransferenciaUncheckedUpdateManyWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    estoqueOrigemId?: IntFieldUpdateOperationsInput | number
    estoqueDestinoId?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    dataTransferencia?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EstoqueItemUpdateWithoutItemInput = {
    quantidade?: IntFieldUpdateOperationsInput | number
    estoque?: EstoqueUpdateOneRequiredWithoutItensNestedInput
  }

  export type EstoqueItemUncheckedUpdateWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    estoqueId?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
  }

  export type EstoqueItemUncheckedUpdateManyWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    estoqueId?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
  }

  export type TransferenciaCreateManyDestinoInput = {
    id?: number
    itemId: number
    estoqueOrigemId: number
    quantidade: number
    dataTransferencia?: Date | string | null
  }

  export type TransferenciaCreateManyOrigemInput = {
    id?: number
    itemId: number
    estoqueDestinoId: number
    quantidade: number
    dataTransferencia?: Date | string | null
  }

  export type EstoqueItemCreateManyEstoqueInput = {
    id?: number
    itemId: number
    quantidade: number
  }

  export type UsuarioEstoqueCreateManyEstoqueInput = {
    usuarioId: number
  }

  export type TransferenciaUpdateWithoutDestinoInput = {
    quantidade?: IntFieldUpdateOperationsInput | number
    dataTransferencia?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item?: EquipamentoUpdateOneRequiredWithoutTransferenciasNestedInput
    origem?: EstoqueUpdateOneRequiredWithoutTransferenciasOrigemNestedInput
  }

  export type TransferenciaUncheckedUpdateWithoutDestinoInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    estoqueOrigemId?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    dataTransferencia?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransferenciaUncheckedUpdateManyWithoutDestinoInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    estoqueOrigemId?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    dataTransferencia?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransferenciaUpdateWithoutOrigemInput = {
    quantidade?: IntFieldUpdateOperationsInput | number
    dataTransferencia?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item?: EquipamentoUpdateOneRequiredWithoutTransferenciasNestedInput
    destino?: EstoqueUpdateOneRequiredWithoutTransferenciasDestinoNestedInput
  }

  export type TransferenciaUncheckedUpdateWithoutOrigemInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    estoqueDestinoId?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    dataTransferencia?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransferenciaUncheckedUpdateManyWithoutOrigemInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    estoqueDestinoId?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
    dataTransferencia?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EstoqueItemUpdateWithoutEstoqueInput = {
    quantidade?: IntFieldUpdateOperationsInput | number
    item?: EquipamentoUpdateOneRequiredWithoutEstoqueItensNestedInput
  }

  export type EstoqueItemUncheckedUpdateWithoutEstoqueInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
  }

  export type EstoqueItemUncheckedUpdateManyWithoutEstoqueInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantidade?: IntFieldUpdateOperationsInput | number
  }

  export type UsuarioEstoqueUpdateWithoutEstoqueInput = {
    usuario?: UsuarioUpdateOneRequiredWithoutEstoquesNestedInput
  }

  export type UsuarioEstoqueUncheckedUpdateWithoutEstoqueInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
  }

  export type UsuarioEstoqueUncheckedUpdateManyWithoutEstoqueInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
  }

  export type UsuarioPermissaoCreateManyPermissaoInput = {
    usuarioId: number
  }

  export type PermissaoOnRouteCreateManyPermissaoInput = {
    id?: number
    routeId: number
  }

  export type UsuarioPermissaoUpdateWithoutPermissaoInput = {
    usuario?: UsuarioUpdateOneRequiredWithoutPermissoesNestedInput
  }

  export type UsuarioPermissaoUncheckedUpdateWithoutPermissaoInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
  }

  export type UsuarioPermissaoUncheckedUpdateManyWithoutPermissaoInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
  }

  export type PermissaoOnRouteUpdateWithoutPermissaoInput = {
    route?: RouteUpdateOneRequiredWithoutPermissoesNestedInput
  }

  export type PermissaoOnRouteUncheckedUpdateWithoutPermissaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    routeId?: IntFieldUpdateOperationsInput | number
  }

  export type PermissaoOnRouteUncheckedUpdateManyWithoutPermissaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    routeId?: IntFieldUpdateOperationsInput | number
  }

  export type PermissaoOnRouteCreateManyRouteInput = {
    id?: number
    permissaoId: number
  }

  export type PermissaoOnRouteUpdateWithoutRouteInput = {
    permissao?: PermissaoUpdateOneRequiredWithoutRotasPermitidasNestedInput
  }

  export type PermissaoOnRouteUncheckedUpdateWithoutRouteInput = {
    id?: IntFieldUpdateOperationsInput | number
    permissaoId?: IntFieldUpdateOperationsInput | number
  }

  export type PermissaoOnRouteUncheckedUpdateManyWithoutRouteInput = {
    id?: IntFieldUpdateOperationsInput | number
    permissaoId?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}